83335f581c01e4f795045db8bae9c18e
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));

var _handlers;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.provideValue = provideValue;
exports.handlers = exports.next = exports.NEXT = void 0;

var _parseEffect = _interopRequireDefault(require("./parseEffect"));

var _keys = require("../shared/keys");

var _asEffect = require("../utils/asEffect");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var NEXT = Object.create(null);
exports.NEXT = NEXT;

var next = function next() {
  return NEXT;
};

exports.next = next;
var handlers = (_handlers = {}, (0, _defineProperty2.default)(_handlers, _keys.ACTION_CHANNEL, 'actionChannel'), (0, _defineProperty2.default)(_handlers, _keys.ALL, function (providers, value) {
  if (providers.all) {
    return providers.all(value, next);
  }

  return NEXT;
}), (0, _defineProperty2.default)(_handlers, _keys.CALL, 'call'), (0, _defineProperty2.default)(_handlers, _keys.CANCEL, 'cancel'), (0, _defineProperty2.default)(_handlers, _keys.CANCELLED, 'cancelled'), (0, _defineProperty2.default)(_handlers, _keys.CPS, 'cps'), (0, _defineProperty2.default)(_handlers, _keys.FLUSH, 'flush'), (0, _defineProperty2.default)(_handlers, _keys.FORK, function (providers, value) {
  var effect = _asEffect.asEffect.fork(value);

  if (providers.fork && !effect.detached) {
    return providers.fork(effect, next);
  }

  if (providers.spawn && effect.detached) {
    return providers.spawn(effect, next);
  }

  return NEXT;
}), (0, _defineProperty2.default)(_handlers, _keys.GET_CONTEXT, 'getContext'), (0, _defineProperty2.default)(_handlers, _keys.JOIN, 'join'), (0, _defineProperty2.default)(_handlers, _keys.PUT, 'put'), (0, _defineProperty2.default)(_handlers, _keys.RACE, 'race'), (0, _defineProperty2.default)(_handlers, _keys.SELECT, 'select'), (0, _defineProperty2.default)(_handlers, _keys.SET_CONTEXT, 'setContext'), (0, _defineProperty2.default)(_handlers, _keys.TAKE, 'take'), _handlers);
exports.handlers = handlers;

function provideValue(providers, value) {
  if (providers) {
    var effectType = (0, _parseEffect.default)(value).type;
    var handler = handlers[effectType];

    if (typeof handler === 'string' && handler in providers) {
      var effect = _asEffect.asEffect[handler](value);

      return providers[handler](effect, next);
    }

    if (typeof handler === 'function') {
      return handler(providers, value);
    }
  }

  return NEXT;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZpZGVWYWx1ZS5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInByb3ZpZGVWYWx1ZSIsImhhbmRsZXJzIiwibmV4dCIsIk5FWFQiLCJfcGFyc2VFZmZlY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9rZXlzIiwiX2FzRWZmZWN0Iiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjcmVhdGUiLCJBQ1RJT05fQ0hBTk5FTCIsIkFMTCIsInByb3ZpZGVycyIsImFsbCIsIkNBTEwiLCJDQU5DRUwiLCJDQU5DRUxMRUQiLCJDUFMiLCJGTFVTSCIsIkZPUksiLCJlZmZlY3QiLCJhc0VmZmVjdCIsImZvcmsiLCJkZXRhY2hlZCIsInNwYXduIiwiR0VUX0NPTlRFWFQiLCJKT0lOIiwiUFVUIiwiUkFDRSIsIlNFTEVDVCIsIlNFVF9DT05URVhUIiwiVEFLRSIsImVmZmVjdFR5cGUiLCJ0eXBlIiwiaGFuZGxlciJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBRUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDM0NDLEVBQUFBLEtBQUssRUFBRTtBQURvQyxDQUE3QztBQUdBRCxPQUFPLENBQUNFLFlBQVIsR0FBdUJBLFlBQXZCO0FBQ0FGLE9BQU8sQ0FBQ0csUUFBUixHQUFtQkgsT0FBTyxDQUFDSSxJQUFSLEdBQWVKLE9BQU8sQ0FBQ0ssSUFBUixHQUFlLEtBQUssQ0FBdEQ7O0FBRUEsSUFBSUMsWUFBWSxHQUFHQyxzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLGVBQUQsQ0FBUixDQUF6Qzs7QUFFQSxJQUFJQyxLQUFLLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQUFuQjs7QUFFQSxJQUFJRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxtQkFBRCxDQUF2Qjs7QUFFQSxTQUFTRCxzQkFBVCxDQUFnQ0ksR0FBaEMsRUFBcUM7QUFBRSxT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UUFBSSxPQUFPbUMsT0FBUCxLQUFtQixVQUF2QixFQUFtQztBQUNqQyxhQUFPQSxPQUFPLENBQUN0QixTQUFELEVBQVloQixLQUFaLENBQWQ7QUFDRDtBQUNGOztBQUVELFNBQU9JLElBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5wcm92aWRlVmFsdWUgPSBwcm92aWRlVmFsdWU7XG5leHBvcnRzLmhhbmRsZXJzID0gZXhwb3J0cy5uZXh0ID0gZXhwb3J0cy5ORVhUID0gdm9pZCAwO1xuXG52YXIgX3BhcnNlRWZmZWN0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9wYXJzZUVmZmVjdFwiKSk7XG5cbnZhciBfa2V5cyA9IHJlcXVpcmUoXCIuLi9zaGFyZWQva2V5c1wiKTtcblxudmFyIF9hc0VmZmVjdCA9IHJlcXVpcmUoXCIuLi91dGlscy9hc0VmZmVjdFwiKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuY29uc3QgTkVYVCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5leHBvcnRzLk5FWFQgPSBORVhUO1xuXG5jb25zdCBuZXh0ID0gKCkgPT4gTkVYVDtcblxuZXhwb3J0cy5uZXh0ID0gbmV4dDtcbmNvbnN0IGhhbmRsZXJzID0ge1xuICBbX2tleXMuQUNUSU9OX0NIQU5ORUxdOiAnYWN0aW9uQ2hhbm5lbCcsXG5cbiAgW19rZXlzLkFMTF0ocHJvdmlkZXJzLCB2YWx1ZSkge1xuICAgIGlmIChwcm92aWRlcnMuYWxsKSB7XG4gICAgICByZXR1cm4gcHJvdmlkZXJzLmFsbCh2YWx1ZSwgbmV4dCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIE5FWFQ7XG4gIH0sXG5cbiAgW19rZXlzLkNBTExdOiAnY2FsbCcsXG4gIFtfa2V5cy5DQU5DRUxdOiAnY2FuY2VsJyxcbiAgW19rZXlzLkNBTkNFTExFRF06ICdjYW5jZWxsZWQnLFxuICBbX2tleXMuQ1BTXTogJ2NwcycsXG4gIFtfa2V5cy5GTFVTSF06ICdmbHVzaCcsXG5cbiAgW19rZXlzLkZPUktdKHByb3ZpZGVycywgdmFsdWUpIHtcbiAgICBjb25zdCBlZmZlY3QgPSBfYXNFZmZlY3QuYXNFZmZlY3QuZm9yayh2YWx1ZSk7XG5cbiAgICBpZiAocHJvdmlkZXJzLmZvcmsgJiYgIWVmZmVjdC5kZXRhY2hlZCkge1xuICAgICAgcmV0dXJuIHByb3ZpZGVycy5mb3JrKGVmZmVjdCwgbmV4dCk7XG4gICAgfVxuXG4gICAgaWYgKHByb3ZpZGVycy5zcGF3biAmJiBlZmZlY3QuZGV0YWNoZWQpIHtcbiAgICAgIHJldHVybiBwcm92aWRlcnMuc3Bhd24oZWZmZWN0LCBuZXh0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gTkVYVDtcbiAgfSxcblxuICBbX2tleXMuR0VUX0NPTlRFWFRdOiAnZ2V0Q29udGV4dCcsXG4gIFtfa2V5cy5KT0lOXTogJ2pvaW4nLFxuICBbX2tleXMuUFVUXTogJ3B1dCcsXG4gIFtfa2V5cy5SQUNFXTogJ3JhY2UnLFxuICBbX2tleXMuU0VMRUNUXTogJ3NlbGVjdCcsXG4gIFtfa2V5cy5TRVRfQ09OVEVYVF06ICdzZXRDb250ZXh0JyxcbiAgW19rZXlzLlRBS0VdOiAndGFrZSdcbn07XG5leHBvcnRzLmhhbmRsZXJzID0gaGFuZGxlcnM7XG5cbmZ1bmN0aW9uIHByb3ZpZGVWYWx1ZShwcm92aWRlcnMsIHZhbHVlKSB7XG4gIGlmIChwcm92aWRlcnMpIHtcbiAgICBjb25zdCBlZmZlY3RUeXBlID0gKDAsIF9wYXJzZUVmZmVjdC5kZWZhdWx0KSh2YWx1ZSkudHlwZTtcbiAgICBjb25zdCBoYW5kbGVyID0gaGFuZGxlcnNbZWZmZWN0VHlwZV07XG5cbiAgICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICdzdHJpbmcnICYmIGhhbmRsZXIgaW4gcHJvdmlkZXJzKSB7XG4gICAgICBjb25zdCBlZmZlY3QgPSBfYXNFZmZlY3QuYXNFZmZlY3RbaGFuZGxlcl0odmFsdWUpO1xuXG4gICAgICByZXR1cm4gcHJvdmlkZXJzW2hhbmRsZXJdKGVmZmVjdCwgbmV4dCk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gaGFuZGxlcihwcm92aWRlcnMsIHZhbHVlKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gTkVYVDtcbn0iXX0=