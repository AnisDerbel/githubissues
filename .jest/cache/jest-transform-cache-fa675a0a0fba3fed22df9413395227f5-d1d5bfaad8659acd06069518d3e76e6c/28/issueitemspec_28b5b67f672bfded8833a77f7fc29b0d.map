{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/components/__tests__/issueitem.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { mount, ReactWrapper, configure } from 'enzyme';\nimport IssueItem, { IssueItemProps } from '../IssueItem';\nimport Adapter from '@wojtekmaj/enzyme-adapter-react-17';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { Issue } from '../../redux/repo/reducer';\nimport { repoIssuesMock } from '../../__mocks__/repo';\nimport theme from '../../theme';\nimport Labels from '../Labels';\nimport Open from '../../assets/svgs/open.svg';\nimport Close from '../../assets/svgs/closed.svg';\n\nconfigure({ adapter: new Adapter() });\ntype ComponentWrapper = ReactWrapper<IssueItemProps, void, React.Component>;\n\nlet component: ComponentWrapper;\nconst onPress = jest.fn();\n\nconst getOpenIcon = () => component.find(Open);\nconst getCloseIcon = () => component.find(Close);\nconst getLabels = () => component.find(Labels);\ndescribe('IssueItem', () => {\n  const renderComponent = (item: Issue): ComponentWrapper =>\n    mount(\n      <PaperProvider theme={theme}>\n        <IssueItem item={item} onPress={onPress} />\n      </PaperProvider>,\n    );\n  beforeEach(() => {\n    component = renderComponent(repoIssuesMock.data[0]).find(IssueItem);\n  });\n\n  it('should be pressable', () => {\n    component.props().onPress(repoIssuesMock.data[0].html_url);\n    expect(onPress).toHaveBeenCalledTimes(1);\n    expect(onPress).toHaveBeenCalledWith(repoIssuesMock.data[0].html_url);\n  });\n\n  it('should render Labels correctly', () => {\n    expect(getLabels().exists()).toBeTruthy();\n  });\n\n  describe('no labels available', () => {\n    beforeEach(() => {\n      component = renderComponent({\n        ...repoIssuesMock.data[0],\n        labels: [],\n      }).find(IssueItem);\n    });\n\n    it('should not render Labels', () => {\n      expect(getLabels().exists()).toBeFalsy();\n    });\n  });\n  describe('open issue', () => {\n    beforeEach(() => {\n      component = renderComponent({\n        ...repoIssuesMock.data[0],\n        state: 'open',\n      }).find(IssueItem);\n\n      console.log(component.props());\n    });\n\n    it('should show open icon when state is open', () => {\n      expect(getOpenIcon().exists()).toBeTruthy();\n    });\n  });\n  describe('close issue', () => {\n    beforeEach(() => {\n      component = renderComponent({\n        ...repoIssuesMock.data[0],\n        state: 'closed',\n      }).find(IssueItem);\n    });\n\n    it('should show close icon when state is closed', () => {\n      expect(getCloseIcon().exists()).toBeTruthy();\n    });\n  });\n});\n"]}