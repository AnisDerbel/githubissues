{"version":3,"sources":["actions.ts"],"names":["ERepoActionTypes","repoActions","getRepoIssues","payload","type","GET_REPO_ISSUES","getRepoIssuesSuccess","GET_REPO_ISSUES_SUCCESS","setCurrentPage","SET_CURRENT_PAGE","getRepoIssuesFailed","GET_REPO_ISSUES_FAILED"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAGYA,gB;;;WAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;AAAAA,EAAAA,gB;GAAAA,gB,gCAAAA,gB;;AAkCL,IAAMC,WAAW,6BAAG;AACzBC,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAkC;AAAA;AAAA;AAAA;AAC/CC,MAAAA,IAAI,EAAEJ,gBAAgB,CAACK,eADwB;AAE/CF,MAAAA,OAAO,EAAPA;AAF+C;AAGhD,GAJwB;AAKzBG,EAAAA,oBAAoB,EAAE,8BAACH,OAAD,EAA8B;AAAA;AAAA;AAAA;AAClDC,MAAAA,IAAI,EAAEJ,gBAAgB,CAACO,uBAD2B;AAElDJ,MAAAA,OAAO,EAAPA;AAFkD;AAGnD,GARwB;AASzBK,EAAAA,cAAc,EAAE,wBAACL,OAAD,EAA8B;AAAA;AAAA;AAAA;AAC5CC,MAAAA,IAAI,EAAEJ,gBAAgB,CAACS,gBADqB;AAE5CN,MAAAA,OAAO,EAAPA;AAF4C;AAG7C,GAZwB;AAazBO,EAAAA,mBAAmB,EAAE,+BAAO;AAAA;AAAA;AAAA;AAC1BN,MAAAA,IAAI,EAAEJ,gBAAgB,CAACW;AADG;AAE3B;AAfwB,CAAH,CAAjB","sourcesContent":["import {Issue} from './reducer';\nimport {Action} from 'redux';\n\nexport enum ERepoActionTypes {\n  GET_REPO_ISSUES = 'REPO.GET_REPO_ISSUES',\n  GET_REPO_ISSUES_SUCCESS = 'REPO.GET_REPO_ISSUES_SUCCESS',\n  SET_CURRENT_PAGE = 'REPO.SET_CURRENT_PAGE',\n  GET_REPO_ISSUES_FAILED = 'REPO.GET_REPO_ISSUES_FAILED',\n}\n\ninterface IssuesResponse {\n  issues: Array<Issue>;\n  hasMoreIssues: boolean;\n  page: number;\n}\ninterface LoadPageIssues {\n  hasMoreIssues: boolean;\n  page: number;\n}\n\ninterface IRepoIssuesPayload {\n  page: number;\n  reset?: boolean;\n}\n\nexport interface IActionWithPayload<T, P> extends Action<T> {\n  payload: P;\n}\n\nexport type TRepoIssuesAction = IActionWithPayload<\n  ERepoActionTypes.GET_REPO_ISSUES,\n  {\n    page: number;\n    reset?: boolean;\n  }\n>;\n\nexport const repoActions = {\n  getRepoIssues: (payload: IRepoIssuesPayload) => ({\n    type: ERepoActionTypes.GET_REPO_ISSUES,\n    payload,\n  }),\n  getRepoIssuesSuccess: (payload: IssuesResponse) => ({\n    type: ERepoActionTypes.GET_REPO_ISSUES_SUCCESS,\n    payload,\n  }),\n  setCurrentPage: (payload: LoadPageIssues) => ({\n    type: ERepoActionTypes.SET_CURRENT_PAGE,\n    payload,\n  }),\n  getRepoIssuesFailed: () => ({\n    type: ERepoActionTypes.GET_REPO_ISSUES_FAILED,\n  }),\n};\n"]}