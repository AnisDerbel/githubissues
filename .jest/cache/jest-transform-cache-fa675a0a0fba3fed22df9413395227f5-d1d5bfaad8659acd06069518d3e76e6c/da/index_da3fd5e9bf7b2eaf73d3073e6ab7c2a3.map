{"version":3,"sources":["index.js"],"names":["Object","defineProperty","exports","value","default","expectSaga","_reduxSaga","require","is","_interopRequireWildcard","effects","_objectAssign","_interopRequireDefault","_array","_Map","_ArraySet","_logging","_async","_identity","_parseEffect","_provideValue","_object","_findDispatchableActionIndex","_sagaWrapper","_sagaIdFactory","_helpers","_asEffect","_expectations","_keys","obj","__esModule","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","all","fork","race","spawn","INIT_ACTION","type","defaultSagaWrapper","extractState","reducer","initialState","undefined","toJSON","object","Array","isArray","map","name","mapValues","lacksSagaWrapper","effect","isSagaWrapper","fn","exposableEffects","TAKE","PUT","RACE","CALL","CPS","FORK","GET_CONTEXT","SELECT","SET_CONTEXT","ACTION_CHANNEL","generator","sagaArgs","allEffects","effectStores","expectations","ioChannel","stdChannel","queuedActions","forkedTasks","outstandingForkEffects","outstandingActionChannelEffects","channelsToPatterns","dispatchPromise","Promise","resolve","nextSagaId","stopDirty","negateNextAssertion","isRunning","delayTime","iterator","mainTask","mainTaskPromise","providers","returnValue","errorValue","expectError","storeState","setReturnValue","setErrorValue","useProvidedValue","addEffect","processEffect","effectId","providedValue","provideValue","NEXT","e","refineYieldedValue","parsedEffect","localProviders","mapEffects","ALL","args","detached","context","isProvided","finalArgs","apply","result","defaultReducer","state","getAllPromises","taskPromise","then","addForkedTask","task","push","cancelMainTask","timeout","silenceTimeout","timedOut","warn","cancel","scheduleStop","promise","schedule","timeoutLength","DEFAULT_TIMEOUT","delay","queueAction","action","notifyListeners","put","dispatch","_delayTime","associateChannelWithPattern","channel","pattern","getDispatchableActions","index","actions","splice","event","effectStore","add","splitAt","reducerActions","sagaAction","forEach","addExpectation","expectation","io","getState","sagaMonitor","effectTriggered","effectResolved","forkEffect","actionChannelEffect","effectRejected","effectCancelled","logger","api","run","silentRun","withState","withReducer","provide","returns","throws","hasFinalState","apiDispatch","apiDelay","not","actionChannel","createEffectTesterFromEffects","asEffect","cps","getContext","putResolve","select","setContext","take","takeMaybe","like","createEffectTester","actionType","selector","checkExpectations","dispatchableAction","toPromise","start","sagaWrapper","runSaga","catch","stop","err","exposeResults","finalEffects","keys","reduce","memo","effectName","values","filter","length","newReducer","newProviders","coalesceProviders","createReturnExpectation","expected","createErrorExpectation","createStoreStateExpectation","time","storeKey","effectCreator","extractEffect","expectedEffect","createEffectExpectation","store"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = expectSaga;\n\nvar _reduxSaga = require(\"redux-saga\");\n\nvar is = _interopRequireWildcard(require(\"@redux-saga/is\"));\n\nvar effects = _interopRequireWildcard(require(\"redux-saga/effects\"));\n\nvar _objectAssign = _interopRequireDefault(require(\"object-assign\"));\n\nvar _array = require(\"../utils/array\");\n\nvar _Map = _interopRequireDefault(require(\"../utils/Map\"));\n\nvar _ArraySet = _interopRequireDefault(require(\"../utils/ArraySet\"));\n\nvar _logging = require(\"../utils/logging\");\n\nvar _async = require(\"../utils/async\");\n\nvar _identity = _interopRequireDefault(require(\"../utils/identity\"));\n\nvar _parseEffect = _interopRequireDefault(require(\"./parseEffect\"));\n\nvar _provideValue = require(\"./provideValue\");\n\nvar _object = require(\"../utils/object\");\n\nvar _findDispatchableActionIndex = _interopRequireDefault(require(\"./findDispatchableActionIndex\"));\n\nvar _sagaWrapper = _interopRequireWildcard(require(\"./sagaWrapper\"));\n\nvar _sagaIdFactory = _interopRequireDefault(require(\"./sagaIdFactory\"));\n\nvar _helpers = require(\"./providers/helpers\");\n\nvar _asEffect = require(\"../utils/asEffect\");\n\nvar _expectations = require(\"./expectations\");\n\nvar _keys = require(\"../shared/keys\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/* eslint-disable no-underscore-dangle */\nconst {\n  all,\n  call,\n  fork,\n  race,\n  spawn\n} = effects;\nconst INIT_ACTION = {\n  type: '@@redux-saga-test-plan/INIT'\n};\nconst defaultSagaWrapper = (0, _sagaWrapper.default)();\n\nfunction extractState(reducer, initialState) {\n  return initialState || reducer(undefined, INIT_ACTION);\n}\n\nfunction toJSON(object) {\n  if (Array.isArray(object)) {\n    return object.map(toJSON);\n  }\n\n  if (typeof object === 'function') {\n    return `@@redux-saga-test-plan/json/function/${object.name || '<anonymous>'}`;\n  }\n\n  if (typeof object === 'object' && object !== null) {\n    return (0, _object.mapValues)(object, toJSON);\n  }\n\n  return object;\n}\n\nfunction lacksSagaWrapper(value) {\n  const {\n    type,\n    effect\n  } = (0, _parseEffect.default)(value);\n  return type !== 'FORK' || !(0, _sagaWrapper.isSagaWrapper)(effect.fn);\n}\n\nconst exposableEffects = {\n  [_keys.TAKE]: 'take',\n  [_keys.PUT]: 'put',\n  [_keys.RACE]: 'race',\n  [_keys.CALL]: 'call',\n  [_keys.CPS]: 'cps',\n  [_keys.FORK]: 'fork',\n  [_keys.GET_CONTEXT]: 'getContext',\n  [_keys.SELECT]: 'select',\n  [_keys.SET_CONTEXT]: 'setContext',\n  [_keys.ACTION_CHANNEL]: 'actionChannel'\n};\n\nfunction expectSaga(generator, ...sagaArgs) {\n  const allEffects = [];\n  const effectStores = {\n    [_keys.TAKE]: new _ArraySet.default(),\n    [_keys.PUT]: new _ArraySet.default(),\n    [_keys.RACE]: new _ArraySet.default(),\n    [_keys.CALL]: new _ArraySet.default(),\n    [_keys.CPS]: new _ArraySet.default(),\n    [_keys.FORK]: new _ArraySet.default(),\n    [_keys.GET_CONTEXT]: new _ArraySet.default(),\n    [_keys.SET_CONTEXT]: new _ArraySet.default(),\n    [_keys.SELECT]: new _ArraySet.default(),\n    [_keys.ACTION_CHANNEL]: new _ArraySet.default()\n  };\n  const expectations = [];\n  const ioChannel = (0, _reduxSaga.stdChannel)();\n  const queuedActions = [];\n  const forkedTasks = [];\n  const outstandingForkEffects = new _Map.default();\n  const outstandingActionChannelEffects = new _Map.default();\n  const channelsToPatterns = new _Map.default();\n  const dispatchPromise = Promise.resolve();\n  const nextSagaId = (0, _sagaIdFactory.default)();\n  let stopDirty = false;\n  let negateNextAssertion = false;\n  let isRunning = false;\n  let delayTime = null;\n  let iterator;\n  let mainTask;\n  let mainTaskPromise;\n  let providers;\n  let returnValue;\n  let errorValue;\n  let expectError = false;\n  let storeState;\n\n  function setReturnValue(value) {\n    returnValue = value;\n  }\n\n  function setErrorValue(value) {\n    errorValue = value;\n  }\n\n  function useProvidedValue(value) {\n    function addEffect() {\n      // Because we are providing a return value and not hitting redux-saga, we\n      // need to manually store the effect so assertions on the effect work.\n      processEffect({\n        effectId: nextSagaId(),\n        effect: value\n      });\n    }\n\n    try {\n      const providedValue = (0, _provideValue.provideValue)(providers, value);\n\n      if (providedValue === _provideValue.NEXT) {\n        return value;\n      }\n\n      addEffect();\n      return providedValue;\n    } catch (e) {\n      addEffect();\n      throw e;\n    }\n  }\n\n  function refineYieldedValue(value) {\n    const parsedEffect = (0, _parseEffect.default)(value);\n    const localProviders = providers || {};\n    const {\n      type,\n      effect\n    } = parsedEffect;\n\n    switch (true) {\n      case type === _keys.RACE && !localProviders.race:\n        processEffect({\n          effectId: nextSagaId(),\n          effect: value\n        });\n        return race(parsedEffect.mapEffects(refineYieldedValue));\n\n      case type === _keys.ALL && !localProviders.all:\n        return all(parsedEffect.mapEffects(refineYieldedValue));\n\n      case type === _keys.FORK:\n        {\n          const {\n            args,\n            detached,\n            context,\n            fn\n          } = effect;\n          const providedValue = useProvidedValue(value);\n          const isProvided = providedValue !== value;\n\n          if (!detached && !isProvided) {\n            // Because we wrap the `fork`, we need to manually store the effect,\n            // so assertions on the `fork` work.\n            processEffect({\n              effectId: nextSagaId(),\n              effect: value\n            });\n            const finalArgs = args;\n            return fork((0, _sagaWrapper.default)(fn.name), fn.apply(context, finalArgs), refineYieldedValue);\n          }\n\n          if (detached && !isProvided) {\n            // Because we wrap the `spawn`, we need to manually store the effect,\n            // so assertions on the `spawn` work.\n            processEffect({\n              effectId: nextSagaId(),\n              effect: value\n            });\n            return spawn((0, _sagaWrapper.default)(fn.name), fn.apply(context, args), refineYieldedValue);\n          }\n\n          return providedValue;\n        }\n\n      case type === _keys.CALL:\n        {\n          const providedValue = useProvidedValue(value);\n\n          if (providedValue !== value) {\n            return providedValue;\n          } // Because we manually consume the `call`, we need to manually store\n          // the effect, so assertions on the `call` work.\n\n\n          processEffect({\n            effectId: nextSagaId(),\n            effect: value\n          });\n          const {\n            context,\n            fn,\n            args\n          } = effect;\n          const result = fn.apply(context, args);\n\n          if (is.iterator(result)) {\n            return call(defaultSagaWrapper, result, refineYieldedValue);\n          }\n\n          return result;\n        }\n      // Ensure we wrap yielded iterators (i.e. `yield someInnerSaga()`) for\n      // providers to work.\n\n      case is.iterator(value):\n        return useProvidedValue(defaultSagaWrapper(value, refineYieldedValue));\n\n      default:\n        return useProvidedValue(value);\n    }\n  }\n\n  function defaultReducer(state = storeState) {\n    return state;\n  }\n\n  let reducer = defaultReducer;\n\n  function getAllPromises() {\n    return new Promise(resolve => {\n      Promise.all([...forkedTasks.map(taskPromise), mainTaskPromise]).then(() => {\n        if (stopDirty) {\n          stopDirty = false;\n          resolve(getAllPromises());\n        }\n\n        resolve();\n      });\n    });\n  }\n\n  function addForkedTask(task) {\n    stopDirty = true;\n    forkedTasks.push(task);\n  }\n\n  function cancelMainTask(timeout, silenceTimeout, timedOut) {\n    if (!silenceTimeout && timedOut) {\n      (0, _logging.warn)(`Saga exceeded async timeout of ${timeout}ms`);\n    }\n\n    mainTask.cancel();\n    return mainTaskPromise;\n  }\n\n  function scheduleStop(timeout) {\n    let promise = (0, _async.schedule)(getAllPromises).then(() => false);\n    let silenceTimeout = false;\n    let timeoutLength;\n\n    if (typeof timeout === 'number') {\n      timeoutLength = timeout;\n    } else if (typeof timeout === 'object') {\n      silenceTimeout = timeout.silenceTimeout === true;\n\n      if ('timeout' in timeout) {\n        timeoutLength = timeout.timeout;\n      } else {\n        timeoutLength = expectSaga.DEFAULT_TIMEOUT;\n      }\n    }\n\n    if (typeof timeoutLength === 'number') {\n      promise = Promise.race([promise, (0, _async.delay)(timeoutLength).then(() => true)]);\n    }\n\n    return promise.then(timedOut => (0, _async.schedule)(cancelMainTask, [timeoutLength, silenceTimeout, timedOut]));\n  }\n\n  function queueAction(action) {\n    queuedActions.push(action);\n  }\n\n  function notifyListeners(action) {\n    ioChannel.put(action);\n  }\n\n  function dispatch(action) {\n    if (typeof action._delayTime === 'number') {\n      const {\n        _delayTime\n      } = action;\n      dispatchPromise.then(() => (0, _async.delay)(_delayTime)).then(() => {\n        storeState = reducer(storeState, action);\n        notifyListeners(action);\n      });\n    } else {\n      storeState = reducer(storeState, action);\n      dispatchPromise.then(() => notifyListeners(action));\n    }\n  }\n\n  function associateChannelWithPattern(channel, pattern) {\n    channelsToPatterns.set(channel, pattern);\n  }\n\n  function getDispatchableActions(effect) {\n    const pattern = effect.pattern || channelsToPatterns.get(effect.channel);\n    const index = (0, _findDispatchableActionIndex.default)(queuedActions, pattern);\n\n    if (index > -1) {\n      const actions = queuedActions.splice(0, index + 1);\n      return actions;\n    }\n\n    return [];\n  }\n\n  function processEffect(event) {\n    const parsedEffect = (0, _parseEffect.default)(event.effect); // Using string literal for flow\n\n    if (parsedEffect.type === 'NONE') {\n      return;\n    }\n\n    const effectStore = effectStores[parsedEffect.type];\n\n    if (!effectStore) {\n      return;\n    }\n\n    allEffects.push(event.effect);\n    effectStore.add(event.effect);\n\n    switch (parsedEffect.type) {\n      case _keys.FORK:\n        {\n          outstandingForkEffects.set(event.effectId, parsedEffect.effect);\n          break;\n        }\n\n      case _keys.TAKE:\n        {\n          const actions = getDispatchableActions(parsedEffect.effect);\n          const [reducerActions, [sagaAction]] = (0, _array.splitAt)(actions, -1);\n          reducerActions.forEach(action => {\n            dispatch(action);\n          });\n\n          if (sagaAction) {\n            dispatch(sagaAction);\n          }\n\n          break;\n        }\n\n      case _keys.ACTION_CHANNEL:\n        {\n          outstandingActionChannelEffects.set(event.effectId, parsedEffect.effect);\n          break;\n        }\n      // no default\n    }\n  }\n\n  function addExpectation(expectation) {\n    expectations.push(expectation);\n  }\n\n  const io = {\n    dispatch,\n    channel: ioChannel,\n\n    getState() {\n      return storeState;\n    },\n\n    sagaMonitor: {\n      effectTriggered(event) {\n        processEffect(event);\n      },\n\n      effectResolved(effectId, value) {\n        const forkEffect = outstandingForkEffects.get(effectId);\n\n        if (forkEffect) {\n          addForkedTask(value);\n          return;\n        }\n\n        const actionChannelEffect = outstandingActionChannelEffects.get(effectId);\n\n        if (actionChannelEffect) {\n          associateChannelWithPattern(value, actionChannelEffect.pattern);\n        }\n      },\n\n      effectRejected() {},\n\n      effectCancelled() {}\n\n    },\n    logger: () => {}\n  };\n  const api = {\n    run,\n    silentRun,\n    withState,\n    withReducer,\n    provide,\n    returns,\n    throws,\n    hasFinalState,\n    dispatch: apiDispatch,\n    delay: apiDelay,\n\n    // $FlowFixMe\n    get not() {\n      negateNextAssertion = true;\n      return api;\n    },\n\n    actionChannel: createEffectTesterFromEffects('actionChannel', _keys.ACTION_CHANNEL, _asEffect.asEffect.actionChannel),\n    apply: createEffectTesterFromEffects('apply', _keys.CALL, _asEffect.asEffect.call),\n    call: createEffectTesterFromEffects('call', _keys.CALL, _asEffect.asEffect.call),\n    cps: createEffectTesterFromEffects('cps', _keys.CPS, _asEffect.asEffect.cps),\n    fork: createEffectTesterFromEffects('fork', _keys.FORK, _asEffect.asEffect.fork),\n    getContext: createEffectTesterFromEffects('getContext', _keys.GET_CONTEXT, _asEffect.asEffect.getContext),\n    put: createEffectTesterFromEffects('put', _keys.PUT, _asEffect.asEffect.put),\n    putResolve: createEffectTesterFromEffects('putResolve', _keys.PUT, _asEffect.asEffect.put),\n    race: createEffectTesterFromEffects('race', _keys.RACE, _asEffect.asEffect.race),\n    select: createEffectTesterFromEffects('select', _keys.SELECT, _asEffect.asEffect.select),\n    spawn: createEffectTesterFromEffects('spawn', _keys.FORK, _asEffect.asEffect.fork),\n    setContext: createEffectTesterFromEffects('setContext', _keys.SET_CONTEXT, _asEffect.asEffect.setContext),\n    take: createEffectTesterFromEffects('take', _keys.TAKE, _asEffect.asEffect.take),\n    takeMaybe: createEffectTesterFromEffects('takeMaybe', _keys.TAKE, _asEffect.asEffect.take)\n  };\n  api.actionChannel.like = createEffectTester('actionChannel', _keys.ACTION_CHANNEL, effects.actionChannel, _asEffect.asEffect.actionChannel, true);\n\n  api.actionChannel.pattern = pattern => api.actionChannel.like({\n    pattern\n  });\n\n  api.apply.like = createEffectTester('apply', _keys.CALL, effects.apply, _asEffect.asEffect.call, true);\n\n  api.apply.fn = fn => api.apply.like({\n    fn\n  });\n\n  api.call.like = createEffectTester('call', _keys.CALL, effects.call, _asEffect.asEffect.call, true);\n\n  api.call.fn = fn => api.call.like({\n    fn\n  });\n\n  api.cps.like = createEffectTester('cps', _keys.CPS, effects.cps, _asEffect.asEffect.cps, true);\n\n  api.cps.fn = fn => api.cps.like({\n    fn\n  });\n\n  api.fork.like = createEffectTester('fork', _keys.FORK, effects.fork, _asEffect.asEffect.fork, true);\n\n  api.fork.fn = fn => api.fork.like({\n    fn\n  });\n\n  api.put.like = createEffectTester('put', _keys.PUT, effects.put, _asEffect.asEffect.put, true);\n\n  api.put.actionType = type => api.put.like({\n    action: {\n      type\n    }\n  });\n\n  api.putResolve.like = createEffectTester('putResolve', _keys.PUT, effects.putResolve, _asEffect.asEffect.put, true);\n\n  api.putResolve.actionType = type => api.putResolve.like({\n    action: {\n      type\n    }\n  });\n\n  api.select.like = createEffectTester('select', _keys.SELECT, effects.select, _asEffect.asEffect.select, true);\n\n  api.select.selector = selector => api.select.like({\n    selector\n  });\n\n  api.spawn.like = createEffectTester('spawn', _keys.FORK, effects.spawn, _asEffect.asEffect.fork, true);\n\n  api.spawn.fn = fn => api.spawn.like({\n    fn\n  });\n\n  function checkExpectations() {\n    expectations.forEach(expectation => {\n      expectation({\n        storeState,\n        returnValue,\n        errorValue\n      });\n    });\n  }\n\n  function apiDispatch(action) {\n    let dispatchableAction;\n\n    if (typeof delayTime === 'number') {\n      dispatchableAction = (0, _objectAssign.default)({}, action, {\n        _delayTime: delayTime\n      });\n      delayTime = null;\n    } else {\n      dispatchableAction = action;\n    }\n\n    if (isRunning) {\n      dispatch(dispatchableAction);\n    } else {\n      queueAction(dispatchableAction);\n    }\n\n    return api;\n  }\n\n  function taskPromise(task) {\n    return task.toPromise();\n  }\n\n  function start() {\n    const sagaWrapper = (0, _sagaWrapper.default)(generator.name);\n    isRunning = true;\n    iterator = generator(...sagaArgs);\n    mainTask = (0, _reduxSaga.runSaga)(io, sagaWrapper, iterator, refineYieldedValue, setReturnValue, setErrorValue);\n    mainTaskPromise = taskPromise(mainTask).then(checkExpectations, e => !expectError && e || checkExpectations()) // Pass along the error instead of rethrowing or allowing to\n    // bubble up to avoid PromiseRejectionHandledWarning\n    .catch(_identity.default);\n    return api;\n  }\n\n  function stop(timeout) {\n    return scheduleStop(timeout).then(err => {\n      if (err) {\n        throw err;\n      }\n    });\n  }\n\n  function exposeResults() {\n    const finalEffects = Object.keys(exposableEffects).reduce((memo, key) => {\n      const effectName = exposableEffects[key];\n      const values = effectStores[key].values().filter(lacksSagaWrapper);\n\n      if (values.length > 0) {\n        // eslint-disable-next-line no-param-reassign\n        memo[effectName] = effectStores[key].values().filter(lacksSagaWrapper);\n      }\n\n      return memo;\n    }, {});\n    return {\n      storeState,\n      returnValue,\n      effects: finalEffects,\n      allEffects,\n      toJSON: () => toJSON(finalEffects)\n    };\n  }\n\n  function run(timeout = expectSaga.DEFAULT_TIMEOUT) {\n    start();\n    return stop(timeout).then(exposeResults);\n  }\n\n  function silentRun(timeout = expectSaga.DEFAULT_TIMEOUT) {\n    return run({\n      timeout,\n      silenceTimeout: true\n    });\n  }\n\n  function withState(state) {\n    storeState = state;\n    return api;\n  }\n\n  function withReducer(newReducer, initialState) {\n    reducer = newReducer;\n    storeState = extractState(newReducer, initialState);\n    return api;\n  }\n\n  function provide(newProviders) {\n    providers = Array.isArray(newProviders) ? (0, _helpers.coalesceProviders)(newProviders) : newProviders;\n    return api;\n  }\n\n  function returns(value) {\n    addExpectation((0, _expectations.createReturnExpectation)({\n      value,\n      expected: !negateNextAssertion\n    }));\n    return api;\n  }\n\n  function throws(type) {\n    expectError = true;\n    addExpectation((0, _expectations.createErrorExpectation)({\n      type,\n      expected: !negateNextAssertion\n    }));\n    return api;\n  }\n\n  function hasFinalState(state) {\n    addExpectation((0, _expectations.createStoreStateExpectation)({\n      state,\n      expected: !negateNextAssertion\n    }));\n    return api;\n  }\n\n  function apiDelay(time) {\n    delayTime = time;\n    return api;\n  }\n\n  function createEffectTester(effectName, storeKey, effectCreator, extractEffect, like = false) {\n    return (...args) => {\n      const expectedEffect = like ? args[0] : effectCreator(...args);\n      addExpectation((0, _expectations.createEffectExpectation)({\n        effectName,\n        expectedEffect,\n        storeKey,\n        like,\n        extractEffect,\n        store: effectStores[storeKey],\n        expected: !negateNextAssertion\n      }));\n      negateNextAssertion = false;\n      return api;\n    };\n  }\n\n  function createEffectTesterFromEffects(effectName, storeKey, extractEffect) {\n    return createEffectTester(effectName, storeKey, effects[effectName], extractEffect);\n  }\n\n  return api;\n}\n\nexpectSaga.DEFAULT_TIMEOUT = 250;"]}