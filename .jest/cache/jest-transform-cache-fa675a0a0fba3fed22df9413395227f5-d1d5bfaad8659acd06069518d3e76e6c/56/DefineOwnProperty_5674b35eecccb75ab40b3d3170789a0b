4cd0795555dd4471b6af07d874bc60e6
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);

if ($defineProperty) {
  try {
    $defineProperty({}, 'a', {
      value: 1
    });
  } catch (e) {
    $defineProperty = null;
  }
}

var callBound = require('call-bind/callBound');

var $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');

module.exports = function DefineOwnProperty(IsDataDescriptor, SameValue, FromPropertyDescriptor, O, P, desc) {
  if (!$defineProperty) {
    if (!IsDataDescriptor(desc)) {
      return false;
    }

    if (!desc['[[Configurable]]'] || !desc['[[Writable]]']) {
      return false;
    }

    if (P in O && $isEnumerable(O, P) !== !!desc['[[Enumerable]]']) {
      return false;
    }

    var V = desc['[[Value]]'];
    O[P] = V;
    return SameValue(O[P], V);
  }

  $defineProperty(O, P, FromPropertyDescriptor(desc));
  return true;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlZmluZU93blByb3BlcnR5LmpzIl0sIm5hbWVzIjpbIkdldEludHJpbnNpYyIsInJlcXVpcmUiLCIkZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImUiLCJjYWxsQm91bmQiLCIkaXNFbnVtZXJhYmxlIiwibW9kdWxlIiwiZXhwb3J0cyIsIkRlZmluZU93blByb3BlcnR5IiwiSXNEYXRhRGVzY3JpcHRvciIsIlNhbWVWYWx1ZSIsIkZyb21Qcm9wZXJ0eURlc2NyaXB0b3IiLCJPIiwiUCIsImRlc2MiLCJWIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUVBLElBQUlDLGVBQWUsR0FBR0YsWUFBWSxDQUFDLHlCQUFELEVBQTRCLElBQTVCLENBQWxDOztBQUVBLElBQUlFLGVBQUosRUFBcUI7QUFDcEIsTUFBSTtBQUNIQSxJQUFBQSxlQUFlLENBQUMsRUFBRCxFQUFLLEdBQUwsRUFBVTtBQUFFQyxNQUFBQSxLQUFLLEVBQUU7QUFBVCxLQUFWLENBQWY7QUFDQSxHQUZELENBRUUsT0FBT0MsQ0FBUCxFQUFVO0FBRVhGLElBQUFBLGVBQWUsR0FBRyxJQUFsQjtBQUNBO0FBQ0Q7O0FBRUQsSUFBSUcsU0FBUyxHQUFHSixPQUFPLENBQUMscUJBQUQsQ0FBdkI7O0FBRUEsSUFBSUssYUFBYSxHQUFHRCxTQUFTLENBQUMsdUNBQUQsQ0FBN0I7O0FBR0FFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxpQkFBVCxDQUEyQkMsZ0JBQTNCLEVBQTZDQyxTQUE3QyxFQUF3REMsc0JBQXhELEVBQWdGQyxDQUFoRixFQUFtRkMsQ0FBbkYsRUFBc0ZDLElBQXRGLEVBQTRGO0FBQzVHLE1BQUksQ0FBQ2IsZUFBTCxFQUFzQjtBQUNyQixRQUFJLENBQUNRLGdCQUFnQixDQUFDSyxJQUFELENBQXJCLEVBQTZCO0FBRTVCLGFBQU8sS0FBUDtBQUNBOztBQUNELFFBQUksQ0FBQ0EsSUFBSSxDQUFDLGtCQUFELENBQUwsSUFBNkIsQ0FBQ0EsSUFBSSxDQUFDLGNBQUQsQ0FBdEMsRUFBd0Q7QUFDdkQsYUFBTyxLQUFQO0FBQ0E7O0FBR0QsUUFBSUQsQ0FBQyxJQUFJRCxDQUFMLElBQVVQLGFBQWEsQ0FBQ08sQ0FBRCxFQUFJQyxDQUFKLENBQWIsS0FBd0IsQ0FBQyxDQUFDQyxJQUFJLENBQUMsZ0JBQUQsQ0FBNUMsRUFBZ0U7QUFFL0QsYUFBTyxLQUFQO0FBQ0E7O0FBR0QsUUFBSUMsQ0FBQyxHQUFHRCxJQUFJLENBQUMsV0FBRCxDQUFaO0FBRUFGLElBQUFBLENBQUMsQ0FBQ0MsQ0FBRCxDQUFELEdBQU9FLENBQVA7QUFDQSxXQUFPTCxTQUFTLENBQUNFLENBQUMsQ0FBQ0MsQ0FBRCxDQUFGLEVBQU9FLENBQVAsQ0FBaEI7QUFDQTs7QUFDRGQsRUFBQUEsZUFBZSxDQUFDVyxDQUFELEVBQUlDLENBQUosRUFBT0Ysc0JBQXNCLENBQUNHLElBQUQsQ0FBN0IsQ0FBZjtBQUNBLFNBQU8sSUFBUDtBQUNBLENBeEJEIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgR2V0SW50cmluc2ljID0gcmVxdWlyZSgnZ2V0LWludHJpbnNpYycpO1xuXG52YXIgJGRlZmluZVByb3BlcnR5ID0gR2V0SW50cmluc2ljKCclT2JqZWN0LmRlZmluZVByb3BlcnR5JScsIHRydWUpO1xuXG5pZiAoJGRlZmluZVByb3BlcnR5KSB7XG5cdHRyeSB7XG5cdFx0JGRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgdmFsdWU6IDEgfSk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHQvLyBJRSA4IGhhcyBhIGJyb2tlbiBkZWZpbmVQcm9wZXJ0eVxuXHRcdCRkZWZpbmVQcm9wZXJ0eSA9IG51bGw7XG5cdH1cbn1cblxudmFyIGNhbGxCb3VuZCA9IHJlcXVpcmUoJ2NhbGwtYmluZC9jYWxsQm91bmQnKTtcblxudmFyICRpc0VudW1lcmFibGUgPSBjYWxsQm91bmQoJ09iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUnKTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1wYXJhbXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gRGVmaW5lT3duUHJvcGVydHkoSXNEYXRhRGVzY3JpcHRvciwgU2FtZVZhbHVlLCBGcm9tUHJvcGVydHlEZXNjcmlwdG9yLCBPLCBQLCBkZXNjKSB7XG5cdGlmICghJGRlZmluZVByb3BlcnR5KSB7XG5cdFx0aWYgKCFJc0RhdGFEZXNjcmlwdG9yKGRlc2MpKSB7XG5cdFx0XHQvLyBFUzMgZG9lcyBub3Qgc3VwcG9ydCBnZXR0ZXJzL3NldHRlcnNcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0aWYgKCFkZXNjWydbW0NvbmZpZ3VyYWJsZV1dJ10gfHwgIWRlc2NbJ1tbV3JpdGFibGVdXSddKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gZmFsbGJhY2sgZm9yIEVTM1xuXHRcdGlmIChQIGluIE8gJiYgJGlzRW51bWVyYWJsZShPLCBQKSAhPT0gISFkZXNjWydbW0VudW1lcmFibGVdXSddKSB7XG5cdFx0XHQvLyBhIG5vbi1lbnVtZXJhYmxlIGV4aXN0aW5nIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gcHJvcGVydHkgZG9lcyBub3QgZXhpc3QgYXQgYWxsLCBvciBleGlzdHMgYnV0IGlzIGVudW1lcmFibGVcblx0XHR2YXIgViA9IGRlc2NbJ1tbVmFsdWVdXSddO1xuXHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuXHRcdE9bUF0gPSBWOyAvLyB3aWxsIHVzZSBbW0RlZmluZV1dXG5cdFx0cmV0dXJuIFNhbWVWYWx1ZShPW1BdLCBWKTtcblx0fVxuXHQkZGVmaW5lUHJvcGVydHkoTywgUCwgRnJvbVByb3BlcnR5RGVzY3JpcHRvcihkZXNjKSk7XG5cdHJldHVybiB0cnVlO1xufTtcbiJdfQ==