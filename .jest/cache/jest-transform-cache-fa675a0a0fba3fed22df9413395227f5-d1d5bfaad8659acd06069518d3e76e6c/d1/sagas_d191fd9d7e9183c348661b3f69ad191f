be4f801539e510c217470f5ee08141e4
/* istanbul ignore next */
function cov_1lozuverrm() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/redux/sagas.ts";
  var hash = "a83e5e814428fc92a262fe8a8d7b10385bbc4a72";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/redux/sagas.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 25
        }
      },
      "3": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 80
        }
      },
      "4": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 44
        }
      },
      "5": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 58
        }
      },
      "6": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 61
        }
      },
      "7": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "8": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "9": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "11": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "12": {
        start: {
          line: 24,
          column: 10
        },
        end: {
          line: 24,
          column: 28
        }
      },
      "13": {
        start: {
          line: 25,
          column: 10
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "14": {
        start: {
          line: 26,
          column: 10
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "15": {
        start: {
          line: 31,
          column: 10
        },
        end: {
          line: 31,
          column: 28
        }
      },
      "16": {
        start: {
          line: 32,
          column: 10
        },
        end: {
          line: 32,
          column: 16
        }
      },
      "17": {
        start: {
          line: 35,
          column: 10
        },
        end: {
          line: 35,
          column: 28
        }
      },
      "18": {
        start: {
          line: 36,
          column: 10
        },
        end: {
          line: 36,
          column: 45
        }
      },
      "19": {
        start: {
          line: 37,
          column: 10
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "20": {
        start: {
          line: 41,
          column: 10
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "21": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "22": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "23": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 60,
          column: 7
        }
      },
      "24": {
        start: {
          line: 52,
          column: 10
        },
        end: {
          line: 52,
          column: 29
        }
      },
      "25": {
        start: {
          line: 53,
          column: 10
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "26": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 66
        }
      },
      "27": {
        start: {
          line: 59,
          column: 10
        },
        end: {
          line: 59,
          column: 34
        }
      },
      "28": {
        start: {
          line: 65,
          column: 15
        },
        end: {
          line: 65,
          column: 23
        }
      },
      "29": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "wrapForErrorHandling",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 29
          }
        },
        loc: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "wrapForErrorHandling$",
        decl: {
          start: {
            line: 20,
            column: 44
          },
          end: {
            line: 20,
            column: 65
          }
        },
        loc: {
          start: {
            line: 20,
            column: 76
          },
          end: {
            line: 44,
            column: 3
          }
        },
        line: 20
      },
      "2": {
        name: "rootSaga",
        decl: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 17
          }
        },
        loc: {
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 47
      },
      "3": {
        name: "rootSaga$",
        decl: {
          start: {
            line: 48,
            column: 44
          },
          end: {
            line: 48,
            column: 53
          }
        },
        loc: {
          start: {
            line: 48,
            column: 65
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 45
          },
          end: {
            line: 53,
            column: 46
          }
        },
        loc: {
          start: {
            line: 53,
            column: 61
          },
          end: {
            line: 55,
            column: 11
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 42,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 28,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 16
          }
        }, {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 52
          }
        }, {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 15
          }
        }, {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 33
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 60,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 55,
            column: 14
          }
        }, {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 15
          }
        }, {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 59,
            column: 34
          }
        }],
        line: 50
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0],
      "1": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/anisderbel/Documents/apcgithubissues/src/redux/sagas.ts"],
      names: [],
      mappings: ";;;;;;;;;AAAA;;AACA;;wCAGU,oB;yCAQA,Q;;AAVV,IAAM,KAAK,GAAG,CAAC,aAAD,CAAd;;AAEA,SAAU,oBAAV,CAA+B,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAM,mBAAK,EAAL,EAAS;AAAC,YAAA,SAAS,EAAE;AAAZ,WAAT,CAAN;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAII,UAAA,OAAO,CAAC,GAAR,CAAY,eAAZ;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAU,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAM,kBAAI,KAAK,CAAC,GAAN,CAAU,UAAA,IAAI;AAAA,mBAAI,mBAAK,oBAAL,EAA2B,IAA3B,CAAJ;AAAA,WAAd,CAAJ,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;eAIe,Q",
      sourcesContent: ["import {all, call, fork} from 'redux-saga/effects';\nimport repo from './repo/saga';\nconst sagas = [repo];\n\nfunction* wrapForErrorHandling(fn: (...args: any[]) => void) {\n  try {\n    yield call(fn, {restarted: false});\n  } catch (e) {\n    console.log('app crashed: ', e);\n  }\n}\n\nfunction* rootSaga() {\n  yield all(sagas.map(saga => fork(wrapForErrorHandling, saga)));\n}\n\nexport default rootSaga;\n"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a83e5e814428fc92a262fe8a8d7b10385bbc4a72"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lozuverrm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1lozuverrm();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1lozuverrm().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1lozuverrm().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1lozuverrm().s[2]++;
exports.default = void 0;

var _regenerator =
/* istanbul ignore next */
(cov_1lozuverrm().s[3]++, _interopRequireDefault(require("@babel/runtime/regenerator")));

var _effects =
/* istanbul ignore next */
(cov_1lozuverrm().s[4]++, require("redux-saga/effects"));

var _saga =
/* istanbul ignore next */
(cov_1lozuverrm().s[5]++, _interopRequireDefault(require("./repo/saga")));

var _marked =
/* istanbul ignore next */
(cov_1lozuverrm().s[6]++, _regenerator.default.mark(wrapForErrorHandling)),
    _marked2 =
/* istanbul ignore next */
(cov_1lozuverrm().s[7]++, _regenerator.default.mark(rootSaga));

var sagas =
/* istanbul ignore next */
(cov_1lozuverrm().s[8]++, [_saga.default]);

function wrapForErrorHandling(fn) {
  /* istanbul ignore next */
  cov_1lozuverrm().f[0]++;
  cov_1lozuverrm().s[9]++;
  return _regenerator.default.wrap(function wrapForErrorHandling$(_context) {
    /* istanbul ignore next */
    cov_1lozuverrm().f[1]++;
    cov_1lozuverrm().s[10]++;

    while (1) {
      /* istanbul ignore next */
      cov_1lozuverrm().s[11]++;

      switch (_context.prev = _context.next) {
        case 0:
          /* istanbul ignore next */
          cov_1lozuverrm().b[0][0]++;
          cov_1lozuverrm().s[12]++;
          _context.prev = 0;

          /* istanbul ignore next */
          cov_1lozuverrm().s[13]++;
          _context.next = 3;

          /* istanbul ignore next */
          cov_1lozuverrm().s[14]++;
          return (0, _effects.call)(fn, {
            restarted: false
          });

        case 3:
          /* istanbul ignore next */
          cov_1lozuverrm().b[0][1]++;
          cov_1lozuverrm().s[15]++;
          _context.next = 8;

          /* istanbul ignore next */
          cov_1lozuverrm().s[16]++;
          break;

        case 5:
          /* istanbul ignore next */
          cov_1lozuverrm().b[0][2]++;
          cov_1lozuverrm().s[17]++;
          _context.prev = 5;

          /* istanbul ignore next */
          cov_1lozuverrm().s[18]++;
          _context.t0 = _context["catch"](0);

          /* istanbul ignore next */
          cov_1lozuverrm().s[19]++;
          console.log('app crashed: ', _context.t0);

        case 8:
          /* istanbul ignore next */
          cov_1lozuverrm().b[0][3]++;

        case "end":
          /* istanbul ignore next */
          cov_1lozuverrm().b[0][4]++;
          cov_1lozuverrm().s[20]++;
          return _context.stop();
      }
    }
  }, _marked, null, [[0, 5]]);
}

function rootSaga() {
  /* istanbul ignore next */
  cov_1lozuverrm().f[2]++;
  cov_1lozuverrm().s[21]++;
  return _regenerator.default.wrap(function rootSaga$(_context2) {
    /* istanbul ignore next */
    cov_1lozuverrm().f[3]++;
    cov_1lozuverrm().s[22]++;

    while (1) {
      /* istanbul ignore next */
      cov_1lozuverrm().s[23]++;

      switch (_context2.prev = _context2.next) {
        case 0:
          /* istanbul ignore next */
          cov_1lozuverrm().b[1][0]++;
          cov_1lozuverrm().s[24]++;
          _context2.next = 2;

          /* istanbul ignore next */
          cov_1lozuverrm().s[25]++;
          return (0, _effects.all)(sagas.map(function (saga) {
            /* istanbul ignore next */
            cov_1lozuverrm().f[4]++;
            cov_1lozuverrm().s[26]++;
            return (0, _effects.fork)(wrapForErrorHandling, saga);
          }));

        case 2:
          /* istanbul ignore next */
          cov_1lozuverrm().b[1][1]++;

        case "end":
          /* istanbul ignore next */
          cov_1lozuverrm().b[1][2]++;
          cov_1lozuverrm().s[27]++;
          return _context2.stop();
      }
    }
  }, _marked2);
}

var _default =
/* istanbul ignore next */
(cov_1lozuverrm().s[28]++, rootSaga);

/* istanbul ignore next */
cov_1lozuverrm().s[29]++;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmlzZGVyYmVsL0RvY3VtZW50cy9hcGNnaXRodWJpc3N1ZXMvc3JjL3JlZHV4L3NhZ2FzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLFFBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxvQkFBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxLQUFBO0FBQUE7QUFBQSwwQkFBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUEsQ0FBQSxDQUFBOzs7O29EQUdVLG9COzs7b0RBUUEsUTs7QUFWVixJQUFNLEtBQUs7QUFBQTtBQUFBLDBCQUFHLENBQUMsS0FBQSxDQUFmLE9BQWMsQ0FBSCxDQUFYOztBQUVBLFNBQUEsb0JBQUEsQ0FBQSxFQUFBLEVBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUFBLFlBQUEsQ0FBQSxPQUFBLENBQUEsSUFBQSxDQUFBLFNBQUEscUJBQUEsQ0FBQSxRQUFBLEVBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUEsV0FBQSxDQUFBLEVBQUE7QUFBQTtBQUFBOztBQUFBLGNBQUEsUUFBQSxDQUFBLElBQUEsR0FBQSxRQUFBLENBQUEsSUFBQTtBQUFBLGFBQUEsQ0FBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFVBQUEsUUFBQSxDQUFBLElBQUEsR0FBQSxDQUFBOztBQUFBO0FBQUE7QUFBQSxVQUFBLFFBQUEsQ0FBQSxJQUFBLEdBQUEsQ0FBQTs7QUFBQTtBQUFBO0FBRUksaUJBQU0sQ0FBQSxHQUFBLFFBQUEsQ0FBQSxJQUFBLEVBQUEsRUFBQSxFQUFTO0FBQUMsWUFBQSxTQUFTLEVBQUU7QUFBWixXQUFULENBQU47O0FBRkosYUFBQSxDQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsVUFBQSxRQUFBLENBQUEsSUFBQSxHQUFBLENBQUE7O0FBQUE7QUFBQTtBQUFBOztBQUFBLGFBQUEsQ0FBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLFVBQUEsUUFBQSxDQUFBLElBQUEsR0FBQSxDQUFBOztBQUFBO0FBQUE7QUFBQSxVQUFBLFFBQUEsQ0FBQSxFQUFBLEdBQUEsUUFBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUEsQ0FBQTs7QUFBQTtBQUFBO0FBSUksVUFBQSxPQUFPLENBQVAsR0FBQSxDQUFBLGVBQUEsRUFBQSxRQUFBLENBQUEsRUFBQTs7QUFKSixhQUFBLENBQUE7QUFBQTtBQUFBOztBQUFBLGFBQUEsS0FBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUFBLFFBQUEsQ0FBQSxJQUFBLEVBQUE7QUFBQTtBQUFBO0FBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxDQUFBLENBQUEsRUFBQSxDQUFBLENBQUEsQ0FBQSxDQUFBO0FBQUE7O0FBUUEsU0FBQSxRQUFBLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxTQUFBLFlBQUEsQ0FBQSxPQUFBLENBQUEsSUFBQSxDQUFBLFNBQUEsU0FBQSxDQUFBLFNBQUEsRUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxXQUFBLENBQUEsRUFBQTtBQUFBO0FBQUE7O0FBQUEsY0FBQSxTQUFBLENBQUEsSUFBQSxHQUFBLFNBQUEsQ0FBQSxJQUFBO0FBQUEsYUFBQSxDQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsVUFBQSxTQUFBLENBQUEsSUFBQSxHQUFBLENBQUE7O0FBQUE7QUFBQTtBQUNFLGlCQUFNLENBQUEsR0FBQSxRQUFBLENBQUEsR0FBQSxFQUFJLEtBQUssQ0FBTCxHQUFBLENBQVUsVUFBQSxJQUFBLEVBQUk7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFBSSxDQUFBLEdBQUEsUUFBQSxDQUFBLElBQUEsRUFBQSxvQkFBQSxFQUFKLElBQUksQ0FBSjtBQUF4QixXQUFVLENBQUosQ0FBTjs7QUFERixhQUFBLENBQUE7QUFBQTtBQUFBOztBQUFBLGFBQUEsS0FBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUFBLFNBQUEsQ0FBQSxJQUFBLEVBQUE7QUFBQTtBQUFBO0FBQUEsR0FBQSxFQUFBLFFBQUEsQ0FBQTtBQUFBOzs7OzJCQUllLFEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2FsbCwgY2FsbCwgZm9ya30gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcbmltcG9ydCByZXBvIGZyb20gJy4vcmVwby9zYWdhJztcbmNvbnN0IHNhZ2FzID0gW3JlcG9dO1xuXG5mdW5jdGlvbiogd3JhcEZvckVycm9ySGFuZGxpbmcoZm46ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCkge1xuICB0cnkge1xuICAgIHlpZWxkIGNhbGwoZm4sIHtyZXN0YXJ0ZWQ6IGZhbHNlfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmxvZygnYXBwIGNyYXNoZWQ6ICcsIGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uKiByb290U2FnYSgpIHtcbiAgeWllbGQgYWxsKHNhZ2FzLm1hcChzYWdhID0+IGZvcmsod3JhcEZvckVycm9ySGFuZGxpbmcsIHNhZ2EpKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJvb3RTYWdhO1xuIl19