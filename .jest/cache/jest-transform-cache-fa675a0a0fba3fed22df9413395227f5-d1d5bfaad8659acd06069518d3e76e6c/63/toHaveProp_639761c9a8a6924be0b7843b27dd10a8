4dc1df68cf588289411c12ef0c7e1b04
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var _name = _interopRequireDefault(require("../utils/name"));

var _reduceAssertionObject = _interopRequireDefault(require("../utils/reduceAssertionObject"));

var _stringify = _interopRequireDefault(require("../utils/stringify"));

var _single = _interopRequireDefault(require("../utils/single"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}








function toHaveProp(enzymeWrapper, propKey, propValue) {
  var props = enzymeWrapper.props();
  var wrapperName = (0, _name.default)(enzymeWrapper);


  if (propValue === undefined && arguments.length === 2 && typeof propKey !== 'object' && Array.isArray(propKey) === false) {
    return {
      pass: props.hasOwnProperty(propKey),
      message: "Expected <" + wrapperName + "> to have received the prop \"" + propKey + "\", but it did not.",
      negatedMessage: "Expected <" + wrapperName + "> to not have received the prop \"" + propKey + "\", but it did.",
      contextualInformation: {
        actual: "Actual props: " + (0, _stringify.default)(require("@babel/runtime/helpers/defineProperty")({},
        propKey, props[propKey])) } };



  }

  var results = _reduceAssertionObject.default.call(this, props, propKey, propValue);

  var unmatchedKeys = results.unmatchedKeys.join(', ');
  var contextualInformation = {
    actual: "Actual props: " + (0, _stringify.default)(results.actual),
    expected: "Expected props: " + (0, _stringify.default)(results.expected) };


  if (results.missingKeys.length) {
    var missingKeys = results.missingKeys.join(', ');

    var _prop_2 = results.missingKeys.length === 1 ? 'prop' : 'props';

    return {
      pass: false,
      message: "Expected <" + wrapperName + "}> to have " + _prop_2 + " \"" + missingKeys + "\", but it did not.",
      negatedMessage: "Expected <" + wrapperName + "> to not have " + _prop_2 + " \"" + missingKeys + "\", but it did.",
      contextualInformation: contextualInformation };

  }

  var _prop_ = results.unmatchedKeys.length === 1 ? 'prop' : 'props';

  return {
    pass: results.pass,
    message: "Expected <" + wrapperName + "> to match for " + _prop_ + " \"" + unmatchedKeys + "\", but it did not.",
    negatedMessage: "Expected <" + wrapperName + "> to not match for " + _prop_ + " \"" + unmatchedKeys + "\", but it did.",
    contextualInformation: contextualInformation };

}

var _default = (0, _single.default)(toHaveProp);

exports.default = _default;
module.exports = exports.default;