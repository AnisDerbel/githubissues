{"version":3,"sources":["toHaveState.js"],"names":["Object","defineProperty","exports","value","default","_name","_interopRequireDefault","require","_reduceAssertionObject","_stringify","_single","obj","__esModule","toHaveState","enzymeWrapper","stateKey","stateValue","state","wrapperName","undefined","arguments","length","Array","isArray","pass","hasOwnProperty","message","negatedMessage","contextualInformation","actual","results","call","expected","missingKeys","join","_key_","unmatchedKeys","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _name = _interopRequireDefault(require(\"../utils/name\"));\n\nvar _reduceAssertionObject = _interopRequireDefault(require(\"../utils/reduceAssertionObject\"));\n\nvar _stringify = _interopRequireDefault(require(\"../utils/stringify\"));\n\nvar _single = _interopRequireDefault(require(\"../utils/single\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This source code is licensed under the MIT-style license found in the\n * LICENSE file in the root directory of this source tree. *\n *\n * @providesModule toHaveStateAssertion\n * \n */\nfunction toHaveState(enzymeWrapper, stateKey, stateValue) {\n  const state = enzymeWrapper.state();\n  const wrapperName = (0, _name.default)(enzymeWrapper); // The API allows checking if a component has a value for a given key by dropping the third\n  // argument.\n\n  if (stateValue === undefined && arguments.length === 2 && typeof stateKey !== 'object' && Array.isArray(stateKey) === false) {\n    return {\n      pass: state.hasOwnProperty(stateKey),\n      message: `Expected the state for <${wrapperName}> to contain the key \"${stateKey}\", but it did not.`,\n      negatedMessage: `Expected the state for <${wrapperName}> to not contain the key \"${stateKey}\", but it did.`,\n      contextualInformation: {\n        actual: `Actual state: ${(0, _stringify.default)({\n          [stateKey]: state[stateKey]\n        })}`\n      }\n    };\n  }\n\n  const results = _reduceAssertionObject.default.call(this, state, stateKey, stateValue);\n\n  const contextualInformation = {\n    actual: `Actual state: ${(0, _stringify.default)(results.actual)}`,\n    expected: `Expected state: ${(0, _stringify.default)(results.expected)}`\n  }; // error if some state doesn't exist\n\n  if (results.missingKeys.length) {\n    const missingKeys = results.missingKeys.join(', ');\n\n    const _key_ = results.missingKeys.length === 1 ? 'key' : 'keys';\n\n    return {\n      pass: false,\n      message: `Expected the state for <${wrapperName}> to contain the ${_key_} \"${missingKeys}\", but it did not.`,\n      negatedMessage: `Expected the state for <${wrapperName}> to not contain the ${_key_} \"${missingKeys}\", but it did.`,\n      contextualInformation\n    };\n  }\n\n  const unmatchedKeys = results.unmatchedKeys.join(', ');\n\n  const _key_ = results.unmatchedKeys.length === 1 ? 'key' : 'keys';\n\n  return {\n    pass: results.pass,\n    message: `Expected the state for <${wrapperName}> to match for ${_key_} \"${unmatchedKeys}\", but it did not.`,\n    negatedMessage: `Expected the state for <${wrapperName}> to not match for ${_key_} \"${unmatchedKeys}\", but it did.`,\n    contextualInformation\n  };\n}\n\nvar _default = (0, _single.default)(toHaveState);\n\nexports.default = _default;\nmodule.exports = exports.default;"]}