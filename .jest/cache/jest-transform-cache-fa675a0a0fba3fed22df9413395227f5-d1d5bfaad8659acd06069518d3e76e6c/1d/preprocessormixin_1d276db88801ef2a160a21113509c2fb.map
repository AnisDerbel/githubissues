{"version":3,"sources":["preprocessor-mixin.js"],"names":["Mixin","require","PositionTrackingPreprocessorMixin","preprocessor","isEol","lineStartPos","droppedBufferSize","offset","col","line","mxn","orig","advance","pos","ch","html","call","retreat","dropParsedChunk","prevPos","reduction","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAArB;;IAEMC,iC;;;;;AACF,6CAAYC,YAAZ,EAA0B;AAAA;;AAAA;AACtB,8BAAMA,YAAN;AAEA,UAAKA,YAAL,GAAoBA,YAApB;AACA,UAAKC,KAAL,GAAa,KAAb;AACA,UAAKC,YAAL,GAAoB,CAApB;AACA,UAAKC,iBAAL,GAAyB,CAAzB;AAEA,UAAKC,MAAL,GAAc,CAAd;AACA,UAAKC,GAAL,GAAW,CAAX;AACA,UAAKC,IAAL,GAAY,CAAZ;AAVsB;AAWzB;;;;WAED,+BAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AAC7B,aAAO;AACHC,QAAAA,OADG,qBACO;AACN,cAAMC,GAAG,GAAG,KAAKA,GAAL,GAAW,CAAvB;AACA,cAAMC,EAAE,GAAG,KAAKC,IAAL,CAAUF,GAAV,CAAX;;AAGA,cAAIH,GAAG,CAACN,KAAR,EAAe;AACXM,YAAAA,GAAG,CAACN,KAAJ,GAAY,KAAZ;AACAM,YAAAA,GAAG,CAACD,IAAJ;AACAC,YAAAA,GAAG,CAACL,YAAJ,GAAmBQ,GAAnB;AACH;;AAED,cAAIC,EAAE,KAAK,IAAP,IAAgBA,EAAE,KAAK,IAAP,IAAe,KAAKC,IAAL,CAAUF,GAAG,GAAG,CAAhB,MAAuB,IAA1D,EAAiE;AAC7DH,YAAAA,GAAG,CAACN,KAAJ,GAAY,IAAZ;AACH;;AAEDM,UAAAA,GAAG,CAACF,GAAJ,GAAUK,GAAG,GAAGH,GAAG,CAACL,YAAV,GAAyB,CAAnC;AACAK,UAAAA,GAAG,CAACH,MAAJ,GAAaG,GAAG,CAACJ,iBAAJ,GAAwBO,GAArC;AAEA,iBAAOF,IAAI,CAACC,OAAL,CAAaI,IAAb,CAAkB,IAAlB,CAAP;AACH,SApBE;AAsBHC,QAAAA,OAtBG,qBAsBO;AACNN,UAAAA,IAAI,CAACM,OAAL,CAAaD,IAAb,CAAkB,IAAlB;AAEAN,UAAAA,GAAG,CAACN,KAAJ,GAAY,KAAZ;AACAM,UAAAA,GAAG,CAACF,GAAJ,GAAU,KAAKK,GAAL,GAAWH,GAAG,CAACL,YAAf,GAA8B,CAAxC;AACH,SA3BE;AA6BHa,QAAAA,eA7BG,6BA6Be;AACd,cAAMC,OAAO,GAAG,KAAKN,GAArB;AAEAF,UAAAA,IAAI,CAACO,eAAL,CAAqBF,IAArB,CAA0B,IAA1B;AAEA,cAAMI,SAAS,GAAGD,OAAO,GAAG,KAAKN,GAAjC;AAEAH,UAAAA,GAAG,CAACL,YAAJ,IAAoBe,SAApB;AACAV,UAAAA,GAAG,CAACJ,iBAAJ,IAAyBc,SAAzB;AACAV,UAAAA,GAAG,CAACH,MAAJ,GAAaG,GAAG,CAACJ,iBAAJ,GAAwB,KAAKO,GAA1C;AACH;AAvCE,OAAP;AAyCH;;;EAxD2Cb,K;;AA2DhDqB,MAAM,CAACC,OAAP,GAAiBpB,iCAAjB","sourcesContent":["'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass PositionTrackingPreprocessorMixin extends Mixin {\n    constructor(preprocessor) {\n        super(preprocessor);\n\n        this.preprocessor = preprocessor;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n\n        this.offset = 0;\n        this.col = 0;\n        this.line = 1;\n    }\n\n    _getOverriddenMethods(mxn, orig) {\n        return {\n            advance() {\n                const pos = this.pos + 1;\n                const ch = this.html[pos];\n\n                //NOTE: LF should be in the last column of the line\n                if (mxn.isEol) {\n                    mxn.isEol = false;\n                    mxn.line++;\n                    mxn.lineStartPos = pos;\n                }\n\n                if (ch === '\\n' || (ch === '\\r' && this.html[pos + 1] !== '\\n')) {\n                    mxn.isEol = true;\n                }\n\n                mxn.col = pos - mxn.lineStartPos + 1;\n                mxn.offset = mxn.droppedBufferSize + pos;\n\n                return orig.advance.call(this);\n            },\n\n            retreat() {\n                orig.retreat.call(this);\n\n                mxn.isEol = false;\n                mxn.col = this.pos - mxn.lineStartPos + 1;\n            },\n\n            dropParsedChunk() {\n                const prevPos = this.pos;\n\n                orig.dropParsedChunk.call(this);\n\n                const reduction = prevPos - this.pos;\n\n                mxn.lineStartPos -= reduction;\n                mxn.droppedBufferSize += reduction;\n                mxn.offset = mxn.droppedBufferSize + this.pos;\n            }\n        };\n    }\n}\n\nmodule.exports = PositionTrackingPreprocessorMixin;\n"]}