84b5277c951ccf1203c0bb7cf403f7b0
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = createFormValueSelector;

var _invariant = _interopRequireDefault(require("invariant"));

var _plain = _interopRequireDefault(require("./structure/plain"));

function createFormValueSelector(_ref) {
  var getIn = _ref.getIn;
  return function (form, getFormState) {
    (0, _invariant["default"])(form, 'Form value must be specified');

    var nonNullGetFormState = getFormState || function (state) {
      return getIn(state, 'form');
    };

    return function (state) {
      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        fields[_key - 1] = arguments[_key];
      }

      (0, _invariant["default"])(fields.length, 'No fields specified');
      return fields.length === 1 ? getIn(nonNullGetFormState(state), form + ".values." + fields[0]) : fields.reduce(function (accumulator, field) {
        var value = getIn(nonNullGetFormState(state), form + ".values." + field);
        return value === undefined ? accumulator : _plain["default"].setIn(accumulator, field, value);
      }, {});
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUZvcm1WYWx1ZVNlbGVjdG9yLmpzIl0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJjcmVhdGVGb3JtVmFsdWVTZWxlY3RvciIsIl9pbnZhcmlhbnQiLCJfcGxhaW4iLCJfcmVmIiwiZ2V0SW4iLCJmb3JtIiwiZ2V0Rm9ybVN0YXRlIiwibm9uTnVsbEdldEZvcm1TdGF0ZSIsInN0YXRlIiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImZpZWxkcyIsIkFycmF5IiwiX2tleSIsInJlZHVjZSIsImFjY3VtdWxhdG9yIiwiZmllbGQiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsInNldEluIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxzQkFBc0IsR0FBR0MsT0FBTyxDQUFDLDhDQUFELENBQXBDOztBQUVBQyxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7QUFDQUQsT0FBTyxDQUFDLFNBQUQsQ0FBUCxHQUFxQkUsdUJBQXJCOztBQUVBLElBQUlDLFVBQVUsR0FBR0wsc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxXQUFELENBQVIsQ0FBdkM7O0FBRUEsSUFBSUssTUFBTSxHQUFHTixzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLG1CQUFELENBQVIsQ0FBbkM7O0FBRUEsU0FBU0csdUJBQVQsQ0FBaUNHLElBQWpDLEVBQXVDO0FBQ3JDLE1BQUlDLEtBQUssR0FBR0QsSUFBSSxDQUFDQyxLQUFqQjtBQUNBLFNBQU8sVUFBVUMsSUFBVixFQUFnQkMsWUFBaEIsRUFBOEI7QUFDbkMsS0FBQyxHQUFHTCxVQUFVLENBQUMsU0FBRCxDQUFkLEVBQTJCSSxJQUEzQixFQUFpQyw4QkFBakM7O0FBRUEsUUFBSUUsbUJBQW1CLEdBQUdELFlBQVksSUFBSSxVQUFVRSxLQUFWLEVBQWlCO0FBQ3pELGFBQU9KLEtBQUssQ0FBQ0ksS0FBRCxFQUFRLE1BQVIsQ0FBWjtBQUNELEtBRkQ7O0FBSUEsV0FBTyxVQUFVQSxLQUFWLEVBQWlCO0FBQ3RCLFdBQUssSUFBSUMsSUFBSSxHQUFHQyxTQUFTLENBQUNDLE1BQXJCLEVBQTZCQyxNQUFNLEdBQUcsSUFBSUMsS0FBSixDQUFVSixJQUFJLEdBQUcsQ0FBUCxHQUFXQSxJQUFJLEdBQUcsQ0FBbEIsR0FBc0IsQ0FBaEMsQ0FBdEMsRUFBMEVLLElBQUksR0FBRyxDQUF0RixFQUF5RkEsSUFBSSxHQUFHTCxJQUFoRyxFQUFzR0ssSUFBSSxFQUExRyxFQUE4RztBQUM1R0YsUUFBQUEsTUFBTSxDQUFDRSxJQUFJLEdBQUcsQ0FBUixDQUFOLEdBQW1CSixTQUFTLENBQUNJLElBQUQsQ0FBNUI7QUFDRDs7QUFFRCxPQUFDLEdBQUdiLFVBQVUsQ0FBQyxTQUFELENBQWQsRUFBMkJXLE1BQU0sQ0FBQ0QsTUFBbEMsRUFBMEMscUJBQTFDO0FBQ0EsYUFBT0MsTUFBTSxDQUFDRCxNQUFQLEtBQWtCLENBQWxCLEdBQ1BQLEtBQUssQ0FBQ0csbUJBQW1CLENBQUNDLEtBQUQsQ0FBcEIsRUFBNkJILElBQUksR0FBRyxVQUFQLEdBQW9CTyxNQUFNLENBQUMsQ0FBRCxDQUF2RCxDQURFLEdBRVBBLE1BQU0sQ0FBQ0csTUFBUCxDQUFjLFVBQVVDLFdBQVYsRUFBdUJDLEtBQXZCLEVBQThCO0FBQzFDLFlBQUlDLEtBQUssR0FBR2QsS0FBSyxDQUFDRyxtQkFBbUIsQ0FBQ0MsS0FBRCxDQUFwQixFQUE2QkgsSUFBSSxHQUFHLFVBQVAsR0FBb0JZLEtBQWpELENBQWpCO0FBQ0EsZUFBT0MsS0FBSyxLQUFLQyxTQUFWLEdBQXNCSCxXQUF0QixHQUFvQ2QsTUFBTSxDQUFDLFNBQUQsQ0FBTixDQUFrQmtCLEtBQWxCLENBQXdCSixXQUF4QixFQUFxQ0MsS0FBckMsRUFBNENDLEtBQTVDLENBQTNDO0FBQ0QsT0FIRCxFQUdHLEVBSEgsQ0FGQTtBQU1ELEtBWkQ7QUFhRCxHQXBCRDtBQXFCRCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gY3JlYXRlRm9ybVZhbHVlU2VsZWN0b3I7XG5cbnZhciBfaW52YXJpYW50ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiaW52YXJpYW50XCIpKTtcblxudmFyIF9wbGFpbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc3RydWN0dXJlL3BsYWluXCIpKTtcblxuZnVuY3Rpb24gY3JlYXRlRm9ybVZhbHVlU2VsZWN0b3IoX3JlZikge1xuICB2YXIgZ2V0SW4gPSBfcmVmLmdldEluO1xuICByZXR1cm4gZnVuY3Rpb24gKGZvcm0sIGdldEZvcm1TdGF0ZSkge1xuICAgICgwLCBfaW52YXJpYW50W1wiZGVmYXVsdFwiXSkoZm9ybSwgJ0Zvcm0gdmFsdWUgbXVzdCBiZSBzcGVjaWZpZWQnKTtcblxuICAgIHZhciBub25OdWxsR2V0Rm9ybVN0YXRlID0gZ2V0Rm9ybVN0YXRlIHx8IGZ1bmN0aW9uIChzdGF0ZSkge1xuICAgICAgcmV0dXJuIGdldEluKHN0YXRlLCAnZm9ybScpO1xuICAgIH07XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgZmllbGRzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgZmllbGRzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgKDAsIF9pbnZhcmlhbnRbXCJkZWZhdWx0XCJdKShmaWVsZHMubGVuZ3RoLCAnTm8gZmllbGRzIHNwZWNpZmllZCcpO1xuICAgICAgcmV0dXJuIGZpZWxkcy5sZW5ndGggPT09IDEgPyAvLyBvbmx5IHNlbGVjdGluZyBvbmUgZmllbGQsIHNvIHJldHVybiBpdHMgdmFsdWVcbiAgICAgIGdldEluKG5vbk51bGxHZXRGb3JtU3RhdGUoc3RhdGUpLCBmb3JtICsgXCIudmFsdWVzLlwiICsgZmllbGRzWzBdKSA6IC8vIHNlbGVjdGluZyBtYW55IGZpZWxkcywgc28gcmV0dXJuIGFuIG9iamVjdCBvZiBmaWVsZCB2YWx1ZXNcbiAgICAgIGZpZWxkcy5yZWR1Y2UoZnVuY3Rpb24gKGFjY3VtdWxhdG9yLCBmaWVsZCkge1xuICAgICAgICB2YXIgdmFsdWUgPSBnZXRJbihub25OdWxsR2V0Rm9ybVN0YXRlKHN0YXRlKSwgZm9ybSArIFwiLnZhbHVlcy5cIiArIGZpZWxkKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPyBhY2N1bXVsYXRvciA6IF9wbGFpbltcImRlZmF1bHRcIl0uc2V0SW4oYWNjdW11bGF0b3IsIGZpZWxkLCB2YWx1ZSk7XG4gICAgICB9LCB7fSk7XG4gICAgfTtcbiAgfTtcbn0iXX0=