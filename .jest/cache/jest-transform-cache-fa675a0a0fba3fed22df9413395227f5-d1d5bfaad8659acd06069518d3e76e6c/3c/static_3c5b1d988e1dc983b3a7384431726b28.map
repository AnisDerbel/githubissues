{"version":3,"sources":["static.js"],"names":["htmlparser2Adapter","require","serialize","default","defaultOptions","flattenOptions","flatten","select","parse5","parse","exports","load","content","options","isDocument","undefined","Error","Cheerio","root","initialize","selector","context","r","opts","call","prototype","Object","create","constructor","fn","_originalRoot","_root","_options","render","that","dom","children","xmlMode","_useHtmlParser2","nodes","index","length","type","splice","apply","concat","treeAdapter","html","toString","xml","text","elems","ret","len","elem","i","data","tagName","parseHTML","keepScripts","parsed","remove","slice","contains","container","contained","parent","merge","arr1","arr2","isArrayLike","newLength","item","Array","isArray","hasOwnProperty"],"mappings":"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","sourcesContent":["var htmlparser2Adapter = require('parse5-htmlparser2-tree-adapter');\n\n/**\n * @module cheerio/static\n * @ignore\n */\n\nvar serialize = require('dom-serializer').default;\nvar defaultOptions = require('./options').default;\nvar flattenOptions = require('./options').flatten;\nvar select = require('cheerio-select-tmp').select;\nvar parse5 = require('parse5');\nvar parse = require('./parse');\n\n/**\n * Create a querying function, bound to a document created from the provided\n * markup. Note that similar to web browser contexts, this operation may\n * introduce `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false`\n * to switch to fragment mode and disable this.\n *\n * See the README section titled \"Loading\" for additional usage information.\n *\n * @param {string} content - Markup to be loaded.\n * @param {object} [options] - Options for the created instance.\n * @param {boolean} [isDocument] - Allows parser to be switched to fragment mode.\n *\n */\nexports.load = function (content, options, isDocument) {\n  if (content === null || content === undefined) {\n    throw new Error('cheerio.load() expects a string');\n  }\n\n  var Cheerio = require('./cheerio');\n\n  options = Object.assign({}, defaultOptions, flattenOptions(options));\n\n  if (isDocument === void 0) isDocument = true;\n\n  var root = parse(content, options, isDocument);\n\n  var initialize = function (selector, context, r, opts) {\n    if (!(this instanceof initialize)) {\n      return new initialize(selector, context, r, opts);\n    }\n    opts = Object.assign({}, options, opts);\n    return Cheerio.call(this, selector, context, r || root, opts);\n  };\n\n  // Ensure that selections created by the \"loaded\" `initialize` function are\n  // true Cheerio instances.\n  initialize.prototype = Object.create(Cheerio.prototype);\n  initialize.prototype.constructor = initialize;\n\n  // Mimic jQuery's prototype alias for plugin authors.\n  initialize.fn = initialize.prototype;\n\n  // Keep a reference to the top-level scope so we can chain methods that implicitly\n  // resolve selectors; e.g. $(\"<span>\").(\".bar\"), which otherwise loses ._root\n  initialize.prototype._originalRoot = root;\n\n  // Add in the static methods\n  Object.assign(initialize, exports);\n\n  // Add in the root\n  initialize._root = root;\n  // store options\n  initialize._options = options;\n\n  return initialize;\n};\n\n/*\n * Helper function\n */\n\nfunction render(that, dom, options) {\n  if (!dom) {\n    if (that._root && that._root.children) {\n      dom = that._root.children;\n    } else {\n      return '';\n    }\n  } else if (typeof dom === 'string') {\n    dom = select(dom, that._root, options);\n  }\n\n  if (options.xmlMode || options._useHtmlParser2) {\n    return serialize(dom, options);\n  }\n\n  // `dom-serializer` passes over the special \"root\" node and renders the\n  // node's children in its place. To mimic this behavior with `parse5`, an\n  // equivalent operation must be applied to the input array.\n  var nodes = 'length' in dom ? dom : [dom];\n  for (var index = 0; index < nodes.length; index += 1) {\n    if (nodes[index].type === 'root') {\n      nodes.splice.apply(nodes, [index, 1].concat(nodes[index].children));\n    }\n  }\n\n  return parse5.serialize(\n    { children: nodes },\n    { treeAdapter: htmlparser2Adapter }\n  );\n}\n\n/**\n * Renders the document.\n *\n * @param {string|cheerio|node} [dom] - Element to render.\n * @param {object} [options] - Options for the renderer.\n */\nexports.html = function (dom, options) {\n  // be flexible about parameters, sometimes we call html(),\n  // with options as only parameter\n  // check dom argument for dom element specific properties\n  // assume there is no 'length' or 'type' properties in the options object\n  if (\n    Object.prototype.toString.call(dom) === '[object Object]' &&\n    !options &&\n    !('length' in dom) &&\n    !('type' in dom)\n  ) {\n    options = dom;\n    dom = undefined;\n  }\n\n  // sometimes $.html() used without preloading html\n  // so fallback non existing options to the default ones\n  options = Object.assign(\n    {},\n    defaultOptions,\n    this._options,\n    flattenOptions(options || {})\n  );\n\n  return render(this, dom, options);\n};\n\n/**\n * Render the document as XML.\n *\n * @param {string|cheerio|node} [dom] - Element to render.\n */\nexports.xml = function (dom) {\n  var options = Object.assign({}, this._options, { xmlMode: true });\n\n  return render(this, dom, options);\n};\n\n/**\n * Render the document as text.\n *\n * @param {string|cheerio|node} [elems] - Elements to render.\n */\nexports.text = function (elems) {\n  if (!elems) {\n    elems = this.root();\n  }\n\n  var ret = '';\n  var len = elems.length;\n  var elem;\n\n  for (var i = 0; i < len; i++) {\n    elem = elems[i];\n    if (elem.type === 'text') ret += elem.data;\n    else if (\n      elem.children &&\n      elem.type !== 'comment' &&\n      elem.tagName !== 'script' &&\n      elem.tagName !== 'style'\n    ) {\n      ret += exports.text(elem.children);\n    }\n  }\n\n  return ret;\n};\n\n/**\n * Parses a string into an array of DOM nodes. The `context` argument has no\n * meaning for Cheerio, but it is maintained for API compatibility with jQuery.\n *\n * @param {string} data - Markup that will be parsed.\n * @param {any|boolean} [context] - Will be ignored. If it is a boolean it will be used as the value of `keepScripts`.\n * @param {boolean} [keepScripts] - If false all scripts will be removed.\n *\n * @alias Cheerio.parseHTML\n * @see {@link https://api.jquery.com/jQuery.parseHTML/}\n */\nexports.parseHTML = function (data, context, keepScripts) {\n  var parsed;\n\n  if (!data || typeof data !== 'string') {\n    return null;\n  }\n\n  if (typeof context === 'boolean') {\n    keepScripts = context;\n  }\n\n  parsed = this.load(data, defaultOptions, false);\n  if (!keepScripts) {\n    parsed('script').remove();\n  }\n\n  // The `children` array is used by Cheerio internally to group elements that\n  // share the same parents. When nodes created through `parseHTML` are\n  // inserted into previously-existing DOM structures, they will be removed\n  // from the `children` array. The results of `parseHTML` should remain\n  // constant across these operations, so a shallow copy should be returned.\n  return parsed.root()[0].children.slice();\n};\n\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @alias Cheerio.root\n *\n * @example\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n */\nexports.root = function () {\n  return this(this._root);\n};\n\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @param {node} container - Potential parent node.\n * @param {node} contained - Potential child node.\n * @returns {boolean}\n *\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains}\n */\nexports.contains = function (container, contained) {\n  // According to the jQuery API, an element does not \"contain\" itself\n  if (contained === container) {\n    return false;\n  }\n\n  // Step up the descendants, stopping when the root element is reached\n  // (signaled by `.parent` returning a reference to the same object)\n  while (contained && contained !== contained.parent) {\n    contained = contained.parent;\n    if (contained === container) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * $.merge().\n *\n * @param {Array|cheerio} arr1 - First array.\n * @param {Array|cheerio} arr2 - Second array.\n *\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge}\n */\nexports.merge = function (arr1, arr2) {\n  if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n    return;\n  }\n  var newLength = arr1.length + arr2.length;\n  for (var i = 0; i < arr2.length; i++) {\n    arr1[i + arr1.length] = arr2[i];\n  }\n  arr1.length = newLength;\n  return arr1;\n};\n\nfunction isArrayLike(item) {\n  if (Array.isArray(item)) {\n    return true;\n  }\n\n  if (\n    typeof item !== 'object' ||\n    !Object.prototype.hasOwnProperty.call(item, 'length') ||\n    typeof item.length !== 'number' ||\n    item.length < 0\n  ) {\n    return false;\n  }\n\n  for (var i = 0; i < item.length; i++) {\n    if (!(i in item)) {\n      return false;\n    }\n  }\n  return true;\n}\n"]}