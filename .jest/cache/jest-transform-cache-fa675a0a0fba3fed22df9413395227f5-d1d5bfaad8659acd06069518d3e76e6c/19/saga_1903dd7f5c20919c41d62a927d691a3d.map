{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/redux/repo/saga.ts"],"names":[],"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","sourcesContent":["import { call, put, takeLatest, select } from 'redux-saga/effects';\nimport { AxiosResponse } from 'axios';\nimport { ERepoActionTypes, repoActions, TRepoIssuesAction } from './actions';\nimport axios from '../axios';\nimport { IApplicationState } from '../appReducer';\n\nconst PAGE_SIZE = 30;\n\nfunction* getRepoIssues({ payload }: TRepoIssuesAction) {\n  try {\n    const { page } = payload;\n    const {\n      form: { values },\n    } = yield select((state: IApplicationState) => state.form);\n    const { issues, hasMoreIssues } = yield select((state: IApplicationState) => state.repo);\n\n    if (!!issues[page]) {\n      yield put(\n        repoActions.setCurrentPage({\n          page,\n          hasMoreIssues: hasMoreIssues || issues[page + 1] ? true : false,\n        }),\n      );\n      return;\n    }\n    const repoIssues: AxiosResponse = yield call(\n      axios.get,\n      `/repos/${values.organization}/${values.repository}/issues?direction=desc&sort=created&state=all&page=${page}&per_page=${PAGE_SIZE}`,\n    );\n    const length = repoIssues.data.length;\n    yield put(\n      repoActions.getRepoIssuesSuccess({\n        issues: repoIssues.data,\n        page,\n        hasMoreIssues: length === 0 || length < PAGE_SIZE ? false : true,\n      }),\n    );\n  } catch (e) {\n    yield put(repoActions.getRepoIssuesFailed());\n  }\n}\n\nfunction* repoSaga() {\n  yield takeLatest(ERepoActionTypes.GET_REPO_ISSUES, getRepoIssues);\n}\n\nexport default repoSaga;\n"]}