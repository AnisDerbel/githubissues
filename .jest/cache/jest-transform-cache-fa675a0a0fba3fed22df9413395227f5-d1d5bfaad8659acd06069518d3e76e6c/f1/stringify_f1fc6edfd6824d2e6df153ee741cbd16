d52658c1bc0c1942cb30adc7ba8547fa
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;

var tagtypes_1 = require("./tagtypes");

var dom_serializer_1 = __importDefault(require("dom-serializer"));

function getOuterHTML(node, options) {
  return dom_serializer_1.default(node, options);
}

exports.getOuterHTML = getOuterHTML;

function getInnerHTML(node, options) {
  return tagtypes_1.hasChildren(node) ? node.children.map(function (node) {
    return getOuterHTML(node, options);
  }).join("") : "";
}

exports.getInnerHTML = getInnerHTML;

function getText(node) {
  if (Array.isArray(node)) return node.map(getText).join("");
  if (tagtypes_1.isTag(node)) return node.name === "br" ? "\n" : getText(node.children);
  if (tagtypes_1.isCDATA(node)) return getText(node.children);
  if (tagtypes_1.isText(node)) return node.data;
  return "";
}

exports.getText = getText;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0cmluZ2lmeS5qcyJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRUZXh0IiwiZ2V0SW5uZXJIVE1MIiwiZ2V0T3V0ZXJIVE1MIiwidGFndHlwZXNfMSIsInJlcXVpcmUiLCJkb21fc2VyaWFsaXplcl8xIiwibm9kZSIsIm9wdGlvbnMiLCJkZWZhdWx0IiwiaGFzQ2hpbGRyZW4iLCJjaGlsZHJlbiIsIm1hcCIsImpvaW4iLCJBcnJheSIsImlzQXJyYXkiLCJpc1RhZyIsIm5hbWUiLCJpc0NEQVRBIiwiaXNUZXh0IiwiZGF0YSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsSUFBSUEsZUFBZSxHQUFJLFFBQVEsS0FBS0EsZUFBZCxJQUFrQyxVQUFVQyxHQUFWLEVBQWU7QUFDbkUsU0FBUUEsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVosR0FBMEJELEdBQTFCLEdBQWdDO0FBQUUsZUFBV0E7QUFBYixHQUF2QztBQUNILENBRkQ7O0FBR0FFLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFBRUMsRUFBQUEsS0FBSyxFQUFFO0FBQVQsQ0FBN0M7QUFDQUQsT0FBTyxDQUFDRSxPQUFSLEdBQWtCRixPQUFPLENBQUNHLFlBQVIsR0FBdUJILE9BQU8sQ0FBQ0ksWUFBUixHQUF1QixLQUFLLENBQXJFOztBQUNBLElBQUlDLFVBQVUsR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBeEI7O0FBQ0EsSUFBSUMsZ0JBQWdCLEdBQUdaLGVBQWUsQ0FBQ1csT0FBTyxDQUFDLGdCQUFELENBQVIsQ0FBdEM7O0FBT0EsU0FBU0YsWUFBVCxDQUFzQkksSUFBdEIsRUFBNEJDLE9BQTVCLEVBQXFDO0FBQ2pDLFNBQU9GLGdCQUFnQixDQUFDRyxPQUFqQixDQUF5QkYsSUFBekIsRUFBK0JDLE9BQS9CLENBQVA7QUFDSDs7QUFDRFQsT0FBTyxDQUFDSSxZQUFSLEdBQXVCQSxZQUF2Qjs7QUFPQSxTQUFTRCxZQUFULENBQXNCSyxJQUF0QixFQUE0QkMsT0FBNUIsRUFBcUM7QUFDakMsU0FBT0osVUFBVSxDQUFDTSxXQUFYLENBQXVCSCxJQUF2QixJQUNEQSxJQUFJLENBQUNJLFFBQUwsQ0FBY0MsR0FBZCxDQUFrQixVQUFVTCxJQUFWLEVBQWdCO0FBQUUsV0FBT0osWUFBWSxDQUFDSSxJQUFELEVBQU9DLE9BQVAsQ0FBbkI7QUFBcUMsR0FBekUsRUFBMkVLLElBQTNFLENBQWdGLEVBQWhGLENBREMsR0FFRCxFQUZOO0FBR0g7O0FBQ0RkLE9BQU8sQ0FBQ0csWUFBUixHQUF1QkEsWUFBdkI7O0FBT0EsU0FBU0QsT0FBVCxDQUFpQk0sSUFBakIsRUFBdUI7QUFDbkIsTUFBSU8sS0FBSyxDQUFDQyxPQUFOLENBQWNSLElBQWQsQ0FBSixFQUNJLE9BQU9BLElBQUksQ0FBQ0ssR0FBTCxDQUFTWCxPQUFULEVBQWtCWSxJQUFsQixDQUF1QixFQUF2QixDQUFQO0FBQ0osTUFBSVQsVUFBVSxDQUFDWSxLQUFYLENBQWlCVCxJQUFqQixDQUFKLEVBQ0ksT0FBT0EsSUFBSSxDQUFDVSxJQUFMLEtBQWMsSUFBZCxHQUFxQixJQUFyQixHQUE0QmhCLE9BQU8sQ0FBQ00sSUFBSSxDQUFDSSxRQUFOLENBQTFDO0FBQ0osTUFBSVAsVUFBVSxDQUFDYyxPQUFYLENBQW1CWCxJQUFuQixDQUFKLEVBQ0ksT0FBT04sT0FBTyxDQUFDTSxJQUFJLENBQUNJLFFBQU4sQ0FBZDtBQUNKLE1BQUlQLFVBQVUsQ0FBQ2UsTUFBWCxDQUFrQlosSUFBbEIsQ0FBSixFQUNJLE9BQU9BLElBQUksQ0FBQ2EsSUFBWjtBQUNKLFNBQU8sRUFBUDtBQUNIOztBQUNEckIsT0FBTyxDQUFDRSxPQUFSLEdBQWtCQSxPQUFsQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRUZXh0ID0gZXhwb3J0cy5nZXRJbm5lckhUTUwgPSBleHBvcnRzLmdldE91dGVySFRNTCA9IHZvaWQgMDtcbnZhciB0YWd0eXBlc18xID0gcmVxdWlyZShcIi4vdGFndHlwZXNcIik7XG52YXIgZG9tX3NlcmlhbGl6ZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZG9tLXNlcmlhbGl6ZXJcIikpO1xuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGdldCB0aGUgb3V0ZXIgSFRNTCBvZi5cbiAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbnMgZm9yIHNlcmlhbGl6YXRpb24uXG4gKiBAZGVwcmVjYXRlZCBVc2UgdGhlIGBkb20tc2VyaWFsaXplcmAgbW9kdWxlIGRpcmVjdGx5LlxuICogQHJldHVybnMgYG5vZGVgJ3Mgb3V0ZXIgSFRNTC5cbiAqL1xuZnVuY3Rpb24gZ2V0T3V0ZXJIVE1MKG5vZGUsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZG9tX3NlcmlhbGl6ZXJfMS5kZWZhdWx0KG5vZGUsIG9wdGlvbnMpO1xufVxuZXhwb3J0cy5nZXRPdXRlckhUTUwgPSBnZXRPdXRlckhUTUw7XG4vKipcbiAqIEBwYXJhbSBub2RlIE5vZGUgdG8gZ2V0IHRoZSBpbm5lciBIVE1MIG9mLlxuICogQHBhcmFtIG9wdGlvbnMgT3B0aW9ucyBmb3Igc2VyaWFsaXphdGlvbi5cbiAqIEBkZXByZWNhdGVkIFVzZSB0aGUgYGRvbS1zZXJpYWxpemVyYCBtb2R1bGUgZGlyZWN0bHkuXG4gKiBAcmV0dXJucyBgbm9kZWAncyBpbm5lciBIVE1MLlxuICovXG5mdW5jdGlvbiBnZXRJbm5lckhUTUwobm9kZSwgb3B0aW9ucykge1xuICAgIHJldHVybiB0YWd0eXBlc18xLmhhc0NoaWxkcmVuKG5vZGUpXG4gICAgICAgID8gbm9kZS5jaGlsZHJlbi5tYXAoZnVuY3Rpb24gKG5vZGUpIHsgcmV0dXJuIGdldE91dGVySFRNTChub2RlLCBvcHRpb25zKTsgfSkuam9pbihcIlwiKVxuICAgICAgICA6IFwiXCI7XG59XG5leHBvcnRzLmdldElubmVySFRNTCA9IGdldElubmVySFRNTDtcbi8qKlxuICogR2V0IGEgbm9kZSdzIGlubmVyIHRleHQuXG4gKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBnZXQgdGhlIGlubmVyIHRleHQgb2YuXG4gKiBAcmV0dXJucyBgbm9kZWAncyBpbm5lciB0ZXh0LlxuICovXG5mdW5jdGlvbiBnZXRUZXh0KG5vZGUpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShub2RlKSlcbiAgICAgICAgcmV0dXJuIG5vZGUubWFwKGdldFRleHQpLmpvaW4oXCJcIik7XG4gICAgaWYgKHRhZ3R5cGVzXzEuaXNUYWcobm9kZSkpXG4gICAgICAgIHJldHVybiBub2RlLm5hbWUgPT09IFwiYnJcIiA/IFwiXFxuXCIgOiBnZXRUZXh0KG5vZGUuY2hpbGRyZW4pO1xuICAgIGlmICh0YWd0eXBlc18xLmlzQ0RBVEEobm9kZSkpXG4gICAgICAgIHJldHVybiBnZXRUZXh0KG5vZGUuY2hpbGRyZW4pO1xuICAgIGlmICh0YWd0eXBlc18xLmlzVGV4dChub2RlKSlcbiAgICAgICAgcmV0dXJuIG5vZGUuZGF0YTtcbiAgICByZXR1cm4gXCJcIjtcbn1cbmV4cG9ydHMuZ2V0VGV4dCA9IGdldFRleHQ7XG4iXX0=