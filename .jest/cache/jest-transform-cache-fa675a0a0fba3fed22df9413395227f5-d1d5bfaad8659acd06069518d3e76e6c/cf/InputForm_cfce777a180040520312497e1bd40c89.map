{"version":3,"sources":["InputForm.tsx"],"names":["InputForm","props","dispatch","state","repo","isLoading","error","theme","handleSubmit","onSuccess","onSubmit","repoActions","getRepoIssues","page","reset","colors","Input","styles","button","form","validate","StyleSheet","create","container","margin","marginTop","title","fontSize","marginVertical"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {reduxForm, Field, InjectedFormProps} from 'redux-form';\nimport {Button, useTheme} from 'react-native-paper';\nimport Input from './Input';\nimport {validate} from '../validate';\nimport {IApplicationState} from '../redux/appReducer';\nimport {repoActions} from '../redux/repo/actions';\n\ninterface IFormState {\n  repository: string;\n  organization: string;\n}\n\ninterface IProps {\n  onSuccess: () => void;\n}\nconst InputForm = (props: InjectedFormProps<IFormState> & IProps) => {\n  const dispatch = useDispatch();\n  const {isLoading, error} = useSelector(\n    (state: IApplicationState) => state.repo,\n  );\n  const theme = useTheme();\n  const {handleSubmit, onSuccess} = props;\n  const onSubmit = () => {\n    dispatch(repoActions.getRepoIssues({page: 1, reset: true}));\n  };\n\n  useEffect(() => {\n    if (!isLoading && error === false) onSuccess();\n  }, [isLoading, error]);\n\n  return (\n    <View>\n      <Field\n        errorColor={theme.colors.error}\n        maxLength={60}\n        label=\"organization*\"\n        name=\"organization\"\n        component={Input}\n      />\n      <Field\n        errorColor={theme.colors.error}\n        maxLength={100}\n        label=\"repository*\"\n        name=\"repository\"\n        component={Input}\n      />\n      <Button\n        disabled={isLoading}\n        loading={isLoading}\n        onPress={handleSubmit(onSubmit)}\n        style={styles.button}\n        mode=\"contained\">\n        get issues\n      </Button>\n    </View>\n  );\n};\n\nexport default reduxForm<IFormState, IProps>({\n  form: 'form',\n  // fields: ['organization', 'repository'],\n  validate,\n})(InputForm);\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 10,\n  },\n  button: {\n    marginTop: 20,\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 20,\n  },\n});\n"]}