{"version":3,"sources":["sagaWrapper.js"],"names":["Object","defineProperty","exports","value","isSagaWrapper","default","createSagaWrapper","_fsmIterator","_interopRequireDefault","require","obj","__esModule","INIT","REFINE","NEXT","LOOP","FALSY","SAGA_WRAPPER","wrapFalsy","unwrapFalsy","saga","name","sagaWrapper","wrappedIterator","refineYieldedValue","onReturn","onError","result","getNext","next","e","complete","done","_","fsm","undefined","Array","isArray","map","throw","response","finalResponse","return","innerError"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSagaWrapper = isSagaWrapper;\nexports.default = createSagaWrapper;\n\nvar _fsmIterator = _interopRequireDefault(require(\"fsm-iterator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst INIT = 'INIT';\nconst REFINE = 'REFINE';\nconst NEXT = 'NEXT';\nconst LOOP = 'LOOP';\nconst FALSY = '@@redux-saga-test-plan/falsy';\nconst SAGA_WRAPPER = '@@redux-saga-test-plan/saga-wrapper'; // Tagging falsy values that aren't null or undefined because\n// redux-saga blocks when they are yielded.\n// https://github.com/jfairbank/redux-saga-test-plan/issues/94\n\nfunction wrapFalsy(value) {\n  if (!value && value != null) {\n    return {\n      [FALSY]: true,\n      value\n    };\n  }\n\n  return value;\n}\n\nfunction unwrapFalsy(value) {\n  if (value && typeof value === 'object' && value[FALSY]) {\n    return value.value;\n  }\n\n  return value;\n}\n\nfunction isSagaWrapper(saga) {\n  return saga[SAGA_WRAPPER];\n}\n\nfunction createSagaWrapper(name = 'sagaWrapper') {\n  function sagaWrapper(wrappedIterator, refineYieldedValue, onReturn, onError) {\n    let result;\n\n    function getNext(...args) {\n      try {\n        return wrappedIterator.next(...args);\n      } catch (e) {\n        if (typeof onError === 'function') {\n          onError(e);\n        }\n\n        throw e;\n      }\n    }\n\n    function complete() {\n      if (typeof onReturn === 'function') {\n        onReturn(result.value);\n      }\n\n      return {\n        value: result.value,\n        done: true\n      };\n    }\n\n    return (0, _fsmIterator.default)(INIT, {\n      [INIT](_, fsm) {\n        result = getNext();\n        return fsm[REFINE](undefined, fsm);\n      },\n\n      [REFINE](_, fsm) {\n        try {\n          if (result.done) {\n            return complete();\n          }\n\n          let value = refineYieldedValue(result.value);\n          value = Array.isArray(value) ? value.map(wrapFalsy) : wrapFalsy(value);\n          return {\n            value,\n            next: NEXT\n          };\n        } catch (e) {\n          return fsm.throw(e, fsm);\n        }\n      },\n\n      [NEXT](response, fsm) {\n        const finalResponse = Array.isArray(response) ? response.map(unwrapFalsy) : unwrapFalsy(response);\n        result = getNext(finalResponse);\n        return fsm[LOOP](undefined, fsm);\n      },\n\n      [LOOP](_, fsm) {\n        if (result.done) {\n          return complete();\n        }\n\n        return fsm[REFINE](undefined, fsm);\n      },\n\n      return(value, fsm) {\n        result = wrappedIterator.return(value);\n        return fsm[LOOP](undefined, fsm);\n      },\n\n      throw(e, fsm) {\n        try {\n          result = wrappedIterator.throw(e);\n        } catch (innerError) {\n          if (typeof onError === 'function') {\n            onError(innerError);\n          }\n\n          throw innerError;\n        }\n\n        return fsm[LOOP](undefined, fsm);\n      }\n\n    });\n  }\n\n  sagaWrapper[SAGA_WRAPPER] = true;\n\n  try {\n    Object.defineProperty(sagaWrapper, 'name', {\n      value: name\n    }); // eslint-disable-next-line no-empty\n  } catch (e) {}\n\n  return sagaWrapper;\n}"]}