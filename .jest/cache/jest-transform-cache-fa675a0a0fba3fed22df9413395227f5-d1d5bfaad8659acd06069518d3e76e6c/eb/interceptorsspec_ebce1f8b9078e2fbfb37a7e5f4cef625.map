{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/redux/interceptors/__tests__/interceptors.spec.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,QAAQ,CAAC,cAAD,EAAiB,YAAK;AAC5B,EAAA,QAAQ,CAAC,6BAAD,EAAgC,YAAK;AAC3C,IAAA,UAAU,CAAC,YAAK;AACd,MAAA,cAAA,CAAA,YAAA,CAAa,OAAA,CAAA,mBAAA,EAAb;AACD,KAFS,CAAV;AAIA,IAAA,EAAE,CAAC,yDAAD,EAA4D,YAAK;AACjE,UAAM,GAAG,GAAG;AACV,QAAA,QAAQ,EAAE;AAAE,UAAA,MAAM,EAAE;AAAV;AADA,OAAZ;AAGA,UAAM,WAAW,GAAI,OAAA,CAAA,OAAA,CAAM,YAAN,CAAmB,QAAnB,CAAoC,QAApC,CAA6C,CAA7C,EAAgD,QAAhD,CAAyD,GAAzD,CAArB;AACA,MAAA,MAAM,CAAC,WAAD,CAAN,CACG,OADH,CACW,aADX,CACyB,GADzB,EAEG,OAFH,CAEW,YAAK;AACZ,QAAA,MAAM,CAAC,cAAA,CAAA,cAAD,CAAN,CAAuB,oBAAvB,CACE,WADF,EAEE,2CAFF;AAID,OAPH;AAQD,KAbC,CAAF;AAcA,IAAA,EAAE,CAAC,oEAAD,EAAuE,YAAK;AAC5E,UAAM,GAAG,GAAG;AACV,QAAA,QAAQ,EAAE;AAAE,UAAA,MAAM,EAAE;AAAV;AADA,OAAZ;AAGA,UAAM,WAAW,GAAI,OAAA,CAAA,OAAA,CAAM,YAAN,CAAmB,QAAnB,CAAoC,QAApC,CAA6C,CAA7C,EAAgD,QAAhD,CAAyD,GAAzD,CAArB;AACA,MAAA,MAAM,CAAC,WAAD,CAAN,CACG,OADH,CACW,aADX,CACyB,GADzB,EAEG,OAFH,CAEW,YAAK;AACZ,QAAA,MAAM,CAAC,cAAA,CAAA,cAAD,CAAN,CAAuB,oBAAvB,CAA4C,MAA5C,EAAoD,sBAApD;AACD,OAJH;AAKD,KAVC,CAAF;AAWD,GA9BO,CAAR;AA+BD,CAhCO,CAAR","sourcesContent":["import 'jest';\nimport axios, { createAxiosInstance } from '../../axios';\nimport { interceptors, showErrorAlert } from '../interceptors';\n\ndescribe('Interceptors', () => {\n  describe('NotFoundResponseInterceptor', () => {\n    beforeEach(() => {\n      interceptors(createAxiosInstance());\n    });\n\n    it('should show not found message if response status is 404', () => {\n      const res = {\n        response: { status: 404 },\n      };\n      const rejectedRes = (axios.interceptors.response as any).handlers[0].rejected(res);\n      expect(rejectedRes)\n        .rejects.toMatchObject(res)\n        .finally(() => {\n          expect(showErrorAlert).toHaveBeenCalledWith(\n            'Not found',\n            'Organization and/or repository not found!',\n          );\n        });\n    });\n    it('should show something went wrong message if response status is 500', () => {\n      const res = {\n        response: { status: 500 },\n      };\n      const rejectedRes = (axios.interceptors.response as any).handlers[0].rejected(res);\n      expect(rejectedRes)\n        .rejects.toMatchObject(res)\n        .finally(() => {\n          expect(showErrorAlert).toHaveBeenCalledWith('Oops', 'Something went wrong');\n        });\n    });\n  });\n});\n"]}