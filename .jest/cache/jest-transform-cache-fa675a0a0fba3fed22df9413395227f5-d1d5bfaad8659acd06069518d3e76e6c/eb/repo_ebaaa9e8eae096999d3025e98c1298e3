513ebfb93d21e597a59e3bb36df9baad
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repoIssuesMock = void 0;
exports.repoIssuesMock = {
  data: [{
    html_url: 'https://github.com/meliorence/react-native-render-html/issues/156',
    node_id: 'MDU6SXNzdWUzMjYwODI3Mzc=',
    number: 156,
    title: 'Empty line in output, even if there is no <br> or other Tag to parse',
    user: {
      login: 'xstable'
    },
    labels: [{
      id: 490889432,
      name: 'bug',
      color: 'ee0701'
    }, {
      id: 957368524,
      name: 'bug:minor',
      color: 'd93f0b'
    }],
    state: 'open',
    comments: 3
  }, {
    html_url: 'https://github.com/meliorence/react-native-render-html/issues/152',
    node_id: 'MDU6SXNzdWUzMjQ2MDYyNTI=',
    number: 152,
    title: 'How to deal with the long rendering time when the HTML string is very long',
    user: {
      login: 'junchenjun'
    },
    labels: [{
      id: 490889434,
      name: 'enhancement',
      color: '84b6eb'
    }, {
      id: 490889435,
      name: 'is:help wanted',
      color: '128A0C'
    }, {
      id: 490889437,
      name: 'question',
      color: 'cc317c'
    }],
    state: 'open',
    comments: 14
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmlzZGVyYmVsL0RvY3VtZW50cy9hcGNnaXRodWJpc3N1ZXMvc3JjL19fbW9ja3NfXy9yZXBvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVhLE9BQUEsQ0FBQSxjQUFBLEdBQWlCO0FBQzVCLEVBQUEsSUFBSSxFQUFFLENBQ0o7QUFDRSxJQUFBLFFBQVEsRUFDTixtRUFGSjtBQUlFLElBQUEsT0FBTyxFQUFFLDBCQUpYO0FBS0UsSUFBQSxNQUFNLEVBQUUsR0FMVjtBQU1FLElBQUEsS0FBSyxFQUNILHNFQVBKO0FBUUUsSUFBQSxJQUFJLEVBQUU7QUFDSixNQUFBLEtBQUssRUFBRTtBQURILEtBUlI7QUFXRSxJQUFBLE1BQU0sRUFBRSxDQUNOO0FBQ0UsTUFBQSxFQUFFLEVBQUUsU0FETjtBQUVFLE1BQUEsSUFBSSxFQUFFLEtBRlI7QUFHRSxNQUFBLEtBQUssRUFBRTtBQUhULEtBRE0sRUFNTjtBQUNFLE1BQUEsRUFBRSxFQUFFLFNBRE47QUFFRSxNQUFBLElBQUksRUFBRSxXQUZSO0FBR0UsTUFBQSxLQUFLLEVBQUU7QUFIVCxLQU5NLENBWFY7QUF1QkUsSUFBQSxLQUFLLEVBQUUsTUF2QlQ7QUF3QkUsSUFBQSxRQUFRLEVBQUU7QUF4QlosR0FESSxFQTJCSjtBQUNFLElBQUEsUUFBUSxFQUNOLG1FQUZKO0FBR0UsSUFBQSxPQUFPLEVBQUUsMEJBSFg7QUFJRSxJQUFBLE1BQU0sRUFBRSxHQUpWO0FBS0UsSUFBQSxLQUFLLEVBQ0gsNEVBTko7QUFPRSxJQUFBLElBQUksRUFBRTtBQUNKLE1BQUEsS0FBSyxFQUFFO0FBREgsS0FQUjtBQVVFLElBQUEsTUFBTSxFQUFFLENBQ047QUFDRSxNQUFBLEVBQUUsRUFBRSxTQUROO0FBRUUsTUFBQSxJQUFJLEVBQUUsYUFGUjtBQUdFLE1BQUEsS0FBSyxFQUFFO0FBSFQsS0FETSxFQU1OO0FBQ0UsTUFBQSxFQUFFLEVBQUUsU0FETjtBQUVFLE1BQUEsSUFBSSxFQUFFLGdCQUZSO0FBR0UsTUFBQSxLQUFLLEVBQUU7QUFIVCxLQU5NLEVBV047QUFDRSxNQUFBLEVBQUUsRUFBRSxTQUROO0FBRUUsTUFBQSxJQUFJLEVBQUUsVUFGUjtBQUdFLE1BQUEsS0FBSyxFQUFFO0FBSFQsS0FYTSxDQVZWO0FBMkJFLElBQUEsS0FBSyxFQUFFLE1BM0JUO0FBNEJFLElBQUEsUUFBUSxFQUFFO0FBNUJaLEdBM0JJO0FBRHNCLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJc3N1ZX0gZnJvbSAnLi4vcmVkdXgvcmVwby9yZWR1Y2VyJztcblxuZXhwb3J0IGNvbnN0IHJlcG9Jc3N1ZXNNb2NrID0ge1xuICBkYXRhOiBbXG4gICAge1xuICAgICAgaHRtbF91cmw6XG4gICAgICAgICdodHRwczovL2dpdGh1Yi5jb20vbWVsaW9yZW5jZS9yZWFjdC1uYXRpdmUtcmVuZGVyLWh0bWwvaXNzdWVzLzE1NicsXG5cbiAgICAgIG5vZGVfaWQ6ICdNRFU2U1hOemRXVXpNall3T0RJM016Yz0nLFxuICAgICAgbnVtYmVyOiAxNTYsXG4gICAgICB0aXRsZTpcbiAgICAgICAgJ0VtcHR5IGxpbmUgaW4gb3V0cHV0LCBldmVuIGlmIHRoZXJlIGlzIG5vIDxicj4gb3Igb3RoZXIgVGFnIHRvIHBhcnNlJyxcbiAgICAgIHVzZXI6IHtcbiAgICAgICAgbG9naW46ICd4c3RhYmxlJyxcbiAgICAgIH0sXG4gICAgICBsYWJlbHM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGlkOiA0OTA4ODk0MzIsXG4gICAgICAgICAgbmFtZTogJ2J1ZycsXG4gICAgICAgICAgY29sb3I6ICdlZTA3MDEnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6IDk1NzM2ODUyNCxcbiAgICAgICAgICBuYW1lOiAnYnVnOm1pbm9yJyxcbiAgICAgICAgICBjb2xvcjogJ2Q5M2YwYicsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgICAgc3RhdGU6ICdvcGVuJyxcbiAgICAgIGNvbW1lbnRzOiAzLFxuICAgIH0sXG4gICAge1xuICAgICAgaHRtbF91cmw6XG4gICAgICAgICdodHRwczovL2dpdGh1Yi5jb20vbWVsaW9yZW5jZS9yZWFjdC1uYXRpdmUtcmVuZGVyLWh0bWwvaXNzdWVzLzE1MicsXG4gICAgICBub2RlX2lkOiAnTURVNlNYTnpkV1V6TWpRMk1EWXlOVEk9JyxcbiAgICAgIG51bWJlcjogMTUyLFxuICAgICAgdGl0bGU6XG4gICAgICAgICdIb3cgdG8gZGVhbCB3aXRoIHRoZSBsb25nIHJlbmRlcmluZyB0aW1lIHdoZW4gdGhlIEhUTUwgc3RyaW5nIGlzIHZlcnkgbG9uZycsXG4gICAgICB1c2VyOiB7XG4gICAgICAgIGxvZ2luOiAnanVuY2hlbmp1bicsXG4gICAgICB9LFxuICAgICAgbGFiZWxzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogNDkwODg5NDM0LFxuICAgICAgICAgIG5hbWU6ICdlbmhhbmNlbWVudCcsXG4gICAgICAgICAgY29sb3I6ICc4NGI2ZWInLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6IDQ5MDg4OTQzNSxcbiAgICAgICAgICBuYW1lOiAnaXM6aGVscCB3YW50ZWQnLFxuICAgICAgICAgIGNvbG9yOiAnMTI4QTBDJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGlkOiA0OTA4ODk0MzcsXG4gICAgICAgICAgbmFtZTogJ3F1ZXN0aW9uJyxcbiAgICAgICAgICBjb2xvcjogJ2NjMzE3YycsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgICAgc3RhdGU6ICdvcGVuJyxcbiAgICAgIGNvbW1lbnRzOiAxNCxcbiAgICB9LFxuICBdIGFzIEFycmF5PElzc3VlPixcbn07XG4iXX0=