65daf0a313d368e780063a4450f52216
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

require("jest");

var _axios = _interopRequireWildcard(require("../../axios"));

var _interceptors = require("../interceptors");

describe('Interceptors', function () {
  describe('NotFoundResponseInterceptor', function () {
    var sum;
    beforeEach(function () {
      sum = jest.fn();
    });
    (0, _interceptors.interceptors)((0, _axios.createAxiosInstance)());
    it('should throw error if response status is other then 403', function () {
      var res = {
        response: {
          status: 404
        }
      };

      var rejectedRes = _axios.default.interceptors.response.handlers[0].rejected(res);

      expect(sum).toBeCalled();
      expect(rejectedRes).rejects.toMatchObject(res);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmlzZGVyYmVsL0RvY3VtZW50cy9hcGNnaXRodWJpc3N1ZXMvc3JjL3JlZHV4L2ludGVyY2VwdG9ycy9fX3Rlc3RzX18vaW50ZXJjZXB0b3JzLnNwZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxRQUFRLENBQUMsY0FBRCxFQUFpQixZQUFLO0FBQzVCLEVBQUEsUUFBUSxDQUFDLDZCQUFELEVBQWdDLFlBQUs7QUFDM0MsUUFBSSxHQUFKO0FBQ0EsSUFBQSxVQUFVLENBQUMsWUFBSztBQUVkLE1BQUEsR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFMLEVBQU47QUFHRCxLQUxTLENBQVY7QUFNQSxvQ0FBYSxpQ0FBYjtBQUVBLElBQUEsRUFBRSxDQUFDLHlEQUFELEVBQTRELFlBQUs7QUFDakUsVUFBTSxHQUFHLEdBQUc7QUFDVixRQUFBLFFBQVEsRUFBRTtBQUFDLFVBQUEsTUFBTSxFQUFFO0FBQVQ7QUFEQSxPQUFaOztBQUdBLFVBQU0sV0FBVyxHQUFHLGVBQU0sWUFBTixDQUFtQixRQUFuQixDQUE0QixRQUE1QixDQUFxQyxDQUFyQyxFQUF3QyxRQUF4QyxDQUFpRCxHQUFqRCxDQUFwQjs7QUFJQSxNQUFBLE1BQU0sQ0FBQyxHQUFELENBQU4sQ0FBWSxVQUFaO0FBQ0EsTUFBQSxNQUFNLENBQUMsV0FBRCxDQUFOLENBQW9CLE9BQXBCLENBQTRCLGFBQTVCLENBQTBDLEdBQTFDO0FBT0QsS0FoQkMsQ0FBRjtBQTZCRCxHQXZDTyxDQUFSO0FBd0NELENBekNPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQge3Nob3dNZXNzYWdlfSBmcm9tICdyZWFjdC1uYXRpdmUtZmxhc2gtbWVzc2FnZSc7XG5pbXBvcnQgJ2plc3QnO1xuaW1wb3J0IGF4aW9zLCB7Y3JlYXRlQXhpb3NJbnN0YW5jZX0gZnJvbSAnLi4vLi4vYXhpb3MnO1xuaW1wb3J0IHtpbnRlcmNlcHRvcnN9IGZyb20gJy4uL2ludGVyY2VwdG9ycyc7XG5cbmRlc2NyaWJlKCdJbnRlcmNlcHRvcnMnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdOb3RGb3VuZFJlc3BvbnNlSW50ZXJjZXB0b3InLCAoKSA9PiB7XG4gICAgbGV0IHN1bTogamVzdC5Nb2NrO1xuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgLy8gKHNob3dNZXNzYWdlIGFzIGplc3QuTW9jaykubW9ja1Jlc2V0KCk7XG4gICAgICBzdW0gPSBqZXN0LmZuKCk7XG4gICAgICAvLyBtb2NrRm4ubW9ja1Jlc2V0KCk7XG4gICAgICAvLyBqZXN0LnVzZUZha2VUaW1lcnMoKTtcbiAgICB9KTtcbiAgICBpbnRlcmNlcHRvcnMoY3JlYXRlQXhpb3NJbnN0YW5jZSgpKTtcblxuICAgIGl0KCdzaG91bGQgdGhyb3cgZXJyb3IgaWYgcmVzcG9uc2Ugc3RhdHVzIGlzIG90aGVyIHRoZW4gNDAzJywgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzID0ge1xuICAgICAgICByZXNwb25zZToge3N0YXR1czogNDA0fSxcbiAgICAgIH07XG4gICAgICBjb25zdCByZWplY3RlZFJlcyA9IGF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS5oYW5kbGVyc1swXS5yZWplY3RlZChyZXMpO1xuXG4gICAgICAvLyAnTm90IGZvdW5kJyxcbiAgICAgIC8vICAgICAnT3JnYW5pemF0aW9uIGFuZC9vciByZXBvc2l0b3J5IG5vdCBmb3VuZCEnLFxuICAgICAgZXhwZWN0KHN1bSkudG9CZUNhbGxlZCgpO1xuICAgICAgZXhwZWN0KHJlamVjdGVkUmVzKS5yZWplY3RzLnRvTWF0Y2hPYmplY3QocmVzKTtcbiAgICAgIC8vIGludGVyY2VwdG9yLnNob3dFcnJvckFsZXJ0ID0gc2VuZE5vdGlmaWNhdGlvbk1vY2s7XG5cbiAgICAgIC8vIGV4cGVjdChzaG93TWVzc2FnZSkudG9IYXZlQmVlbkNhbGxlZFdpdGgoe1xuICAgICAgLy8gICBtZXNzYWdlOiAnT3JnYW5pemF0aW9uIGFuZC9vciByZXBvc2l0b3J5IG5vdCBmb3VuZCEnLFxuICAgICAgLy8gICB0eXBlOiAnZGFuZ2VyJyxcbiAgICAgIC8vIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gaXQoJ2l0IHNob3VsZCByZWRpcmVjdCB0byBsb2dpbiBwYWdlIGlmIHJlc3BvbnNlIHN0YXR1cyBpcyA0MDMnLCAoKSA9PiB7XG4gICAgLy8gICAvLyBnbG9iYWwgaXMgYHdpbmRvd2AgaW4gamVzdFxuICAgIC8vICAgZ2xvYmFsLmxvY2F0aW9uLnJlcGxhY2UgPSBqZXN0LmZuKCk7XG5cbiAgICAvLyAgIGNvbnN0IHJlamVjdGVkUmVzID0gYXhpb3MuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmhhbmRsZXJzWzBdLnJlamVjdGVkKHtcbiAgICAvLyAgICAgcmVzcG9uc2U6IHtzdGF0dXM6IDQwM30sXG4gICAgLy8gICB9KTtcblxuICAgIC8vICAgZXhwZWN0KGdsb2JhbC5sb2NhdGlvbi5yZXBsYWNlKS50b0JlQ2FsbGVkV2l0aCgnL2xvZ2luJyk7XG4gICAgLy8gICBleHBlY3QocmVqZWN0ZWRSZXMpLnRvQmVVbmRlZmluZWQoKTtcbiAgICAvLyB9KTtcbiAgfSk7XG59KTtcbiJdfQ==