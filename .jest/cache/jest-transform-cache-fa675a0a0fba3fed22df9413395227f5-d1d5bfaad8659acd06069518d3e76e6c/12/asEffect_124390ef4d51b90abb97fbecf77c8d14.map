{"version":3,"sources":["asEffect.js"],"names":["Object","defineProperty","exports","value","asEffect","_effects","require","_symbols","createAsEffectType","type","effect","IO","payload","undefined","take","effectTypes","TAKE","put","PUT","all","ALL","race","RACE","call","CALL","cps","CPS","fork","FORK","join","JOIN","cancel","CANCEL","select","SELECT","actionChannel","ACTION_CHANNEL","cancelled","CANCELLED","flush","FLUSH","getContext","GET_CONTEXT","setContext","SET_CONTEXT"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAtB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAtB;;AAEA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,IAAI;AAAA,SAAI,UAAAC,MAAM,EAAI;AAC3C,QAAIA,MAAM,IAAIA,MAAM,CAACH,QAAQ,CAACI,EAAV,CAAhB,IAAiCD,MAAM,CAACD,IAAP,KAAgBA,IAArD,EAA2D;AACzD,aAAOC,MAAM,CAACE,OAAd;AACD;;AAED,WAAOC,SAAP;AACD,GAN8B;AAAA,CAA/B;;AASA,IAAMT,QAAQ,GAAG;AACfU,EAAAA,IAAI,EAAEN,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBC,IAAtB,CADT;AAEfC,EAAAA,GAAG,EAAET,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBG,GAAtB,CAFR;AAGfC,EAAAA,GAAG,EAAEX,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBK,GAAtB,CAHR;AAIfC,EAAAA,IAAI,EAAEb,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBO,IAAtB,CAJT;AAKfC,EAAAA,IAAI,EAAEf,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBS,IAAtB,CALT;AAMfC,EAAAA,GAAG,EAAEjB,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBW,GAAtB,CANR;AAOfC,EAAAA,IAAI,EAAEnB,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBa,IAAtB,CAPT;AAQfC,EAAAA,IAAI,EAAErB,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBe,IAAtB,CART;AASfC,EAAAA,MAAM,EAAEvB,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBiB,MAAtB,CATX;AAUfC,EAAAA,MAAM,EAAEzB,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBmB,MAAtB,CAVX;AAWfC,EAAAA,aAAa,EAAE3B,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBqB,cAAtB,CAXlB;AAYfC,EAAAA,SAAS,EAAE7B,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqBuB,SAAtB,CAZd;AAafC,EAAAA,KAAK,EAAE/B,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqByB,KAAtB,CAbV;AAcfC,EAAAA,UAAU,EAAEjC,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqB2B,WAAtB,CAdf;AAefC,EAAAA,UAAU,EAAEnC,kBAAkB,CAACH,QAAQ,CAACU,WAAT,CAAqB6B,WAAtB;AAff,CAAjB;AAiBA1C,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asEffect = void 0;\n\nvar _effects = require(\"redux-saga/effects\");\n\nvar _symbols = require(\"@redux-saga/symbols\");\n\nconst createAsEffectType = type => effect => {\n  if (effect && effect[_symbols.IO] && effect.type === type) {\n    return effect.payload;\n  }\n\n  return undefined;\n}; // eslint-disable-next-line import/prefer-default-export\n\n\nconst asEffect = {\n  take: createAsEffectType(_effects.effectTypes.TAKE),\n  put: createAsEffectType(_effects.effectTypes.PUT),\n  all: createAsEffectType(_effects.effectTypes.ALL),\n  race: createAsEffectType(_effects.effectTypes.RACE),\n  call: createAsEffectType(_effects.effectTypes.CALL),\n  cps: createAsEffectType(_effects.effectTypes.CPS),\n  fork: createAsEffectType(_effects.effectTypes.FORK),\n  join: createAsEffectType(_effects.effectTypes.JOIN),\n  cancel: createAsEffectType(_effects.effectTypes.CANCEL),\n  select: createAsEffectType(_effects.effectTypes.SELECT),\n  actionChannel: createAsEffectType(_effects.effectTypes.ACTION_CHANNEL),\n  cancelled: createAsEffectType(_effects.effectTypes.CANCELLED),\n  flush: createAsEffectType(_effects.effectTypes.FLUSH),\n  getContext: createAsEffectType(_effects.effectTypes.GET_CONTEXT),\n  setContext: createAsEffectType(_effects.effectTypes.SET_CONTEXT)\n};\nexports.asEffect = asEffect;"]}