{"version":3,"sources":["index.js"],"names":["baseIsEqual","require","bindCallback","isEqual","value","other","customizer","thisArg","undefined","result","module","exports"],"mappings":"AAQA,IAAIA,WAAW,GAAGC,OAAO,CAAC,qBAAD,CAAzB;AAAA,IACIC,YAAY,GAAGD,OAAO,CAAC,sBAAD,CAD1B;;AA+CA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,UAA/B,EAA2CC,OAA3C,EAAoD;AAClDD,EAAAA,UAAU,GAAG,OAAOA,UAAP,IAAqB,UAArB,GAAkCJ,YAAY,CAACI,UAAD,EAAaC,OAAb,EAAsB,CAAtB,CAA9C,GAAyEC,SAAtF;AACA,MAAIC,MAAM,GAAGH,UAAU,GAAGA,UAAU,CAACF,KAAD,EAAQC,KAAR,CAAb,GAA8BG,SAArD;AACA,SAAQC,MAAM,KAAKD,SAAX,GAAuBR,WAAW,CAACI,KAAD,EAAQC,KAAR,EAAeC,UAAf,CAAlC,GAA+D,CAAC,CAACG,MAAzE;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBR,OAAjB","sourcesContent":["/**\n * lodash 3.0.4 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseIsEqual = require('lodash._baseisequal'),\n    bindCallback = require('lodash._bindcallback');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent. If `customizer` is provided it is invoked to compare values.\n * If `customizer` returns `undefined` comparisons are handled by the method\n * instead. The `customizer` is bound to `thisArg` and invoked with three\n * arguments: (value, other [, index|key]).\n *\n * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n * numbers, `Object` objects, regexes, and strings. Objects are compared by\n * their own, not inherited, enumerable properties. Functions and DOM nodes\n * are **not** supported. Provide a customizer function to extend support\n * for comparing other values.\n *\n * @static\n * @memberOf _\n * @alias eq\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize value comparisons.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * object == other;\n * // => false\n *\n * _.isEqual(object, other);\n * // => true\n *\n * // using a customizer callback\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqual(array, other, function(value, other) {\n *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n *     return true;\n *   }\n * });\n * // => true\n */\nfunction isEqual(value, other, customizer, thisArg) {\n  customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n}\n\nmodule.exports = isEqual;\n"]}