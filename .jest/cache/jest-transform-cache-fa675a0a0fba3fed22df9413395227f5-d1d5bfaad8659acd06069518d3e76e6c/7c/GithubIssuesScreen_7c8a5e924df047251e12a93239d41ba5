d9ef71b25b6c2af568a893f043d03df9
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNativePaper = require("react-native-paper");

var _reactRedux = require("react-redux");

var _moment = _interopRequireDefault(require("moment"));

var _Labels = _interopRequireDefault(require("../components/Labels"));

var _Title = _interopRequireDefault(require("../components/Title"));

var _open = _interopRequireDefault(require("../assets/svgs/open.svg"));

var _closed = _interopRequireDefault(require("../assets/svgs/closed.svg"));

var _Pagination = _interopRequireDefault(require("../components/Pagination"));

var _this = this,
    _jsxFileName = "/Users/anisderbel/Documents/apcgithubissues/src/screens/GithubIssuesScreen.tsx";

var GithubIssuesScreen = function GithubIssuesScreen() {
  var theme = (0, _reactNativePaper.useTheme)();
  var refList = (0, _react.useRef)(null);

  var _useSelector = (0, _reactRedux.useSelector)(function (state) {
    return state.repo;
  }),
      issues = _useSelector.issues,
      page = _useSelector.page;

  var _useSelector2 = (0, _reactRedux.useSelector)(function (state) {
    return state.form;
  }),
      values = _useSelector2.form.values;

  (0, _react.useEffect)(function () {
    var _a;

    (_a = refList === null || refList === void 0 ? void 0 : refList.current) === null || _a === void 0 ? void 0 : _a.scrollToOffset({
      offset: 0
    });
  }, [page]);

  var renderItem = function renderItem(_ref) {
    var item = _ref.item;
    return _react.default.createElement(_reactNative.TouchableOpacity, {
      onPress: function onPress() {
        return _reactNative.Linking.openURL(item.html_url);
      },
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 20,
        columnNumber: 39
      }
    }, _react.default.createElement(_reactNative.View, {
      style: [{
        marginHorizontal: theme.spacing.m
      }, styles.row],
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 21,
        columnNumber: 7
      }
    }, _react.default.createElement(_reactNative.View, {
      style: {
        top: theme.spacing.xs
      },
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 22,
        columnNumber: 9
      }
    }, item.state === 'open' ? _react.default.createElement(_open.default, {
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 23,
        columnNumber: 36
      }
    }) : _react.default.createElement(_closed.default, {
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 23,
        columnNumber: 47
      }
    })), _react.default.createElement(_reactNative.View, {
      style: {
        marginLeft: theme.spacing.m
      },
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 25,
        columnNumber: 9
      }
    }, _react.default.createElement(_Title.default, {
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 26,
        columnNumber: 11
      }
    }, item.title), item.labels && item.labels.length > 0 && _react.default.createElement(_Labels.default, {
      items: item.labels,
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 27,
        columnNumber: 54
      }
    }), _react.default.createElement(_reactNative.Text, {
      style: [theme.variants.info, {
        color: theme.colors.text,
        marginTop: theme.spacing.s
      }],
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 28,
        columnNumber: 11
      }
    }, "#", item.number, " opened ", (0, _moment.default)(item.created_at).fromNow(), " by", ' ', item.user.login))));
  };

  var ItemSeparatorComponent = function ItemSeparatorComponent() {
    return _react.default.createElement(_reactNativePaper.Divider, {
      style: {
        marginVertical: theme.spacing.m,
        backgroundColor: theme.colors.divider
      },
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38,
        columnNumber: 43
      }
    });
  };

  return _react.default.createElement(_reactNative.View, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 13
    }
  }, values && _react.default.createElement(_reactNative.Text, {
    style: [theme.variants.h1, {
      margin: theme.spacing.m,
      color: theme.colors.primary
    }],
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 19
    }
  }, values.organization + "/" + values.repository), _react.default.createElement(_reactNative.FlatList, {
    ref: refList,
    keyExtractor: function keyExtractor(item) {
      return item.node_id;
    },
    contentContainerStyle: styles.container,
    ItemSeparatorComponent: ItemSeparatorComponent,
    ListFooterComponent: _Pagination.default,
    renderItem: renderItem,
    data: issues[page],
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 7
    }
  }));
};

var _default = GithubIssuesScreen;
exports.default = _default;

var styles = _reactNative.StyleSheet.create({
  row: {
    flexDirection: 'row'
  },
  container: {
    paddingBottom: 100
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,