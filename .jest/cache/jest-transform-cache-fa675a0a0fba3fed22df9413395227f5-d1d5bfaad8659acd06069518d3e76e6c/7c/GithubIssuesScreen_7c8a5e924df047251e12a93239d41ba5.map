{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/screens/GithubIssuesScreen.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport {\n  FlatList,\n  View,\n  Text,\n  StyleSheet,\n  Linking,\n  TouchableOpacity,\n} from 'react-native';\nimport {Divider, useTheme} from 'react-native-paper';\nimport {useSelector} from 'react-redux';\nimport moment from 'moment';\nimport Labels from '../components/Labels';\nimport {IApplicationState} from '../redux/appReducer';\nimport Title from '../components/Title';\nimport {Issue} from '../redux/repo/reducer';\nimport Open from '../assets/svgs/open.svg';\nimport Closed from '../assets/svgs/closed.svg';\nimport Pagination from '../components/Pagination';\n\nconst GithubIssuesScreen = () => {\n  const theme = useTheme();\n  const refList = useRef<FlatList>(null);\n  const {issues, page} = useSelector((state: IApplicationState) => state.repo);\n  const {\n    form: {values},\n  } = useSelector((state: IApplicationState) => state.form);\n\n  useEffect(() => {\n    refList?.current?.scrollToOffset({offset: 0});\n  }, [page]);\n\n  const renderItem = ({item}: {item: Issue}) => (\n    <TouchableOpacity onPress={() => Linking.openURL(item.html_url)}>\n      <View style={[{marginHorizontal: theme.spacing.m}, styles.row]}>\n        <View style={{top: theme.spacing.xs}}>\n          {item.state === 'open' ? <Open /> : <Closed />}\n        </View>\n        <View style={{marginLeft: theme.spacing.m}}>\n          <Title>{item.title}</Title>\n          {item.labels && item.labels.length > 0 && (\n            <Labels items={item.labels} />\n          )}\n          <Text\n            style={[\n              theme.variants.info,\n              {color: theme.colors.text, marginTop: theme.spacing.s},\n            ]}>\n            #{item.number} opened {moment(item.created_at).fromNow()} by{' '}\n            {item.user.login}\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  const ItemSeparatorComponent = () => (\n    <Divider\n      style={{\n        marginVertical: theme.spacing.m,\n        backgroundColor: theme.colors.divider,\n      }}\n    />\n  );\n\n  return (\n    <View>\n      {values && (\n        <Text\n          style={[\n            theme.variants.h1,\n            {margin: theme.spacing.m, color: theme.colors.primary},\n          ]}>{`${values.organization}/${values.repository}`}</Text>\n      )}\n\n      <FlatList\n        ref={refList}\n        keyExtractor={item => item.node_id}\n        contentContainerStyle={styles.container}\n        ItemSeparatorComponent={ItemSeparatorComponent}\n        ListFooterComponent={Pagination}\n        renderItem={renderItem}\n        data={issues[page]}\n      />\n      {/* <Pagination /> */}\n    </View>\n  );\n};\n\nexport default GithubIssuesScreen;\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n  },\n  container: {\n    paddingBottom: 100,\n  },\n});\n"]}