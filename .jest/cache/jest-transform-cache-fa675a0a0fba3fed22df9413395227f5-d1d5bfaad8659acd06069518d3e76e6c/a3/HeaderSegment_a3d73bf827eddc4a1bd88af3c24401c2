b405752a730f71ed7c9fd8483eddd276
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = HeaderSegment;
exports.getDefaultHeaderHeight = void 0;

var React = _interopRequireWildcard(require("react"));



var _HeaderBackButton = _interopRequireDefault(require("./HeaderBackButton"));

var _HeaderBackground = _interopRequireDefault(require("./HeaderBackground"));

var _HeaderShownContext = _interopRequireDefault(require("../../utils/HeaderShownContext"));

var _memoize = _interopRequireDefault(require("../../utils/memoize"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

var warnIfHeaderStylesDefined = function warnIfHeaderStylesDefined(styles) {
  Object.keys(styles).forEach(function (styleProp) {
    var value = styles[styleProp];

    if (styleProp === 'position' && value === 'absolute') {
      console.warn("position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the 'headerTransparent' navigationOption.");
    } else if (value !== undefined) {
      console.warn("".concat(styleProp, " was given a value of ").concat(value, ", this has no effect on headerStyle."));
    }
  });
};

var getDefaultHeaderHeight = function getDefaultHeaderHeight(layout, statusBarHeight) {
  var isLandscape = layout.width > layout.height;
  var headerHeight;

  if (require("react-native").Platform.OS === 'ios') {
    if (isLandscape && !require("react-native").Platform.isPad) {
      headerHeight = 32;
    } else {
      headerHeight = 44;
    }
  } else if (require("react-native").Platform.OS === 'android') {
    headerHeight = 56;
  } else {
    headerHeight = 64;
  }

  return headerHeight + statusBarHeight;
};

exports.getDefaultHeaderHeight = getDefaultHeaderHeight;

function HeaderSegment(props) {var _React$useState =
  React.useState(undefined),_React$useState2 = require("@babel/runtime/helpers/slicedToArray")(_React$useState, 2),leftLabelLayout = _React$useState2[0],setLeftLabelLayout = _React$useState2[1];var _React$useState3 =
  React.useState(undefined),_React$useState4 = require("@babel/runtime/helpers/slicedToArray")(_React$useState3, 2),titleLayout = _React$useState4[0],setTitleLayout = _React$useState4[1];
  var isParentHeaderShown = React.useContext(_HeaderShownContext.default);

  var handleTitleLayout = function handleTitleLayout(e) {var _e$nativeEvent$layout =



    e.nativeEvent.layout,height = _e$nativeEvent$layout.height,width = _e$nativeEvent$layout.width;
    setTitleLayout(function (titleLayout) {
      if (titleLayout && height === titleLayout.height && width === titleLayout.width) {
        return titleLayout;
      }

      return {
        height: height,
        width: width };

    });
  };

  var handleLeftLabelLayout = function handleLeftLabelLayout(e) {var _e$nativeEvent$layout2 =



    e.nativeEvent.layout,height = _e$nativeEvent$layout2.height,width = _e$nativeEvent$layout2.width;

    if (leftLabelLayout && height === leftLabelLayout.height && width === leftLabelLayout.width) {
      return;
    }

    setLeftLabelLayout({
      height: height,
      width: width });

  };

  var getInterpolatedStyle = (0, _memoize.default)(function (styleInterpolator, layout, current, next, titleLayout, leftLabelLayout, headerHeight) {return styleInterpolator({
      current: {
        progress: current },

      next: next && {
        progress: next },

      layouts: {
        header: {
          height: headerHeight,
          width: layout.width },

        screen: layout,
        title: titleLayout,
        leftLabel: leftLabelLayout } });});var



  scene =































  props.scene,layout = props.layout,insets = props.insets,currentTitle = props.title,previousTitle = props.leftLabel,onGoBack = props.onGoBack,headerTitle = props.headerTitle,_props$headerTitleAli = props.headerTitleAlign,headerTitleAlign = _props$headerTitleAli === void 0 ? require("react-native").Platform.select({ ios: 'center', default: 'left' }) : _props$headerTitleAli,_props$headerLeft = props.headerLeft,left = _props$headerLeft === void 0 ? onGoBack ? function (props) {return React.createElement(_HeaderBackButton.default, props);} : undefined : _props$headerLeft,headerTransparent = props.headerTransparent,headerTintColor = props.headerTintColor,headerBackground = props.headerBackground,right = props.headerRight,backImage = props.headerBackImage,leftLabel = props.headerBackTitle,headerBackTitleVisible = props.headerBackTitleVisible,truncatedLabel = props.headerTruncatedBackTitle,pressColorAndroid = props.headerPressColorAndroid,backAccessibilityLabel = props.headerBackAccessibilityLabel,backAllowFontScaling = props.headerBackAllowFontScaling,titleAllowFontScaling = props.headerTitleAllowFontScaling,customTitleStyle = props.headerTitleStyle,customLeftLabelStyle = props.headerBackTitleStyle,leftContainerStyle = props.headerLeftContainerStyle,rightContainerStyle = props.headerRightContainerStyle,titleContainerStyle = props.headerTitleContainerStyle,customHeaderStyle = props.headerStyle,_props$headerStatusBa = props.headerStatusBarHeight,headerStatusBarHeight = _props$headerStatusBa === void 0 ? isParentHeaderShown ? 0 : insets.top : _props$headerStatusBa,styleInterpolator = props.styleInterpolator;
  var defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);var _reactNative$StyleShe =








































  require("react-native").StyleSheet.flatten(customHeaderStyle || {}),_reactNative$StyleShe2 = _reactNative$StyleShe.height,height = _reactNative$StyleShe2 === void 0 ? defaultHeight : _reactNative$StyleShe2,minHeight = _reactNative$StyleShe.minHeight,maxHeight = _reactNative$StyleShe.maxHeight,backgroundColor = _reactNative$StyleShe.backgroundColor,borderBottomColor = _reactNative$StyleShe.borderBottomColor,borderBottomEndRadius = _reactNative$StyleShe.borderBottomEndRadius,borderBottomLeftRadius = _reactNative$StyleShe.borderBottomLeftRadius,borderBottomRightRadius = _reactNative$StyleShe.borderBottomRightRadius,borderBottomStartRadius = _reactNative$StyleShe.borderBottomStartRadius,borderBottomWidth = _reactNative$StyleShe.borderBottomWidth,borderColor = _reactNative$StyleShe.borderColor,borderEndColor = _reactNative$StyleShe.borderEndColor,borderEndWidth = _reactNative$StyleShe.borderEndWidth,borderLeftColor = _reactNative$StyleShe.borderLeftColor,borderLeftWidth = _reactNative$StyleShe.borderLeftWidth,borderRadius = _reactNative$StyleShe.borderRadius,borderRightColor = _reactNative$StyleShe.borderRightColor,borderRightWidth = _reactNative$StyleShe.borderRightWidth,borderStartColor = _reactNative$StyleShe.borderStartColor,borderStartWidth = _reactNative$StyleShe.borderStartWidth,borderStyle = _reactNative$StyleShe.borderStyle,borderTopColor = _reactNative$StyleShe.borderTopColor,borderTopEndRadius = _reactNative$StyleShe.borderTopEndRadius,borderTopLeftRadius = _reactNative$StyleShe.borderTopLeftRadius,borderTopRightRadius = _reactNative$StyleShe.borderTopRightRadius,borderTopStartRadius = _reactNative$StyleShe.borderTopStartRadius,borderTopWidth = _reactNative$StyleShe.borderTopWidth,borderWidth = _reactNative$StyleShe.borderWidth,boxShadow = _reactNative$StyleShe.boxShadow,elevation = _reactNative$StyleShe.elevation,shadowColor = _reactNative$StyleShe.shadowColor,shadowOffset = _reactNative$StyleShe.shadowOffset,shadowOpacity = _reactNative$StyleShe.shadowOpacity,shadowRadius = _reactNative$StyleShe.shadowRadius,opacity = _reactNative$StyleShe.opacity,transform = _reactNative$StyleShe.transform,unsafeStyles = require("@babel/runtime/helpers/objectWithoutProperties")(_reactNative$StyleShe, ["height", "minHeight", "maxHeight", "backgroundColor", "borderBottomColor", "borderBottomEndRadius", "borderBottomLeftRadius", "borderBottomRightRadius", "borderBottomStartRadius", "borderBottomWidth", "borderColor", "borderEndColor", "borderEndWidth", "borderLeftColor", "borderLeftWidth", "borderRadius", "borderRightColor", "borderRightWidth", "borderStartColor", "borderStartWidth", "borderStyle", "borderTopColor", "borderTopEndRadius", "borderTopLeftRadius", "borderTopRightRadius", "borderTopStartRadius", "borderTopWidth", "borderWidth", "boxShadow", "elevation", "shadowColor", "shadowOffset", "shadowOpacity", "shadowRadius", "opacity", "transform"]);

  if (process.env.NODE_ENV !== 'production') {
    warnIfHeaderStylesDefined(unsafeStyles);
  }

  var safeStyles = {
    backgroundColor: backgroundColor,
    borderBottomColor: borderBottomColor,
    borderBottomEndRadius: borderBottomEndRadius,
    borderBottomLeftRadius: borderBottomLeftRadius,
    borderBottomRightRadius: borderBottomRightRadius,
    borderBottomStartRadius: borderBottomStartRadius,
    borderBottomWidth: borderBottomWidth,
    borderColor: borderColor,
    borderEndColor: borderEndColor,
    borderEndWidth: borderEndWidth,
    borderLeftColor: borderLeftColor,
    borderLeftWidth: borderLeftWidth,
    borderRadius: borderRadius,
    borderRightColor: borderRightColor,
    borderRightWidth: borderRightWidth,
    borderStartColor: borderStartColor,
    borderStartWidth: borderStartWidth,
    borderStyle: borderStyle,
    borderTopColor: borderTopColor,
    borderTopEndRadius: borderTopEndRadius,
    borderTopLeftRadius: borderTopLeftRadius,
    borderTopRightRadius: borderTopRightRadius,
    borderTopStartRadius: borderTopStartRadius,
    borderTopWidth: borderTopWidth,
    borderWidth: borderWidth,

    boxShadow: boxShadow,
    elevation: elevation,
    shadowColor: shadowColor,
    shadowOffset: shadowOffset,
    shadowOpacity: shadowOpacity,
    shadowRadius: shadowRadius,
    opacity: opacity,
    transform: transform };




  for (var styleProp in safeStyles) {

    if (safeStyles[styleProp] === undefined) {


      delete safeStyles[styleProp];
    }
  }var _getInterpolatedStyle =







  getInterpolatedStyle(styleInterpolator, layout, scene.progress.current, scene.progress.next, titleLayout, previousTitle ? leftLabelLayout : undefined, typeof height === 'number' ? height : defaultHeight),titleStyle = _getInterpolatedStyle.titleStyle,leftButtonStyle = _getInterpolatedStyle.leftButtonStyle,leftLabelStyle = _getInterpolatedStyle.leftLabelStyle,rightButtonStyle = _getInterpolatedStyle.rightButtonStyle,backgroundStyle = _getInterpolatedStyle.backgroundStyle;
  var leftButton = left ? left({
    backImage: backImage,
    pressColorAndroid: pressColorAndroid,
    accessibilityLabel: backAccessibilityLabel,
    allowFontScaling: backAllowFontScaling,
    onPress: onGoBack,
    labelVisible: headerBackTitleVisible,
    label: leftLabel !== undefined ? leftLabel : previousTitle,
    truncatedLabel: truncatedLabel,
    labelStyle: [leftLabelStyle, customLeftLabelStyle],
    onLabelLayout: handleLeftLabelLayout,
    screenLayout: layout,
    titleLayout: titleLayout,
    tintColor: headerTintColor,
    canGoBack: Boolean(onGoBack) }) :
  null;
  var rightButton = right ? right({
    tintColor: headerTintColor }) :
  null;
  return React.createElement(React.Fragment, null, React.createElement(require("react-native").Animated.View, {
    pointerEvents: "box-none",
    style: [require("react-native").StyleSheet.absoluteFill, {
      zIndex: 0 },
    backgroundStyle] },
  headerBackground ? headerBackground({
    style: safeStyles }) :
  headerTransparent ? null : React.createElement(_HeaderBackground.default, {
    style: safeStyles })),
  React.createElement(require("react-native").Animated.View, {
    pointerEvents: "box-none",
    style: [{
      height: height,
      minHeight: minHeight,
      maxHeight: maxHeight,
      opacity: opacity,
      transform: transform }] },

  React.createElement(require("react-native").View, {
    pointerEvents: "none",
    style: {
      height: headerStatusBarHeight } }),

  React.createElement(require("react-native").View, {
    pointerEvents: "box-none",
    style: styles.content },
  leftButton ? React.createElement(require("react-native").Animated.View, {
    pointerEvents: "box-none",
    style: [styles.left, {
      left: insets.left },
    leftButtonStyle, leftContainerStyle] },
  leftButton) : null, React.createElement(require("react-native").Animated.View, {
    pointerEvents: "box-none",
    style: [headerTitleAlign === 'left' ? {
      position: 'absolute',
      left: (leftButton ? 72 : 16) + insets.left,
      right: (rightButton ? 72 : 16) + insets.right } :
    {
      marginHorizontal: (leftButton ? 32 : 16) + (leftButton && headerBackTitleVisible !== false ? 40 : 0) + Math.max(insets.left, insets.right) },
    titleStyle, titleContainerStyle] },
  headerTitle({
    children: currentTitle,
    onLayout: handleTitleLayout,
    allowFontScaling: titleAllowFontScaling,
    tintColor: headerTintColor,
    style: customTitleStyle })),
  rightButton ? React.createElement(require("react-native").Animated.View, {
    pointerEvents: "box-none",
    style: [styles.right, {
      right: insets.right },
    rightButtonStyle, rightContainerStyle] },
  rightButton) : null)));
}

var styles = require("react-native").StyleSheet.create({
  content: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center' },

  left: {
    position: 'absolute',
    left: 0,
    top: 0,
    bottom: 0,
    justifyContent: 'center',
    alignItems: 'flex-start' },

  right: {
    position: 'absolute',
    right: 0,
    top: 0,
    bottom: 0,
    justifyContent: 'center',
    alignItems: 'flex-end' } });