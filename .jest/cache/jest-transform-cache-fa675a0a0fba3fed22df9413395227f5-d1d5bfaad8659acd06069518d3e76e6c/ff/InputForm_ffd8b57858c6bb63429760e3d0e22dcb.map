{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/components/InputForm.tsx"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;AAUA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,KAAD,EAAkD;AAClE,MAAM,QAAQ,GAAG,8BAAjB;;AADkE,qBAEvC,6BACzB,UAAC,KAAD;AAAA,WAA8B,KAAK,CAAC,IAApC;AAAA,GADyB,CAFuC;AAAA,MAE3D,SAF2D,gBAE3D,SAF2D;AAAA,MAEhD,KAFgD,gBAEhD,KAFgD;;AAKlE,MAAM,KAAK,GAAG,iCAAd;AALkE,MAM3D,YAN2D,GAMhC,KANgC,CAM3D,YAN2D;AAAA,MAM7C,SAN6C,GAMhC,KANgC,CAM7C,SAN6C;;AAOlE,MAAM,QAAQ,GAAG,SAAX,QAAW,GAAK;AACpB,IAAA,QAAQ,CAAC,qBAAY,aAAZ,CAA0B;AAAC,MAAA,IAAI,EAAE,CAAP;AAAU,MAAA,KAAK,EAAE;AAAjB,KAA1B,CAAD,CAAR;AACD,GAFD;;AAIA,wBAAU,YAAK;AACb,QAAI,CAAC,SAAD,IAAc,KAAK,KAAK,KAA5B,EAAmC,SAAS;AAC7C,GAFD,EAEG,CAAC,SAAD,EAAY,KAAZ,CAFH;AAIA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,gBAAD;AACE,IAAA,UAAU,EAAE,KAAK,CAAC,MAAN,CAAa,KAD3B;AAEE,IAAA,SAAS,EAAE,EAFb;AAGE,IAAA,KAAK,EAAC,eAHR;AAIE,IAAA,IAAI,EAAC,cAJP;AAKE,IAAA,SAAS,EAAE,cALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,6BAAC,gBAAD;AACE,IAAA,UAAU,EAAE,KAAK,CAAC,MAAN,CAAa,KAD3B;AAEE,IAAA,SAAS,EAAE,GAFb;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,IAAI,EAAC,YAJP;AAKE,IAAA,SAAS,EAAE,cALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,6BAAC,wBAAD;AACE,IAAA,QAAQ,EAAE,SADZ;AAEE,IAAA,OAAO,EAAE,SAFX;AAGE,IAAA,OAAO,EAAE,YAAY,CAAC,QAAD,CAHvB;AAIE,IAAA,KAAK,EAAE,MAAM,CAAC,MAJhB;AAKE,IAAA,IAAI,EAAC,WALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,CADF;AA0BD,CAzCD;;eA2Ce,0BAA8B;AAC3C,EAAA,IAAI,EAAE,MADqC;AAG3C,EAAA,QAAQ,EAAR;AAH2C,CAA9B,EAIZ,SAJY,C;;;;AAMf,IAAM,MAAM,GAAG,wBAAW,MAAX,CAAkB;AAC/B,EAAA,SAAS,EAAE;AACT,IAAA,MAAM,EAAE;AADC,GADoB;AAI/B,EAAA,MAAM,EAAE;AACN,IAAA,SAAS,EAAE;AADL,GAJuB;AAO/B,EAAA,KAAK,EAAE;AACL,IAAA,QAAQ,EAAE,EADL;AAEL,IAAA,cAAc,EAAE;AAFX;AAPwB,CAAlB,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {reduxForm, Field, InjectedFormProps} from 'redux-form';\nimport {Button, useTheme} from 'react-native-paper';\nimport Input from './Input';\nimport {validate} from '../validate';\nimport {IApplicationState} from '../redux/appReducer';\nimport {repoActions} from '../redux/repo/actions';\n\ninterface IFormState {\n  repository: string;\n  organization: string;\n}\n\ninterface IProps {\n  onSuccess: () => void;\n}\nconst InputForm = (props: InjectedFormProps<IFormState> & IProps) => {\n  const dispatch = useDispatch();\n  const {isLoading, error} = useSelector(\n    (state: IApplicationState) => state.repo,\n  );\n  const theme = useTheme();\n  const {handleSubmit, onSuccess} = props;\n  const onSubmit = () => {\n    dispatch(repoActions.getRepoIssues({page: 1, reset: true}));\n  };\n\n  useEffect(() => {\n    if (!isLoading && error === false) onSuccess();\n  }, [isLoading, error]);\n\n  return (\n    <View>\n      <Field\n        errorColor={theme.colors.error}\n        maxLength={60}\n        label=\"organization*\"\n        name=\"organization\"\n        component={Input}\n      />\n      <Field\n        errorColor={theme.colors.error}\n        maxLength={100}\n        label=\"repository*\"\n        name=\"repository\"\n        component={Input}\n      />\n      <Button\n        disabled={isLoading}\n        loading={isLoading}\n        onPress={handleSubmit(onSubmit)}\n        style={styles.button}\n        mode=\"contained\">\n        get issues\n      </Button>\n    </View>\n  );\n};\n\nexport default reduxForm<IFormState, IProps>({\n  form: 'form',\n  // fields: ['organization', 'repository'],\n  validate,\n})(InputForm);\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 10,\n  },\n  button: {\n    marginTop: 20,\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 20,\n  },\n});\n"]}