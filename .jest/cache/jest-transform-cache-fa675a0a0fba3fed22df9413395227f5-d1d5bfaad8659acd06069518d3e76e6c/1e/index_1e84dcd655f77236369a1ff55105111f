a31cd0855be6c2cd9293cd903761655a
'use strict';

var wrapAnsi16 = function wrapAnsi16(fn, offset) {return function () {
    var code = fn.apply(void 0, arguments);
    return "\x1B[" + (code + offset) + "m";
  };};

var wrapAnsi256 = function wrapAnsi256(fn, offset) {return function () {
    var code = fn.apply(void 0, arguments);
    return "\x1B[" + (38 + offset) + ";5;" + code + "m";
  };};

var wrapAnsi16m = function wrapAnsi16m(fn, offset) {return function () {
    var rgb = fn.apply(void 0, arguments);
    return "\x1B[" + (38 + offset) + ";2;" + rgb[0] + ";" + rgb[1] + ";" + rgb[2] + "m";
  };};

var ansi2ansi = function ansi2ansi(n) {return n;};
var rgb2rgb = function rgb2rgb(r, g, b) {return [r, g, b];};

var setLazyProperty = function setLazyProperty(object, property, _get) {
  Object.defineProperty(object, property, {
    get: function get() {
      var value = _get();

      Object.defineProperty(object, property, {
        value: value,
        enumerable: true,
        configurable: true });


      return value;
    },
    enumerable: true,
    configurable: true });

};


var colorConvert;
var makeDynamicStyles = function makeDynamicStyles(wrap, targetSpace, identity, isBackground) {
  if (colorConvert === undefined) {
    colorConvert = require('color-convert');
  }

  var offset = isBackground ? 10 : 0;
  var styles = {};

  for (var _i = 0, _Object$entries = Object.entries(colorConvert); _i < _Object$entries.length; _i++) {var _ref = _Object$entries[_i];var _ref2 = require("@babel/runtime/helpers/slicedToArray")(_ref, 2);var sourceSpace = _ref2[0];var suite = _ref2[1];
    var name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;
    if (sourceSpace === targetSpace) {
      styles[name] = wrap(identity, offset);
    } else if (typeof suite === 'object') {
      styles[name] = wrap(suite[targetSpace], offset);
    }
  }

  return styles;
};

function assembleStyles() {
  var codes = new Map();
  var styles = {
    modifier: {
      reset: [0, 0],

      bold: [1, 22],
      dim: [2, 22],
      italic: [3, 23],
      underline: [4, 24],
      inverse: [7, 27],
      hidden: [8, 28],
      strikethrough: [9, 29] },

    color: {
      black: [30, 39],
      red: [31, 39],
      green: [32, 39],
      yellow: [33, 39],
      blue: [34, 39],
      magenta: [35, 39],
      cyan: [36, 39],
      white: [37, 39],


      blackBright: [90, 39],
      redBright: [91, 39],
      greenBright: [92, 39],
      yellowBright: [93, 39],
      blueBright: [94, 39],
      magentaBright: [95, 39],
      cyanBright: [96, 39],
      whiteBright: [97, 39] },

    bgColor: {
      bgBlack: [40, 49],
      bgRed: [41, 49],
      bgGreen: [42, 49],
      bgYellow: [43, 49],
      bgBlue: [44, 49],
      bgMagenta: [45, 49],
      bgCyan: [46, 49],
      bgWhite: [47, 49],


      bgBlackBright: [100, 49],
      bgRedBright: [101, 49],
      bgGreenBright: [102, 49],
      bgYellowBright: [103, 49],
      bgBlueBright: [104, 49],
      bgMagentaBright: [105, 49],
      bgCyanBright: [106, 49],
      bgWhiteBright: [107, 49] } };




  styles.color.gray = styles.color.blackBright;
  styles.bgColor.bgGray = styles.bgColor.bgBlackBright;
  styles.color.grey = styles.color.blackBright;
  styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;

  for (var _i2 = 0, _Object$entries2 = Object.entries(styles); _i2 < _Object$entries2.length; _i2++) {var _ref3 = _Object$entries2[_i2];var _ref4 = require("@babel/runtime/helpers/slicedToArray")(_ref3, 2);var groupName = _ref4[0];var group = _ref4[1];
    for (var _i3 = 0, _Object$entries3 = Object.entries(group); _i3 < _Object$entries3.length; _i3++) {var _ref5 = _Object$entries3[_i3];var _ref6 = require("@babel/runtime/helpers/slicedToArray")(_ref5, 2);var styleName = _ref6[0];var style = _ref6[1];
      styles[styleName] = {
        open: "\x1B[" + style[0] + "m",
        close: "\x1B[" + style[1] + "m" };


      group[styleName] = styles[styleName];

      codes.set(style[0], style[1]);
    }

    Object.defineProperty(styles, groupName, {
      value: group,
      enumerable: false });

  }

  Object.defineProperty(styles, 'codes', {
    value: codes,
    enumerable: false });


  styles.color.close = "\x1B[39m";
  styles.bgColor.close = "\x1B[49m";

  setLazyProperty(styles.color, 'ansi', function () {return makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false);});
  setLazyProperty(styles.color, 'ansi256', function () {return makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false);});
  setLazyProperty(styles.color, 'ansi16m', function () {return makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false);});
  setLazyProperty(styles.bgColor, 'ansi', function () {return makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true);});
  setLazyProperty(styles.bgColor, 'ansi256', function () {return makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true);});
  setLazyProperty(styles.bgColor, 'ansi16m', function () {return makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true);});

  return styles;
}


Object.defineProperty(module, 'exports', {
  enumerable: true,
  get: assembleStyles });