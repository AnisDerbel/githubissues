{"version":3,"sources":["mixin-base.js"],"names":["Mixin","require","ErrorReportingMixinBase","host","opts","posTracker","onParseError","err","startLine","endLine","line","startCol","endCol","col","startOffset","endOffset","offset","code","_setErrorLocation","mxn","_err","_reportError","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAArB;;IAEMC,uB;;;;;AACF,mCAAYC,IAAZ,EAAkBC,IAAlB,EAAwB;AAAA;;AAAA;AACpB,8BAAMD,IAAN;AAEA,UAAKE,UAAL,GAAkB,IAAlB;AACA,UAAKC,YAAL,GAAoBF,IAAI,CAACE,YAAzB;AAJoB;AAKvB;;;;WAED,2BAAkBC,GAAlB,EAAuB;AACnBA,MAAAA,GAAG,CAACC,SAAJ,GAAgBD,GAAG,CAACE,OAAJ,GAAc,KAAKJ,UAAL,CAAgBK,IAA9C;AACAH,MAAAA,GAAG,CAACI,QAAJ,GAAeJ,GAAG,CAACK,MAAJ,GAAa,KAAKP,UAAL,CAAgBQ,GAA5C;AACAN,MAAAA,GAAG,CAACO,WAAJ,GAAkBP,GAAG,CAACQ,SAAJ,GAAgB,KAAKV,UAAL,CAAgBW,MAAlD;AACH;;;WAED,sBAAaC,IAAb,EAAmB;AACf,UAAMV,GAAG,GAAG;AACRU,QAAAA,IAAI,EAAEA,IADE;AAERT,QAAAA,SAAS,EAAE,CAAC,CAFJ;AAGRG,QAAAA,QAAQ,EAAE,CAAC,CAHH;AAIRG,QAAAA,WAAW,EAAE,CAAC,CAJN;AAKRL,QAAAA,OAAO,EAAE,CAAC,CALF;AAMRG,QAAAA,MAAM,EAAE,CAAC,CAND;AAORG,QAAAA,SAAS,EAAE,CAAC;AAPJ,OAAZ;;AAUA,WAAKG,iBAAL,CAAuBX,GAAvB;;AACA,WAAKD,YAAL,CAAkBC,GAAlB;AACH;;;WAED,+BAAsBY,GAAtB,EAA2B;AACvB,aAAO;AACHC,QAAAA,IADG,gBACEH,IADF,EACQ;AACPE,UAAAA,GAAG,CAACE,YAAJ,CAAiBJ,IAAjB;AACH;AAHE,OAAP;AAKH;;;EAnCiCjB,K;;AAsCtCsB,MAAM,CAACC,OAAP,GAAiBrB,uBAAjB","sourcesContent":["'use strict';\n\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingMixinBase extends Mixin {\n    constructor(host, opts) {\n        super(host);\n\n        this.posTracker = null;\n        this.onParseError = opts.onParseError;\n    }\n\n    _setErrorLocation(err) {\n        err.startLine = err.endLine = this.posTracker.line;\n        err.startCol = err.endCol = this.posTracker.col;\n        err.startOffset = err.endOffset = this.posTracker.offset;\n    }\n\n    _reportError(code) {\n        const err = {\n            code: code,\n            startLine: -1,\n            startCol: -1,\n            startOffset: -1,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n\n        this._setErrorLocation(err);\n        this.onParseError(err);\n    }\n\n    _getOverriddenMethods(mxn) {\n        return {\n            _err(code) {\n                mxn._reportError(code);\n            }\n        };\n    }\n}\n\nmodule.exports = ErrorReportingMixinBase;\n"]}