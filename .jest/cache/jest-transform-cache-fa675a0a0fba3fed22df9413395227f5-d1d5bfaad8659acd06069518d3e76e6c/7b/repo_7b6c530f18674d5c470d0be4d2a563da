80073262f032f153e58464c25b4934ee
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.repoIssuesMock = void 0;
var repoIssuesMock = {
  data: [{
    html_url: 'https://github.com/meliorence/react-native-render-html/issues/156',
    node_id: 'MDU6SXNzdWUzMjYwODI3Mzc=',
    number: 156,
    title: 'Empty line in output, even if there is no <br> or other Tag to parse',
    user: {
      login: 'xstable'
    },
    labels: [{
      id: 490889432,
      name: 'bug',
      color: 'ee0701'
    }, {
      id: 957368524,
      name: 'bug:minor',
      color: 'd93f0b'
    }],
    state: 'open',
    comments: 3
  }, {
    html_url: 'https://github.com/meliorence/react-native-render-html/issues/152',
    node_id: 'MDU6SXNzdWUzMjQ2MDYyNTI=',
    number: 152,
    title: 'How to deal with the long rendering time when the HTML string is very long',
    user: {
      login: 'junchenjun'
    },
    labels: [{
      id: 490889434,
      name: 'enhancement',
      color: '84b6eb'
    }, {
      id: 490889435,
      name: 'is:help wanted',
      color: '128A0C'
    }, {
      id: 490889437,
      name: 'question',
      color: 'cc317c'
    }],
    state: 'open',
    comments: 14
  }]
};
exports.repoIssuesMock = repoIssuesMock;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcG8udHMiXSwibmFtZXMiOlsicmVwb0lzc3Vlc01vY2siLCJkYXRhIiwiaHRtbF91cmwiLCJub2RlX2lkIiwibnVtYmVyIiwidGl0bGUiLCJ1c2VyIiwibG9naW4iLCJsYWJlbHMiLCJpZCIsIm5hbWUiLCJjb2xvciIsInN0YXRlIiwiY29tbWVudHMiXSwibWFwcGluZ3MiOiI7Ozs7QUFFTyxJQUFNQSxjQUFjLEdBQUc7QUFDNUJDLEVBQUFBLElBQUksRUFBRSxDQUNKO0FBQ0VDLElBQUFBLFFBQVEsRUFDTixtRUFGSjtBQUlFQyxJQUFBQSxPQUFPLEVBQUUsMEJBSlg7QUFLRUMsSUFBQUEsTUFBTSxFQUFFLEdBTFY7QUFNRUMsSUFBQUEsS0FBSyxFQUNILHNFQVBKO0FBUUVDLElBQUFBLElBQUksRUFBRTtBQUNKQyxNQUFBQSxLQUFLLEVBQUU7QUFESCxLQVJSO0FBV0VDLElBQUFBLE1BQU0sRUFBRSxDQUNOO0FBQ0VDLE1BQUFBLEVBQUUsRUFBRSxTQUROO0FBRUVDLE1BQUFBLElBQUksRUFBRSxLQUZSO0FBR0VDLE1BQUFBLEtBQUssRUFBRTtBQUhULEtBRE0sRUFNTjtBQUNFRixNQUFBQSxFQUFFLEVBQUUsU0FETjtBQUVFQyxNQUFBQSxJQUFJLEVBQUUsV0FGUjtBQUdFQyxNQUFBQSxLQUFLLEVBQUU7QUFIVCxLQU5NLENBWFY7QUF1QkVDLElBQUFBLEtBQUssRUFBRSxNQXZCVDtBQXdCRUMsSUFBQUEsUUFBUSxFQUFFO0FBeEJaLEdBREksRUEyQko7QUFDRVgsSUFBQUEsUUFBUSxFQUNOLG1FQUZKO0FBR0VDLElBQUFBLE9BQU8sRUFBRSwwQkFIWDtBQUlFQyxJQUFBQSxNQUFNLEVBQUUsR0FKVjtBQUtFQyxJQUFBQSxLQUFLLEVBQ0gsNEVBTko7QUFPRUMsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLEtBQUssRUFBRTtBQURILEtBUFI7QUFVRUMsSUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUMsTUFBQUEsRUFBRSxFQUFFLFNBRE47QUFFRUMsTUFBQUEsSUFBSSxFQUFFLGFBRlI7QUFHRUMsTUFBQUEsS0FBSyxFQUFFO0FBSFQsS0FETSxFQU1OO0FBQ0VGLE1BQUFBLEVBQUUsRUFBRSxTQUROO0FBRUVDLE1BQUFBLElBQUksRUFBRSxnQkFGUjtBQUdFQyxNQUFBQSxLQUFLLEVBQUU7QUFIVCxLQU5NLEVBV047QUFDRUYsTUFBQUEsRUFBRSxFQUFFLFNBRE47QUFFRUMsTUFBQUEsSUFBSSxFQUFFLFVBRlI7QUFHRUMsTUFBQUEsS0FBSyxFQUFFO0FBSFQsS0FYTSxDQVZWO0FBMkJFQyxJQUFBQSxLQUFLLEVBQUUsTUEzQlQ7QUE0QkVDLElBQUFBLFFBQVEsRUFBRTtBQTVCWixHQTNCSTtBQURzQixDQUF2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SXNzdWV9IGZyb20gJy4uL3JlZHV4L3JlcG8vcmVkdWNlcic7XG5cbmV4cG9ydCBjb25zdCByZXBvSXNzdWVzTW9jayA9IHtcbiAgZGF0YTogW1xuICAgIHtcbiAgICAgIGh0bWxfdXJsOlxuICAgICAgICAnaHR0cHM6Ly9naXRodWIuY29tL21lbGlvcmVuY2UvcmVhY3QtbmF0aXZlLXJlbmRlci1odG1sL2lzc3Vlcy8xNTYnLFxuXG4gICAgICBub2RlX2lkOiAnTURVNlNYTnpkV1V6TWpZd09ESTNNemM9JyxcbiAgICAgIG51bWJlcjogMTU2LFxuICAgICAgdGl0bGU6XG4gICAgICAgICdFbXB0eSBsaW5lIGluIG91dHB1dCwgZXZlbiBpZiB0aGVyZSBpcyBubyA8YnI+IG9yIG90aGVyIFRhZyB0byBwYXJzZScsXG4gICAgICB1c2VyOiB7XG4gICAgICAgIGxvZ2luOiAneHN0YWJsZScsXG4gICAgICB9LFxuICAgICAgbGFiZWxzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogNDkwODg5NDMyLFxuICAgICAgICAgIG5hbWU6ICdidWcnLFxuICAgICAgICAgIGNvbG9yOiAnZWUwNzAxJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGlkOiA5NTczNjg1MjQsXG4gICAgICAgICAgbmFtZTogJ2J1ZzptaW5vcicsXG4gICAgICAgICAgY29sb3I6ICdkOTNmMGInLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICAgIHN0YXRlOiAnb3BlbicsXG4gICAgICBjb21tZW50czogMyxcbiAgICB9LFxuICAgIHtcbiAgICAgIGh0bWxfdXJsOlxuICAgICAgICAnaHR0cHM6Ly9naXRodWIuY29tL21lbGlvcmVuY2UvcmVhY3QtbmF0aXZlLXJlbmRlci1odG1sL2lzc3Vlcy8xNTInLFxuICAgICAgbm9kZV9pZDogJ01EVTZTWE56ZFdVek1qUTJNRFl5TlRJPScsXG4gICAgICBudW1iZXI6IDE1MixcbiAgICAgIHRpdGxlOlxuICAgICAgICAnSG93IHRvIGRlYWwgd2l0aCB0aGUgbG9uZyByZW5kZXJpbmcgdGltZSB3aGVuIHRoZSBIVE1MIHN0cmluZyBpcyB2ZXJ5IGxvbmcnLFxuICAgICAgdXNlcjoge1xuICAgICAgICBsb2dpbjogJ2p1bmNoZW5qdW4nLFxuICAgICAgfSxcbiAgICAgIGxhYmVsczogW1xuICAgICAgICB7XG4gICAgICAgICAgaWQ6IDQ5MDg4OTQzNCxcbiAgICAgICAgICBuYW1lOiAnZW5oYW5jZW1lbnQnLFxuICAgICAgICAgIGNvbG9yOiAnODRiNmViJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGlkOiA0OTA4ODk0MzUsXG4gICAgICAgICAgbmFtZTogJ2lzOmhlbHAgd2FudGVkJyxcbiAgICAgICAgICBjb2xvcjogJzEyOEEwQycsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogNDkwODg5NDM3LFxuICAgICAgICAgIG5hbWU6ICdxdWVzdGlvbicsXG4gICAgICAgICAgY29sb3I6ICdjYzMxN2MnLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICAgIHN0YXRlOiAnb3BlbicsXG4gICAgICBjb21tZW50czogMTQsXG4gICAgfSxcbiAgXSBhcyBBcnJheTxJc3N1ZT4sXG59O1xuIl19