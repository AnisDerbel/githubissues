790506017320b27fc98a36a8419938b8
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _actions = require("./actions");

var _axios = _interopRequireDefault(require("../axios"));

function cov_nuvl1utwb() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/redux/repo/saga.ts";
  var hash = "97b117a5dd59147ca5b2487724e66bcb81294ffc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/redux/repo/saga.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 20
        }
      },
      "1": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 26
        }
      },
      "3": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "4": {
        start: {
          line: 14,
          column: 51
        },
        end: {
          line: 14,
          column: 61
        }
      },
      "5": {
        start: {
          line: 15,
          column: 36
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "6": {
        start: {
          line: 16,
          column: 36
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "7": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "8": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 30,
          column: 8
        }
      },
      "9": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 13
        }
      },
      "10": {
        start: {
          line: 33,
          column: 38
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "11": {
        start: {
          line: 37,
          column: 19
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "12": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "13": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 49
        }
      },
      "14": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 51,
          column: 68
        }
      }
    },
    fnMap: {
      "0": {
        name: "getRepoIssues",
        decl: {
          start: {
            line: 9,
            column: 10
          },
          end: {
            line: 9,
            column: 23
          }
        },
        loc: {
          start: {
            line: 9,
            column: 54
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 22
          }
        },
        loc: {
          start: {
            line: 14,
            column: 51
          },
          end: {
            line: 14,
            column: 61
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 7
          }
        },
        loc: {
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 16,
            column: 46
          }
        },
        line: 16
      },
      "3": {
        name: "repoSaga",
        decl: {
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 18
          }
        },
        loc: {
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 50
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 61
          },
          end: {
            line: 23,
            column: 65
          }
        }, {
          start: {
            line: 23,
            column: 68
          },
          end: {
            line: 23,
            column: 73
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 38
          }
        }, {
          start: {
            line: 23,
            column: 42
          },
          end: {
            line: 23,
            column: 58
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 60
          },
          end: {
            line: 42,
            column: 65
          }
        }, {
          start: {
            line: 42,
            column: 68
          },
          end: {
            line: 42,
            column: 72
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 35
          }
        }, {
          start: {
            line: 42,
            column: 39
          },
          end: {
            line: 42,
            column: 57
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "97b117a5dd59147ca5b2487724e66bcb81294ffc"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_nuvl1utwb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_nuvl1utwb();

var _marked = _regenerator.default.mark(getRepoIssues),
    _marked2 = _regenerator.default.mark(repoSaga);

var PAGE_SIZE = (cov_nuvl1utwb().s[0]++, 30);

function getRepoIssues(_ref) {
  var payload, _ref2, page, _ref3, values, _ref4, issues, hasMoreIssues, repoIssues, length;

  return _regenerator.default.wrap(function getRepoIssues$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          payload = _ref.payload;
          cov_nuvl1utwb().f[0]++;
          cov_nuvl1utwb().s[1]++;
          _context.prev = 3;
          _ref2 = (cov_nuvl1utwb().s[2]++, payload), page = _ref2.page;
          cov_nuvl1utwb().s[3]++;
          _context.next = 8;
          return (0, _effects.select)(function (state) {
            cov_nuvl1utwb().f[1]++;
            cov_nuvl1utwb().s[4]++;
            return state.form;
          });

        case 8:
          _ref3 = _context.sent;
          values = _ref3.form.values;
          cov_nuvl1utwb().s[5]++;
          _context.next = 13;
          return (0, _effects.select)(function (state) {
            cov_nuvl1utwb().f[2]++;
            cov_nuvl1utwb().s[6]++;
            return state.repo;
          });

        case 13:
          _ref4 = _context.sent;
          issues = _ref4.issues;
          hasMoreIssues = _ref4.hasMoreIssues;
          cov_nuvl1utwb().s[7]++;

          if (!issues[page]) {
            _context.next = 26;
            break;
          }

          cov_nuvl1utwb().b[0][0]++;
          cov_nuvl1utwb().s[8]++;
          _context.next = 22;
          return (0, _effects.put)(_actions.repoActions.setCurrentPage({
            page: page,
            hasMoreIssues: (cov_nuvl1utwb().b[2][0]++, hasMoreIssues) || (cov_nuvl1utwb().b[2][1]++, issues[page + 1]) ? (cov_nuvl1utwb().b[1][0]++, true) : (cov_nuvl1utwb().b[1][1]++, false)
          }));

        case 22:
          cov_nuvl1utwb().s[9]++;
          return _context.abrupt("return");

        case 26:
          cov_nuvl1utwb().b[0][1]++;

        case 27:
          cov_nuvl1utwb().s[10]++;
          _context.next = 30;
          return (0, _effects.call)(_axios.default.get, "/repos/" + values.organization + "/" + values.repository + "/issues?direction=desc&sort=created&state=all&page=" + page + "&per_page=" + PAGE_SIZE);

        case 30:
          repoIssues = _context.sent;
          length = (cov_nuvl1utwb().s[11]++, repoIssues.data.length);
          cov_nuvl1utwb().s[12]++;
          _context.next = 35;
          return (0, _effects.put)(_actions.repoActions.getRepoIssuesSuccess({
            issues: repoIssues.data,
            page: page,
            hasMoreIssues: (cov_nuvl1utwb().b[4][0]++, length === 0) || (cov_nuvl1utwb().b[4][1]++, length < PAGE_SIZE) ? (cov_nuvl1utwb().b[3][0]++, false) : (cov_nuvl1utwb().b[3][1]++, true)
          }));

        case 35:
          _context.next = 42;
          break;

        case 37:
          _context.prev = 37;
          _context.t0 = _context["catch"](3);
          cov_nuvl1utwb().s[13]++;
          _context.next = 42;
          return (0, _effects.put)(_actions.repoActions.getRepoIssuesFailed());

        case 42:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, null, [[3, 37]]);
}

function repoSaga() {
  return _regenerator.default.wrap(function repoSaga$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          cov_nuvl1utwb().f[3]++;
          cov_nuvl1utwb().s[14]++;
          _context2.next = 4;
          return (0, _effects.takeLatest)(_actions.ERepoActionTypes.GET_REPO_ISSUES, getRepoIssues);

        case 4:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}

var _default = repoSaga;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhZ2EudHMiXSwibmFtZXMiOlsiZ2V0UmVwb0lzc3VlcyIsInJlcG9TYWdhIiwiUEFHRV9TSVpFIiwicGF5bG9hZCIsInBhZ2UiLCJzdGF0ZSIsImZvcm0iLCJ2YWx1ZXMiLCJyZXBvIiwiaXNzdWVzIiwiaGFzTW9yZUlzc3VlcyIsInJlcG9BY3Rpb25zIiwic2V0Q3VycmVudFBhZ2UiLCJheGlvcyIsImdldCIsIm9yZ2FuaXphdGlvbiIsInJlcG9zaXRvcnkiLCJyZXBvSXNzdWVzIiwibGVuZ3RoIiwiZGF0YSIsImdldFJlcG9Jc3N1ZXNTdWNjZXNzIiwiZ2V0UmVwb0lzc3Vlc0ZhaWxlZCIsIkVSZXBvQWN0aW9uVHlwZXMiLCJHRVRfUkVQT19JU1NVRVMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3Q0FLVUEsYTt5Q0F5Q0FDLFE7O0FBM0NWLElBQU1DLFNBQVMsNEJBQUcsRUFBSCxDQUFmOztBQUVBLFNBQVVGLGFBQVY7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF5QkcsVUFBQUEsT0FBekIsUUFBeUJBLE9BQXpCO0FBQUE7QUFBQTtBQUFBO0FBQUEsMkNBRW1CQSxPQUZuQixHQUVXQyxJQUZYLFNBRVdBLElBRlg7QUFBQTtBQUFBO0FBS1EsaUJBQU0scUJBQU8sVUFBQ0MsS0FBRCxFQUE4QjtBQUFBO0FBQUE7QUFBQSxtQkFBQUEsS0FBSyxDQUFDQyxJQUFOO0FBQVUsV0FBL0MsQ0FBTjs7QUFMUjtBQUFBO0FBSWFDLFVBQUFBLE1BSmIsU0FJTUQsSUFKTixDQUlhQyxNQUpiO0FBQUE7QUFBQTtBQU1vQyxpQkFBTSxxQkFDcEMsVUFBQ0YsS0FBRCxFQUE4QjtBQUFBO0FBQUE7QUFBQSxtQkFBQUEsS0FBSyxDQUFDRyxJQUFOO0FBQVUsV0FESixDQUFOOztBQU5wQztBQUFBO0FBTVdDLFVBQUFBLE1BTlgsU0FNV0EsTUFOWDtBQU1tQkMsVUFBQUEsYUFObkIsU0FNbUJBLGFBTm5CO0FBQUE7O0FBQUEsY0FVUyxDQUFDRCxNQUFNLENBQUNMLElBQUQsQ0FWaEI7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBV00saUJBQU0sa0JBQ0pPLHFCQUFZQyxjQUFaLENBQTJCO0FBQ3pCUixZQUFBQSxJQUFJLEVBQUpBLElBRHlCO0FBRXpCTSxZQUFBQSxhQUFhLEVBQUUsNEJBQUFBLGFBQWEsaUNBQUlELE1BQU0sQ0FBQ0wsSUFBSSxHQUFHLENBQVIsQ0FBVixDQUFiLCtCQUFvQyxJQUFwQyxnQ0FBMkMsS0FBM0M7QUFGVSxXQUEzQixDQURJLENBQU47O0FBWE47QUFBQTtBQUFBOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBd0JzQyxpQkFBTSxtQkFDdENTLGVBQU1DLEdBRGdDLGNBRTVCUCxNQUFNLENBQUNRLFlBRnFCLFNBRUxSLE1BQU0sQ0FBQ1MsVUFGRiwyREFFa0VaLElBRmxFLGtCQUVtRkYsU0FGbkYsQ0FBTjs7QUF4QnRDO0FBd0JVZSxVQUFBQSxVQXhCVjtBQTRCVUMsVUFBQUEsTUE1QlYsNkJBNEJtQkQsVUFBVSxDQUFDRSxJQUFYLENBQWdCRCxNQTVCbkM7QUFBQTtBQUFBO0FBNkJJLGlCQUFNLGtCQUNKUCxxQkFBWVMsb0JBQVosQ0FBaUM7QUFDL0JYLFlBQUFBLE1BQU0sRUFBRVEsVUFBVSxDQUFDRSxJQURZO0FBRS9CZixZQUFBQSxJQUFJLEVBQUpBLElBRitCO0FBRy9CTSxZQUFBQSxhQUFhLEVBQUUsNEJBQUFRLE1BQU0sS0FBSyxDQUFYLGlDQUFnQkEsTUFBTSxHQUFHaEIsU0FBekIsZ0NBQXFDLEtBQXJDLGdDQUE2QyxJQUE3QztBQUhnQixXQUFqQyxDQURJLENBQU47O0FBN0JKO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBcUNJLGlCQUFNLGtCQUFJUyxxQkFBWVUsbUJBQVosRUFBSixDQUFOOztBQXJDSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUF5Q0EsU0FBVXBCLFFBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNFLGlCQUFNLHlCQUFXcUIsMEJBQWlCQyxlQUE1QixFQUE2Q3ZCLGFBQTdDLENBQU47O0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O2VBSWVDLFEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NhbGwsIHB1dCwgdGFrZUxhdGVzdCwgc2VsZWN0fSBmcm9tICdyZWR1eC1zYWdhL2VmZmVjdHMnO1xuaW1wb3J0IHtBeGlvc1Jlc3BvbnNlfSBmcm9tICdheGlvcyc7XG5pbXBvcnQge0VSZXBvQWN0aW9uVHlwZXMsIHJlcG9BY3Rpb25zLCBUUmVwb0lzc3Vlc0FjdGlvbn0gZnJvbSAnLi9hY3Rpb25zJztcbmltcG9ydCBheGlvcyBmcm9tICcuLi9heGlvcyc7XG5pbXBvcnQge0lBcHBsaWNhdGlvblN0YXRlfSBmcm9tICcuLi9hcHBSZWR1Y2VyJztcblxuY29uc3QgUEFHRV9TSVpFID0gMzA7XG5cbmZ1bmN0aW9uKiBnZXRSZXBvSXNzdWVzKHtwYXlsb2FkfTogVFJlcG9Jc3N1ZXNBY3Rpb24pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7cGFnZX0gPSBwYXlsb2FkO1xuICAgIGNvbnN0IHtcbiAgICAgIGZvcm06IHt2YWx1ZXN9LFxuICAgIH0gPSB5aWVsZCBzZWxlY3QoKHN0YXRlOiBJQXBwbGljYXRpb25TdGF0ZSkgPT4gc3RhdGUuZm9ybSk7XG4gICAgY29uc3Qge2lzc3VlcywgaGFzTW9yZUlzc3Vlc30gPSB5aWVsZCBzZWxlY3QoXG4gICAgICAoc3RhdGU6IElBcHBsaWNhdGlvblN0YXRlKSA9PiBzdGF0ZS5yZXBvLFxuICAgICk7XG5cbiAgICBpZiAoISFpc3N1ZXNbcGFnZV0pIHtcbiAgICAgIHlpZWxkIHB1dChcbiAgICAgICAgcmVwb0FjdGlvbnMuc2V0Q3VycmVudFBhZ2Uoe1xuICAgICAgICAgIHBhZ2UsXG4gICAgICAgICAgaGFzTW9yZUlzc3VlczogaGFzTW9yZUlzc3VlcyB8fCBpc3N1ZXNbcGFnZSArIDFdID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgICB9KSxcbiAgICAgICAgLy8gcmVwb0FjdGlvbnMuZ2V0UmVwb0lzc3Vlc1N1Y2Nlc3Moe1xuICAgICAgICAvLyAgIGlzc3VlczogaXNzdWVzW3BhZ2VdLFxuICAgICAgICAvLyAgIHBhZ2UsXG4gICAgICAgIC8vICAgaGFzTW9yZUlzc3VlczogaGFzTW9yZUlzc3VlcyB8fCBpc3N1ZXNbcGFnZSArIDFdID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgICAvLyB9KSxcbiAgICAgICk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHJlcG9Jc3N1ZXM6IEF4aW9zUmVzcG9uc2UgPSB5aWVsZCBjYWxsKFxuICAgICAgYXhpb3MuZ2V0LFxuICAgICAgYC9yZXBvcy8ke3ZhbHVlcy5vcmdhbml6YXRpb259LyR7dmFsdWVzLnJlcG9zaXRvcnl9L2lzc3Vlcz9kaXJlY3Rpb249ZGVzYyZzb3J0PWNyZWF0ZWQmc3RhdGU9YWxsJnBhZ2U9JHtwYWdlfSZwZXJfcGFnZT0ke1BBR0VfU0laRX1gLFxuICAgICk7XG4gICAgY29uc3QgbGVuZ3RoID0gcmVwb0lzc3Vlcy5kYXRhLmxlbmd0aDtcbiAgICB5aWVsZCBwdXQoXG4gICAgICByZXBvQWN0aW9ucy5nZXRSZXBvSXNzdWVzU3VjY2Vzcyh7XG4gICAgICAgIGlzc3VlczogcmVwb0lzc3Vlcy5kYXRhLFxuICAgICAgICBwYWdlLFxuICAgICAgICBoYXNNb3JlSXNzdWVzOiBsZW5ndGggPT09IDAgfHwgbGVuZ3RoIDwgUEFHRV9TSVpFID8gZmFsc2UgOiB0cnVlLFxuICAgICAgfSksXG4gICAgKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHlpZWxkIHB1dChyZXBvQWN0aW9ucy5nZXRSZXBvSXNzdWVzRmFpbGVkKCkpO1xuICB9XG59XG5cbmZ1bmN0aW9uKiByZXBvU2FnYSgpIHtcbiAgeWllbGQgdGFrZUxhdGVzdChFUmVwb0FjdGlvblR5cGVzLkdFVF9SRVBPX0lTU1VFUywgZ2V0UmVwb0lzc3Vlcyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlcG9TYWdhO1xuIl19