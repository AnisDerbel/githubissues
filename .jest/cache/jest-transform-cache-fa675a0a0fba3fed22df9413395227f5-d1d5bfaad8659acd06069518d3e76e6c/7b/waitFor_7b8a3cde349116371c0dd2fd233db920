1728dd28edecc7046b630e92a2d8993d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = waitFor;
exports.waitForElement = waitForElement;

var React = _interopRequireWildcard(require("react"));

var _act = _interopRequireDefault(require("./act"));



function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

var DEFAULT_TIMEOUT = 4500;
var DEFAULT_INTERVAL = 50;

function checkReactVersionAtLeast(major, minor) {
  if (React.version === undefined) return false;var _React$version$split$ =
  React.version.split('.').map(Number),_React$version$split$2 = require("@babel/runtime/helpers/slicedToArray")(_React$version$split$, 2),actualMajor = _React$version$split$2[0],actualMinor = _React$version$split$2[1];
  return actualMajor > major || actualMajor === major && actualMinor >= minor;
}

function waitForInternal(expectation, options) {
  var _options$timeout, _options$interval;

  var timeout = (_options$timeout = options === null || options === void 0 ? void 0 : options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : DEFAULT_TIMEOUT;
  var interval = (_options$interval = options === null || options === void 0 ? void 0 : options.interval) !== null && _options$interval !== void 0 ? _options$interval : DEFAULT_INTERVAL;
  var startTime = Date.now();

  var stackTraceError = new (require("./helpers/errors").ErrorWithStack)('STACK_TRACE_ERROR', waitFor);
  return new Promise(function (resolve, reject) {
    var rejectOrRerun = function rejectOrRerun(error) {
      if (Date.now() - startTime >= timeout) {
        (0, require("./helpers/errors").copyStackTrace)(error, stackTraceError);
        reject(error);
        return;
      }

      setTimeout(runExpectation, interval);
    };

    function runExpectation() {
      try {
        var result = expectation();
        resolve(result);
      } catch (error) {
        rejectOrRerun(error);
      }
    }

    setTimeout(runExpectation, 0);
  });
}

function waitFor(expectation, options) {var result;return require("@babel/runtime/regenerator").async(function waitFor$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:if (
          checkReactVersionAtLeast(16, 9)) {_context2.next = 2;break;}return _context2.abrupt("return",
          waitForInternal(expectation, options));case 2:_context2.next = 4;return require("@babel/runtime/regenerator").awrap(




          (0, _act.default)(function _callee() {return require("@babel/runtime/regenerator").async(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.next = 2;return require("@babel/runtime/regenerator").awrap(
                    waitForInternal(expectation, options));case 2:result = _context.sent;case 3:case "end":return _context.stop();}}}, null, null, null, Promise);}));case 4:return _context2.abrupt("return",


          result);case 5:case "end":return _context2.stop();}}}, null, null, null, Promise);}


function waitForElement(expectation) {var _timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4500;var _interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;
  (0, require("./helpers/errors").throwRemovedFunctionError)('waitForElement', 'migration-v2#waitfor-api-changes');
  return Promise.reject();
}