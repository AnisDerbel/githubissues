d68db69489317d57a8bdfc048b07f5d2
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault2(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _enzyme = require("enzyme");

var _isShallowWrapper = _interopRequireDefault(require("../utils/isShallowWrapper"));

var _single = _interopRequireDefault(require("../utils/single"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function toMatchElement(actualEnzymeWrapper, reactInstance) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    ignoreProps: true
  };
  var expectedWrapper;

  if (!(0, _isShallowWrapper.default)(actualEnzymeWrapper)) {
    expectedWrapper = (0, _enzyme.mount)(reactInstance);
  } else {
    expectedWrapper = (0, _enzyme.shallow)(reactInstance);
  }

  var actual = actualEnzymeWrapper.debug((0, _extends2.default)({
    verbose: true
  }, options));
  var expected = expectedWrapper.debug((0, _extends2.default)({
    verbose: true
  }, options));
  var pass = actual === expected;
  return {
    pass: pass,
    message: 'Expected actual value to match the expected value.',
    negatedMessage: 'Did not expect actual value to match the expected value.',
    contextualInformation: {
      actual: "Actual:\n " + actual,
      expected: "Expected:\n " + expected
    }
  };
}

var _default = (0, _single.default)(toMatchElement);

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvTWF0Y2hFbGVtZW50LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIl9lbnp5bWUiLCJyZXF1aXJlIiwiX2lzU2hhbGxvd1dyYXBwZXIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3NpbmdsZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJ0b01hdGNoRWxlbWVudCIsImFjdHVhbEVuenltZVdyYXBwZXIiLCJyZWFjdEluc3RhbmNlIiwib3B0aW9ucyIsImlnbm9yZVByb3BzIiwiZXhwZWN0ZWRXcmFwcGVyIiwibW91bnQiLCJzaGFsbG93IiwiYWN0dWFsIiwiZGVidWciLCJ2ZXJib3NlIiwiZXhwZWN0ZWQiLCJwYXNzIiwibWVzc2FnZSIsIm5lZ2F0ZWRNZXNzYWdlIiwiY29udGV4dHVhbEluZm9ybWF0aW9uIiwiX2RlZmF1bHQiLCJtb2R1bGUiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFFQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRG9DLENBQTdDO0FBR0FELE9BQU8sQ0FBQ0UsT0FBUixHQUFrQixLQUFLLENBQXZCOztBQUVBLElBQUlDLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBckI7O0FBRUEsSUFBSUMsaUJBQWlCLEdBQUdDLHNCQUFzQixDQUFDRixPQUFPLENBQUMsMkJBQUQsQ0FBUixDQUE5Qzs7QUFFQSxJQUFJRyxPQUFPLEdBQUdELHNCQUFzQixDQUFDRixPQUFPLENBQUMsaUJBQUQsQ0FBUixDQUFwQzs7QUFFQSxTQUFTRSxzQkFBVCxDQUFnQ0UsR0FBaEMsRUFBcUM7QUFBRSxTQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEI7QUFBRU4sSUFBQUEsT0FBTyxFQUFFTTtBQUFYLEdBQXJDO0FBQXdEOztBQVMvRixTQUFTRSxjQUFULENBQXdCQyxtQkFBeEIsRUFBNkNDLGFBQTdDLEVBRUc7QUFBQSxNQUZ5REMsT0FFekQsdUVBRm1FO0FBQ3BFQyxJQUFBQSxXQUFXLEVBQUU7QUFEdUQsR0FFbkU7QUFDRCxNQUFJQyxlQUFKOztBQUVBLE1BQUksQ0FBQyxDQUFDLEdBQUdWLGlCQUFpQixDQUFDSCxPQUF0QixFQUErQlMsbUJBQS9CLENBQUwsRUFBMEQ7QUFDeERJLElBQUFBLGVBQWUsR0FBRyxDQUFDLEdBQUdaLE9BQU8sQ0FBQ2EsS0FBWixFQUFtQkosYUFBbkIsQ0FBbEI7QUFDRCxHQUZELE1BRU87QUFDTEcsSUFBQUEsZUFBZSxHQUFHLENBQUMsR0FBR1osT0FBTyxDQUFDYyxPQUFaLEVBQXFCTCxhQUFyQixDQUFsQjtBQUNEOztBQUVELE1BQU1NLE1BQU0sR0FBR1AsbUJBQW1CLENBQUNRLEtBQXBCO0FBQ2JDLElBQUFBLE9BQU8sRUFBRTtBQURJLEtBRVZQLE9BRlUsRUFBZjtBQUlBLE1BQU1RLFFBQVEsR0FBR04sZUFBZSxDQUFDSSxLQUFoQjtBQUNmQyxJQUFBQSxPQUFPLEVBQUU7QUFETSxLQUVaUCxPQUZZLEVBQWpCO0FBSUEsTUFBTVMsSUFBSSxHQUFHSixNQUFNLEtBQUtHLFFBQXhCO0FBQ0EsU0FBTztBQUNMQyxJQUFBQSxJQUFJLEVBQUpBLElBREs7QUFFTEMsSUFBQUEsT0FBTyxFQUFFLG9EQUZKO0FBR0xDLElBQUFBLGNBQWMsRUFBRSwwREFIWDtBQUlMQyxJQUFBQSxxQkFBcUIsRUFBRTtBQUNyQlAsTUFBQUEsTUFBTSxpQkFBZUEsTUFEQTtBQUVyQkcsTUFBQUEsUUFBUSxtQkFBaUJBO0FBRko7QUFKbEIsR0FBUDtBQVNEOztBQUVELElBQUlLLFFBQVEsR0FBRyxDQUFDLEdBQUduQixPQUFPLENBQUNMLE9BQVosRUFBcUJRLGNBQXJCLENBQWY7O0FBRUFWLE9BQU8sQ0FBQ0UsT0FBUixHQUFrQndCLFFBQWxCO0FBQ0FDLE1BQU0sQ0FBQzNCLE9BQVAsR0FBaUJBLE9BQU8sQ0FBQ0UsT0FBekIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxudmFyIF9lbnp5bWUgPSByZXF1aXJlKFwiZW56eW1lXCIpO1xuXG52YXIgX2lzU2hhbGxvd1dyYXBwZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlscy9pc1NoYWxsb3dXcmFwcGVyXCIpKTtcblxudmFyIF9zaW5nbGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlscy9zaW5nbGVcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiAqXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIHRvTWF0Y2hFbGVtZW50QXNzZXJ0aW9uXG4gKiBcbiAqL1xuZnVuY3Rpb24gdG9NYXRjaEVsZW1lbnQoYWN0dWFsRW56eW1lV3JhcHBlciwgcmVhY3RJbnN0YW5jZSwgb3B0aW9ucyA9IHtcbiAgaWdub3JlUHJvcHM6IHRydWVcbn0pIHtcbiAgbGV0IGV4cGVjdGVkV3JhcHBlcjtcblxuICBpZiAoISgwLCBfaXNTaGFsbG93V3JhcHBlci5kZWZhdWx0KShhY3R1YWxFbnp5bWVXcmFwcGVyKSkge1xuICAgIGV4cGVjdGVkV3JhcHBlciA9ICgwLCBfZW56eW1lLm1vdW50KShyZWFjdEluc3RhbmNlKTtcbiAgfSBlbHNlIHtcbiAgICBleHBlY3RlZFdyYXBwZXIgPSAoMCwgX2VuenltZS5zaGFsbG93KShyZWFjdEluc3RhbmNlKTtcbiAgfVxuXG4gIGNvbnN0IGFjdHVhbCA9IGFjdHVhbEVuenltZVdyYXBwZXIuZGVidWcoe1xuICAgIHZlcmJvc2U6IHRydWUsXG4gICAgLi4ub3B0aW9uc1xuICB9KTtcbiAgY29uc3QgZXhwZWN0ZWQgPSBleHBlY3RlZFdyYXBwZXIuZGVidWcoe1xuICAgIHZlcmJvc2U6IHRydWUsXG4gICAgLi4ub3B0aW9uc1xuICB9KTtcbiAgY29uc3QgcGFzcyA9IGFjdHVhbCA9PT0gZXhwZWN0ZWQ7XG4gIHJldHVybiB7XG4gICAgcGFzcyxcbiAgICBtZXNzYWdlOiAnRXhwZWN0ZWQgYWN0dWFsIHZhbHVlIHRvIG1hdGNoIHRoZSBleHBlY3RlZCB2YWx1ZS4nLFxuICAgIG5lZ2F0ZWRNZXNzYWdlOiAnRGlkIG5vdCBleHBlY3QgYWN0dWFsIHZhbHVlIHRvIG1hdGNoIHRoZSBleHBlY3RlZCB2YWx1ZS4nLFxuICAgIGNvbnRleHR1YWxJbmZvcm1hdGlvbjoge1xuICAgICAgYWN0dWFsOiBgQWN0dWFsOlxcbiAke2FjdHVhbH1gLFxuICAgICAgZXhwZWN0ZWQ6IGBFeHBlY3RlZDpcXG4gJHtleHBlY3RlZH1gXG4gICAgfVxuICB9O1xufVxuXG52YXIgX2RlZmF1bHQgPSAoMCwgX3NpbmdsZS5kZWZhdWx0KSh0b01hdGNoRWxlbWVudCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7Il19