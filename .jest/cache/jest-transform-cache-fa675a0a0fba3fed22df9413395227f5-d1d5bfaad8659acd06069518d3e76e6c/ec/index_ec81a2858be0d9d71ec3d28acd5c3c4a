f4b9e66408f4c0b1cd30bd95581ce93c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _splice = _interopRequireDefault(require("./splice"));

var _getIn = _interopRequireDefault(require("./getIn"));

var _setIn = _interopRequireDefault(require("./setIn"));

var _deepEqual = _interopRequireDefault(require("./deepEqual"));

var _deleteIn = _interopRequireDefault(require("./deleteIn"));

var _keys = _interopRequireDefault(require("./keys"));

var structure = {
  allowsArrayErrors: true,
  empty: {},
  emptyList: [],
  getIn: _getIn["default"],
  setIn: _setIn["default"],
  deepEqual: _deepEqual["default"],
  deleteIn: _deleteIn["default"],
  forEach: function forEach(items, callback) {
    return items.forEach(callback);
  },
  fromJS: function fromJS(value) {
    return value;
  },
  keys: _keys["default"],
  size: function size(array) {
    return array ? array.length : 0;
  },
  some: function some(items, callback) {
    return items.some(callback);
  },
  splice: _splice["default"],
  equals: function equals(a, b) {
    return b.every(function (val) {
      return ~a.indexOf(val);
    });
  },
  orderChanged: function orderChanged(a, b) {
    return b.some(function (val, index) {
      return val !== a[index];
    });
  },
  toJS: function toJS(value) {
    return value;
  }
};
var _default = structure;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJfc3BsaWNlIiwiX2dldEluIiwiX3NldEluIiwiX2RlZXBFcXVhbCIsIl9kZWxldGVJbiIsIl9rZXlzIiwic3RydWN0dXJlIiwiYWxsb3dzQXJyYXlFcnJvcnMiLCJlbXB0eSIsImVtcHR5TGlzdCIsImdldEluIiwic2V0SW4iLCJkZWVwRXF1YWwiLCJkZWxldGVJbiIsImZvckVhY2giLCJpdGVtcyIsImNhbGxiYWNrIiwiZnJvbUpTIiwidmFsdWUiLCJrZXlzIiwic2l6ZSIsImFycmF5IiwibGVuZ3RoIiwic29tZSIsInNwbGljZSIsImVxdWFscyIsImEiLCJiIiwiZXZlcnkiLCJ2YWwiLCJpbmRleE9mIiwib3JkZXJDaGFuZ2VkIiwiaW5kZXgiLCJ0b0pTIiwiX2RlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLHNCQUFzQixHQUFHQyxPQUFPLENBQUMsOENBQUQsQ0FBcEM7O0FBRUFDLE9BQU8sQ0FBQ0MsVUFBUixHQUFxQixJQUFyQjtBQUNBRCxPQUFPLENBQUMsU0FBRCxDQUFQLEdBQXFCLEtBQUssQ0FBMUI7O0FBRUEsSUFBSUUsT0FBTyxHQUFHSixzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLFVBQUQsQ0FBUixDQUFwQzs7QUFFQSxJQUFJSSxNQUFNLEdBQUdMLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsU0FBRCxDQUFSLENBQW5DOztBQUVBLElBQUlLLE1BQU0sR0FBR04sc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxTQUFELENBQVIsQ0FBbkM7O0FBRUEsSUFBSU0sVUFBVSxHQUFHUCxzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLGFBQUQsQ0FBUixDQUF2Qzs7QUFFQSxJQUFJTyxTQUFTLEdBQUdSLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsWUFBRCxDQUFSLENBQXRDOztBQUVBLElBQUlRLEtBQUssR0FBR1Qsc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxRQUFELENBQVIsQ0FBbEM7O0FBRUEsSUFBSVMsU0FBUyxHQUFHO0FBQ2RDLEVBQUFBLGlCQUFpQixFQUFFLElBREw7QUFFZEMsRUFBQUEsS0FBSyxFQUFFLEVBRk87QUFHZEMsRUFBQUEsU0FBUyxFQUFFLEVBSEc7QUFJZEMsRUFBQUEsS0FBSyxFQUFFVCxNQUFNLENBQUMsU0FBRCxDQUpDO0FBS2RVLEVBQUFBLEtBQUssRUFBRVQsTUFBTSxDQUFDLFNBQUQsQ0FMQztBQU1kVSxFQUFBQSxTQUFTLEVBQUVULFVBQVUsQ0FBQyxTQUFELENBTlA7QUFPZFUsRUFBQUEsUUFBUSxFQUFFVCxTQUFTLENBQUMsU0FBRCxDQVBMO0FBUWRVLEVBQUFBLE9BQU8sRUFBRSxTQUFTQSxPQUFULENBQWlCQyxLQUFqQixFQUF3QkMsUUFBeEIsRUFBa0M7QUFDekMsV0FBT0QsS0FBSyxDQUFDRCxPQUFOLENBQWNFLFFBQWQsQ0FBUDtBQUNELEdBVmE7QUFXZEMsRUFBQUEsTUFBTSxFQUFFLFNBQVNBLE1BQVQsQ0FBZ0JDLEtBQWhCLEVBQXVCO0FBQzdCLFdBQU9BLEtBQVA7QUFDRCxHQWJhO0FBY2RDLEVBQUFBLElBQUksRUFBRWQsS0FBSyxDQUFDLFNBQUQsQ0FkRztBQWVkZSxFQUFBQSxJQUFJLEVBQUUsU0FBU0EsSUFBVCxDQUFjQyxLQUFkLEVBQXFCO0FBQ3pCLFdBQU9BLEtBQUssR0FBR0EsS0FBSyxDQUFDQyxNQUFULEdBQWtCLENBQTlCO0FBQ0QsR0FqQmE7QUFrQmRDLEVBQUFBLElBQUksRUFBRSxTQUFTQSxJQUFULENBQWNSLEtBQWQsRUFBcUJDLFFBQXJCLEVBQStCO0FBQ25DLFdBQU9ELEtBQUssQ0FBQ1EsSUFBTixDQUFXUCxRQUFYLENBQVA7QUFDRCxHQXBCYTtBQXFCZFEsRUFBQUEsTUFBTSxFQUFFeEIsT0FBTyxDQUFDLFNBQUQsQ0FyQkQ7QUFzQmR5QixFQUFBQSxNQUFNLEVBQUUsU0FBU0EsTUFBVCxDQUFnQkMsQ0FBaEIsRUFBbUJDLENBQW5CLEVBQXNCO0FBQzVCLFdBQU9BLENBQUMsQ0FBQ0MsS0FBRixDQUFRLFVBQVVDLEdBQVYsRUFBZTtBQUM1QixhQUFPLENBQUNILENBQUMsQ0FBQ0ksT0FBRixDQUFVRCxHQUFWLENBQVI7QUFDRCxLQUZNLENBQVA7QUFHRCxHQTFCYTtBQTJCZEUsRUFBQUEsWUFBWSxFQUFFLFNBQVNBLFlBQVQsQ0FBc0JMLENBQXRCLEVBQXlCQyxDQUF6QixFQUE0QjtBQUN4QyxXQUFPQSxDQUFDLENBQUNKLElBQUYsQ0FBTyxVQUFVTSxHQUFWLEVBQWVHLEtBQWYsRUFBc0I7QUFDbEMsYUFBT0gsR0FBRyxLQUFLSCxDQUFDLENBQUNNLEtBQUQsQ0FBaEI7QUFDRCxLQUZNLENBQVA7QUFHRCxHQS9CYTtBQWdDZEMsRUFBQUEsSUFBSSxFQUFFLFNBQVNBLElBQVQsQ0FBY2YsS0FBZCxFQUFxQjtBQUN6QixXQUFPQSxLQUFQO0FBQ0Q7QUFsQ2EsQ0FBaEI7QUFvQ0EsSUFBSWdCLFFBQVEsR0FBRzVCLFNBQWY7QUFDQVIsT0FBTyxDQUFDLFNBQUQsQ0FBUCxHQUFxQm9DLFFBQXJCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSB2b2lkIDA7XG5cbnZhciBfc3BsaWNlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zcGxpY2VcIikpO1xuXG52YXIgX2dldEluID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9nZXRJblwiKSk7XG5cbnZhciBfc2V0SW4gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3NldEluXCIpKTtcblxudmFyIF9kZWVwRXF1YWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2RlZXBFcXVhbFwiKSk7XG5cbnZhciBfZGVsZXRlSW4gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2RlbGV0ZUluXCIpKTtcblxudmFyIF9rZXlzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9rZXlzXCIpKTtcblxudmFyIHN0cnVjdHVyZSA9IHtcbiAgYWxsb3dzQXJyYXlFcnJvcnM6IHRydWUsXG4gIGVtcHR5OiB7fSxcbiAgZW1wdHlMaXN0OiBbXSxcbiAgZ2V0SW46IF9nZXRJbltcImRlZmF1bHRcIl0sXG4gIHNldEluOiBfc2V0SW5bXCJkZWZhdWx0XCJdLFxuICBkZWVwRXF1YWw6IF9kZWVwRXF1YWxbXCJkZWZhdWx0XCJdLFxuICBkZWxldGVJbjogX2RlbGV0ZUluW1wiZGVmYXVsdFwiXSxcbiAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChpdGVtcywgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gaXRlbXMuZm9yRWFjaChjYWxsYmFjayk7XG4gIH0sXG4gIGZyb21KUzogZnVuY3Rpb24gZnJvbUpTKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9LFxuICBrZXlzOiBfa2V5c1tcImRlZmF1bHRcIl0sXG4gIHNpemU6IGZ1bmN0aW9uIHNpemUoYXJyYXkpIHtcbiAgICByZXR1cm4gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAwO1xuICB9LFxuICBzb21lOiBmdW5jdGlvbiBzb21lKGl0ZW1zLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBpdGVtcy5zb21lKGNhbGxiYWNrKTtcbiAgfSxcbiAgc3BsaWNlOiBfc3BsaWNlW1wiZGVmYXVsdFwiXSxcbiAgZXF1YWxzOiBmdW5jdGlvbiBlcXVhbHMoYSwgYikge1xuICAgIHJldHVybiBiLmV2ZXJ5KGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHJldHVybiB+YS5pbmRleE9mKHZhbCk7XG4gICAgfSk7XG4gIH0sXG4gIG9yZGVyQ2hhbmdlZDogZnVuY3Rpb24gb3JkZXJDaGFuZ2VkKGEsIGIpIHtcbiAgICByZXR1cm4gYi5zb21lKGZ1bmN0aW9uICh2YWwsIGluZGV4KSB7XG4gICAgICByZXR1cm4gdmFsICE9PSBhW2luZGV4XTtcbiAgICB9KTtcbiAgfSxcbiAgdG9KUzogZnVuY3Rpb24gdG9KUyh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxufTtcbnZhciBfZGVmYXVsdCA9IHN0cnVjdHVyZTtcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gX2RlZmF1bHQ7Il19