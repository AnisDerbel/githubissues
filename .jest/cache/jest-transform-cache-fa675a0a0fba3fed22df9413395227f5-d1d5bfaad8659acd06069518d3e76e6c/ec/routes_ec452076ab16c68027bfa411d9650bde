5dc66fe120b0f9361defeec4cda35abe
/* istanbul ignore next */
function cov_20a7t3kmy2() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/routes/routes.tsx";
  var hash = "7b4c6fd0e36795b562dcdb0751aceac3cdc55825";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/routes/routes.tsx",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 25
        }
      },
      "3": {
        start: {
          line: 8,
          column: 13
        },
        end: {
          line: 8,
          column: 53
        }
      },
      "4": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 90
        }
      },
      "5": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "6": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 80
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "8": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 50
        }
      },
      "9": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "10": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 29,
          column: 7
        }
      },
      "11": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 21
        }
      },
      "12": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 33,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "Routes",
        decl: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 28
          }
        },
        loc: {
          start: {
            line: 20,
            column: 31
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 20
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/anisderbel/Documents/apcgithubissues/src/routes/routes.tsx"],
      names: [],
      mappings: ";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAEA,IAAM,SAAS,GAAG,kCAAlB;;AAEA,IAAM,MAAM,GAAG,SAAT,MAAS;AAAA,SACb,4DACE,6BAAC,SAAD,CAAW,SAAX;AAAqB,IAAA,gBAAgB,EAAE,SAAO;AAA9C,KAEE,6BAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAE,SAAO,OAA/B;AAAwC,IAAA,SAAS,EAAE;AAAnD,IAFF,EAGE,6BAAC,SAAD,CAAW,MAAX;AACE,IAAA,IAAI,EAAE,SAAO,aADf;AAEE,IAAA,SAAS,EAAE;AAFb,IAHF,CADF,CADa;AAAA,CAAf;;eAae,M",
      sourcesContent: ["import React from 'react';\nimport GithubIssuesScreen from '../screens/GithubIssuesScreen';\nimport {createStackNavigator} from '@react-navigation/stack';\n// import TestScreen from '../screens/TestScreen';\nimport WelcomeScreen from '../screens/WelcomeScreen';\nimport {ROUTES} from '.';\n\nconst RootStack = createStackNavigator();\n\nconst Routes = () => (\n  <>\n    <RootStack.Navigator initialRouteName={ROUTES.WELCOME}>\n      {/* <RootStack.Screen name=\"test\" component={TestScreen} /> */}\n      <RootStack.Screen name={ROUTES.WELCOME} component={WelcomeScreen} />\n      <RootStack.Screen\n        name={ROUTES.GITHUB_ISSUES}\n        component={GithubIssuesScreen}\n      />\n    </RootStack.Navigator>\n  </>\n);\n\nexport default Routes;\n"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7b4c6fd0e36795b562dcdb0751aceac3cdc55825"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20a7t3kmy2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_20a7t3kmy2();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_20a7t3kmy2().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_20a7t3kmy2().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_20a7t3kmy2().s[2]++;
exports.default = void 0;

var _react =
/* istanbul ignore next */
(cov_20a7t3kmy2().s[3]++, _interopRequireDefault(require("react")));

var _GithubIssuesScreen =
/* istanbul ignore next */
(cov_20a7t3kmy2().s[4]++, _interopRequireDefault(require("../screens/GithubIssuesScreen")));

var _stack =
/* istanbul ignore next */
(cov_20a7t3kmy2().s[5]++, require("@react-navigation/stack"));

var _WelcomeScreen =
/* istanbul ignore next */
(cov_20a7t3kmy2().s[6]++, _interopRequireDefault(require("../screens/WelcomeScreen")));

var _ =
/* istanbul ignore next */
(cov_20a7t3kmy2().s[7]++, require("."));

var RootStack =
/* istanbul ignore next */
(cov_20a7t3kmy2().s[8]++, (0, _stack.createStackNavigator)());

/* istanbul ignore next */
cov_20a7t3kmy2().s[9]++;

var Routes = function Routes() {
  /* istanbul ignore next */
  cov_20a7t3kmy2().f[0]++;
  cov_20a7t3kmy2().s[10]++;
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(RootStack.Navigator, {
    initialRouteName: _.ROUTES.WELCOME
  }, _react.default.createElement(RootStack.Screen, {
    name: _.ROUTES.WELCOME,
    component: _WelcomeScreen.default
  }), _react.default.createElement(RootStack.Screen, {
    name: _.ROUTES.GITHUB_ISSUES,
    component: _GithubIssuesScreen.default
  })));
};

var _default =
/* istanbul ignore next */
(cov_20a7t3kmy2().s[11]++, Routes);

/* istanbul ignore next */
cov_20a7t3kmy2().s[12]++;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmlzZGVyYmVsL0RvY3VtZW50cy9hcGNnaXRodWJpc3N1ZXMvc3JjL3JvdXRlcy9yb3V0ZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFMQSxJQUFBLE1BQUE7QUFBQTtBQUFBLDBCQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxtQkFBQTtBQUFBO0FBQUEsMEJBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsK0JBQUEsQ0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxNQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEseUJBQUEsQ0FBQSxDQUFBOztBQUVBLElBQUEsY0FBQTtBQUFBO0FBQUEsMEJBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsMEJBQUEsQ0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxDQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsR0FBQSxDQUFBLENBQUE7O0FBRUEsSUFBTSxTQUFTO0FBQUE7QUFBQSwwQkFBRyxDQUFBLEdBQUEsTUFBQSxDQUFsQixvQkFBa0IsR0FBSCxDQUFmOzs7OztBQUVBLElBQU0sTUFBTSxHQUFHLFNBQVQsTUFBUyxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsU0FDYixNQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQSxNQUFBLENBQUEsT0FBQSxDQUFBLFFBQUEsRUFBQSxJQUFBLEVBQ0UsTUFBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsU0FBRCxDQUFBLFNBQUEsRUFBQTtBQUFxQixJQUFBLGdCQUFnQixFQUFFLENBQUEsQ0FBQSxNQUFBLENBQU87QUFBOUMsR0FBQSxFQUVFLE1BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFNBQUQsQ0FBQSxNQUFBLEVBQUE7QUFBa0IsSUFBQSxJQUFJLEVBQUUsQ0FBQSxDQUFBLE1BQUEsQ0FBeEIsT0FBQTtBQUF3QyxJQUFBLFNBQVMsRUFBRSxjQUFBLENBQUE7QUFBbkQsR0FBQSxDQUZGLEVBR0UsTUFBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsU0FBRCxDQUFBLE1BQUEsRUFBQTtBQUNFLElBQUEsSUFBSSxFQUFFLENBQUEsQ0FBQSxNQUFBLENBRFIsYUFBQTtBQUVFLElBQUEsU0FBUyxFQUFFLG1CQUFBLENBQUE7QUFGYixHQUFBLENBSEYsQ0FERixDQURhO0FBQWYsQ0FBQTs7OzsyQkFhZSxNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBHaXRodWJJc3N1ZXNTY3JlZW4gZnJvbSAnLi4vc2NyZWVucy9HaXRodWJJc3N1ZXNTY3JlZW4nO1xuaW1wb3J0IHtjcmVhdGVTdGFja05hdmlnYXRvcn0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vc3RhY2snO1xuLy8gaW1wb3J0IFRlc3RTY3JlZW4gZnJvbSAnLi4vc2NyZWVucy9UZXN0U2NyZWVuJztcbmltcG9ydCBXZWxjb21lU2NyZWVuIGZyb20gJy4uL3NjcmVlbnMvV2VsY29tZVNjcmVlbic7XG5pbXBvcnQge1JPVVRFU30gZnJvbSAnLic7XG5cbmNvbnN0IFJvb3RTdGFjayA9IGNyZWF0ZVN0YWNrTmF2aWdhdG9yKCk7XG5cbmNvbnN0IFJvdXRlcyA9ICgpID0+IChcbiAgPD5cbiAgICA8Um9vdFN0YWNrLk5hdmlnYXRvciBpbml0aWFsUm91dGVOYW1lPXtST1VURVMuV0VMQ09NRX0+XG4gICAgICB7LyogPFJvb3RTdGFjay5TY3JlZW4gbmFtZT1cInRlc3RcIiBjb21wb25lbnQ9e1Rlc3RTY3JlZW59IC8+ICovfVxuICAgICAgPFJvb3RTdGFjay5TY3JlZW4gbmFtZT17Uk9VVEVTLldFTENPTUV9IGNvbXBvbmVudD17V2VsY29tZVNjcmVlbn0gLz5cbiAgICAgIDxSb290U3RhY2suU2NyZWVuXG4gICAgICAgIG5hbWU9e1JPVVRFUy5HSVRIVUJfSVNTVUVTfVxuICAgICAgICBjb21wb25lbnQ9e0dpdGh1Yklzc3Vlc1NjcmVlbn1cbiAgICAgIC8+XG4gICAgPC9Sb290U3RhY2suTmF2aWdhdG9yPlxuICA8Lz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IFJvdXRlcztcbiJdfQ==