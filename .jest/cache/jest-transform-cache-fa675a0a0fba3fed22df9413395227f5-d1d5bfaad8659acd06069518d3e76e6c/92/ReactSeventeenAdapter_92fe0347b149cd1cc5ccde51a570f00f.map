{"version":3,"sources":["../src/ReactSeventeenAdapter.js"],"names":["FiberTags","array","node","result","stack","i","arr","n","el","Array","type","Portal","Memo","Lazy","isMemo","suspenseFallback","children","fallback","replaceLazyWithFallback","FakeSuspenseWrapper","React","containerInfo","props","nodeType","key","ref","instance","rendered","elementToTree","vnode","childrenToTree","renderedNodes","flatten","nodeAndSiblingsArray","Suspense","toTree","mapper","item","ReactDOM","isLazy","eventOptions","animation","pointerEvents","auxClick","EmptyState","testRenderer","ShallowRenderer","TestUtils","returnVal","fn","Provider","$$typeof","Element","Component","ReactSeventeenAdapter","EnzymeAdapter","lifecycles","enableComponentDidUpdateOnSetState","legacyContextMode","componentDidUpdate","onSetState","getDerivedStateFromProps","hasShouldComponentUpdateBug","getSnapshotBeforeUpdate","setState","skipsComponentDidUpdateOnNullish","getChildContext","calledByRenderer","getDerivedStateFromError","options","attachTo","hydrateIn","wrappingComponentProps","domNode","global","adapter","render","wrapAct","wrapperProps","context","refProp","ReactWrapperComponent","wrappedEl","callback","unmount","getNode","simulateError","isErrorBoundary","elInstance","catchingInstance","catchingType","nodeHierarchy","simulateEvent","mappedEvent","eventFn","batchedUpdates","getWrappingComponentRenderer","inst","getMountWrapperInstance","wrapInvoke","renderer","TypeError","isDOM","cachedNode","lastComponent","wrappedComponent","sentinel","wrapPureComponent","isStateful","compare","memoized","args","shouldUpdate","prevProps","displayName","wrapFunctionalComponent","renderElement","rest","renderedEl","typeIsExisted","clonedEl","checkIsSuspenseAndCloneElement","elementIsChanged","providerValues","MockProvider","value","getProviderDefaultValue","MockConsumer","InnerComp","isComponentStateful","restore","clonedProps","originalMethod","emptyStateValue","getEmptyStateValue","Object","configurable","enumerable","get","set","writable","output","nodeTypeFromType","handler","checkPropTypes","hierarchy","childContextTypes","ContextWrapper","ReactDOMServer","element","unmemoType","matchingType","supportsArray","nodes","nodeToHostNode","ConcurrentMode","Fragment","StrictMode","Profiler","$$typeofType","ContextConsumer","ContextProvider","nodeName","ForwardRef","name","object","fragment","fakeElement","makeFakeElement","Consumer","RootFinder","module"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport ShallowRenderer from 'react-test-renderer/shallow';\nimport TestUtils from 'react-dom/test-utils';\nimport checkPropTypes from 'prop-types/checkPropTypes';\nimport has from 'has';\nimport {\n  ConcurrentMode,\n  ContextConsumer,\n  ContextProvider,\n  Element,\n  ForwardRef,\n  Fragment,\n  isContextConsumer,\n  isContextProvider,\n  isElement,\n  isForwardRef,\n  isPortal,\n  isSuspense,\n  isValidElementType,\n  Lazy,\n  Memo,\n  Portal,\n  Profiler,\n  StrictMode,\n  Suspense,\n} from 'react-is';\nimport { EnzymeAdapter } from 'enzyme';\nimport { typeOfNode } from 'enzyme/build/Utils';\nimport shallowEqual from 'enzyme-shallow-equal';\nimport {\n  displayNameOfNode,\n  elementToTree as utilElementToTree,\n  nodeTypeFromType as utilNodeTypeFromType,\n  mapNativeEventNames,\n  propFromEvent,\n  assertDomAvailable,\n  withSetStateAllowed,\n  createRenderWrapper,\n  createMountWrapper,\n  propsWithKeysAndRef,\n  ensureKeyOrUndefined,\n  simulateError,\n  wrap,\n  getMaskedContext,\n  getComponentStack,\n  RootFinder,\n  getNodeFromRootFinder,\n  wrapWithWrappingComponent,\n  getWrappingComponentMountRenderer,\n  compareNodeTypeOf,\n  spyMethod,\n} from '@wojtekmaj/enzyme-adapter-utils';\nimport findCurrentFiberUsingSlowPath from './findCurrentFiberUsingSlowPath';\nimport detectFiberTags from './detectFiberTags';\n\n// Lazily populated if DOM is available.\nlet FiberTags = null;\n\nfunction nodeAndSiblingsArray(nodeWithSibling) {\n  const array = [];\n  let node = nodeWithSibling;\n  while (node != null) {\n    array.push(node);\n    node = node.sibling;\n  }\n  return array;\n}\n\nfunction flatten(arr) {\n  const result = [];\n  const stack = [{ i: 0, array: arr }];\n  while (stack.length) {\n    const n = stack.pop();\n    while (n.i < n.array.length) {\n      const el = n.array[n.i];\n      n.i += 1;\n      if (Array.isArray(el)) {\n        stack.push(n);\n        stack.push({ i: 0, array: el });\n        break;\n      }\n      result.push(el);\n    }\n  }\n  return result;\n}\n\nfunction nodeTypeFromType(type) {\n  if (type === Portal) {\n    return 'portal';\n  }\n\n  return utilNodeTypeFromType(type);\n}\n\nfunction isMemo(type) {\n  return compareNodeTypeOf(type, Memo);\n}\n\nfunction isLazy(type) {\n  return compareNodeTypeOf(type, Lazy);\n}\n\nfunction unmemoType(type) {\n  return isMemo(type) ? type.type : type;\n}\n\nfunction checkIsSuspenseAndCloneElement(el, { suspenseFallback }) {\n  if (!isSuspense(el)) {\n    return el;\n  }\n\n  let { children } = el.props;\n\n  if (suspenseFallback) {\n    const { fallback } = el.props;\n    children = replaceLazyWithFallback(children, fallback);\n  }\n\n  const FakeSuspenseWrapper = (props) => React.createElement(\n    el.type,\n    { ...el.props, ...props },\n    children,\n  );\n  return React.createElement(FakeSuspenseWrapper, null, children);\n}\n\nfunction elementToTree(el) {\n  if (!isPortal(el)) {\n    return utilElementToTree(el, elementToTree);\n  }\n\n  const { children, containerInfo } = el;\n  const props = { children, containerInfo };\n\n  return {\n    nodeType: 'portal',\n    type: Portal,\n    props,\n    key: ensureKeyOrUndefined(el.key),\n    ref: el.ref || null,\n    instance: null,\n    rendered: elementToTree(el.children),\n  };\n}\n\nfunction toTree(vnode) {\n  if (vnode == null) {\n    return null;\n  }\n  // TODO(lmr): I'm not really sure I understand whether or not this is what\n  // i should be doing, or if this is a hack for something i'm doing wrong\n  // somewhere else. Should talk to sebastian about this perhaps\n  const node = findCurrentFiberUsingSlowPath(vnode);\n  switch (node.tag) {\n    case FiberTags.HostRoot:\n      return childrenToTree(node.child);\n    case FiberTags.HostPortal: {\n      const {\n        stateNode: { containerInfo },\n        memoizedProps: children,\n      } = node;\n      const props = { containerInfo, children };\n      return {\n        nodeType: 'portal',\n        type: Portal,\n        props,\n        key: ensureKeyOrUndefined(node.key),\n        ref: node.ref,\n        instance: null,\n        rendered: childrenToTree(node.child),\n      };\n    }\n    case FiberTags.ClassComponent:\n      return {\n        nodeType: 'class',\n        type: node.type,\n        props: { ...node.memoizedProps },\n        key: ensureKeyOrUndefined(node.key),\n        ref: node.ref,\n        instance: node.stateNode,\n        rendered: childrenToTree(node.child),\n      };\n    case FiberTags.FunctionalComponent:\n      return {\n        nodeType: 'function',\n        type: node.type,\n        props: { ...node.memoizedProps },\n        key: ensureKeyOrUndefined(node.key),\n        ref: node.ref,\n        instance: null,\n        rendered: childrenToTree(node.child),\n      };\n    case FiberTags.MemoClass:\n      return {\n        nodeType: 'class',\n        type: node.elementType.type,\n        props: { ...node.memoizedProps },\n        key: ensureKeyOrUndefined(node.key),\n        ref: node.ref,\n        instance: node.stateNode,\n        rendered: childrenToTree(node.child.child),\n      };\n    case FiberTags.MemoSFC: {\n      let renderedNodes = flatten(nodeAndSiblingsArray(node.child).map(toTree));\n      if (renderedNodes.length === 0) {\n        renderedNodes = [node.memoizedProps.children];\n      }\n      return {\n        nodeType: 'function',\n        type: node.elementType,\n        props: { ...node.memoizedProps },\n        key: ensureKeyOrUndefined(node.key),\n        ref: node.ref,\n        instance: null,\n        rendered: renderedNodes,\n      };\n    }\n    case FiberTags.HostComponent: {\n      let renderedNodes = flatten(nodeAndSiblingsArray(node.child).map(toTree));\n      if (renderedNodes.length === 0) {\n        renderedNodes = [node.memoizedProps.children];\n      }\n      return {\n        nodeType: 'host',\n        type: node.type,\n        props: { ...node.memoizedProps },\n        key: ensureKeyOrUndefined(node.key),\n        ref: node.ref,\n        instance: node.stateNode,\n        rendered: renderedNodes,\n      };\n    }\n    case FiberTags.HostText:\n      return node.memoizedProps;\n    case FiberTags.Fragment:\n    case FiberTags.Mode:\n    case FiberTags.ContextProvider:\n    case FiberTags.ContextConsumer:\n      return childrenToTree(node.child);\n    case FiberTags.Profiler:\n    case FiberTags.ForwardRef: {\n      return {\n        nodeType: 'function',\n        type: node.type,\n        props: { ...node.pendingProps },\n        key: ensureKeyOrUndefined(node.key),\n        ref: node.ref,\n        instance: null,\n        rendered: childrenToTree(node.child),\n      };\n    }\n    case FiberTags.Suspense: {\n      return {\n        nodeType: 'function',\n        type: Suspense,\n        props: { ...node.memoizedProps },\n        key: ensureKeyOrUndefined(node.key),\n        ref: node.ref,\n        instance: null,\n        rendered: childrenToTree(node.child),\n      };\n    }\n    case FiberTags.Lazy:\n      return childrenToTree(node.child);\n    case FiberTags.OffscreenComponent:\n      return toTree(node.child);\n    default:\n      throw new Error(`Enzyme Internal Error: unknown node with tag ${node.tag}`);\n  }\n}\n\nfunction childrenToTree(node) {\n  if (!node) {\n    return null;\n  }\n  const children = nodeAndSiblingsArray(node);\n  if (children.length === 0) {\n    return null;\n  }\n  if (children.length === 1) {\n    return toTree(children[0]);\n  }\n  return flatten(children.map(toTree));\n}\n\nfunction nodeToHostNode(_node) {\n  // NOTE(lmr): node could be a function component\n  // which wont have an instance prop, but we can get the\n  // host node associated with its return value at that point.\n  // Although this breaks down if the return value is an array,\n  // as is possible with React 16.\n  let node = _node;\n  while (node && !Array.isArray(node) && node.instance === null) {\n    node = node.rendered;\n  }\n  // if the SFC returned null effectively, there is no host node.\n  if (!node) {\n    return null;\n  }\n\n  const mapper = (item) => {\n    if (item && item.instance) return ReactDOM.findDOMNode(item.instance);\n    return null;\n  };\n  if (Array.isArray(node)) {\n    return node.map(mapper);\n  }\n  if (Array.isArray(node.rendered) && node.nodeType === 'class') {\n    return node.rendered.map(mapper);\n  }\n  return mapper(node);\n}\n\nfunction replaceLazyWithFallback(node, fallback) {\n  if (!node) {\n    return null;\n  }\n  if (Array.isArray(node)) {\n    return node.map((el) => replaceLazyWithFallback(el, fallback));\n  }\n  if (isLazy(node.type)) {\n    return fallback;\n  }\n  return {\n    ...node,\n    props: {\n      ...node.props,\n      children: replaceLazyWithFallback(node.props.children, fallback),\n    },\n  };\n}\n\nconst eventOptions = {\n  animation: true,\n  pointerEvents: true,\n  auxClick: true,\n};\n\nfunction getEmptyStateValue() {\n  // this handles a bug in React 16.0 - 16.2\n  // see https://github.com/facebook/react/commit/39be83565c65f9c522150e52375167568a2a1459\n  // also see https://github.com/facebook/react/pull/11965\n\n  class EmptyState extends React.Component {\n    render() {\n      return null;\n    }\n  }\n  const testRenderer = new ShallowRenderer();\n  testRenderer.render(React.createElement(EmptyState));\n  return testRenderer._instance.state;\n}\n\nfunction wrapAct(fn) {\n  let returnVal;\n  TestUtils.act(() => { returnVal = fn(); });\n  return returnVal;\n}\n\nfunction getProviderDefaultValue(Provider) {\n  // React stores references to the Provider's defaultValue differently across versions.\n  if ('_defaultValue' in Provider._context) {\n    return Provider._context._defaultValue;\n  }\n  if ('_currentValue' in Provider._context) {\n    return Provider._context._currentValue;\n  }\n  throw new Error('Enzyme Internal Error: can’t figure out how to get Provider’s default value');\n}\n\nfunction makeFakeElement(type) {\n  return { $$typeof: Element, type };\n}\n\nfunction isStateful(Component) {\n  return Component.prototype && (\n    Component.prototype.isReactComponent\n    || Array.isArray(Component.__reactAutoBindPairs) // fallback for createClass components\n  );\n}\n\nclass ReactSeventeenAdapter extends EnzymeAdapter {\n  constructor() {\n    super();\n    const { lifecycles } = this.options;\n    this.options = {\n      ...this.options,\n      enableComponentDidUpdateOnSetState: true, // TODO: remove, semver-major\n      legacyContextMode: 'parent',\n      lifecycles: {\n        ...lifecycles,\n        componentDidUpdate: {\n          onSetState: true,\n        },\n        getDerivedStateFromProps: {\n          hasShouldComponentUpdateBug: false,\n        },\n        getSnapshotBeforeUpdate: true,\n        setState: {\n          skipsComponentDidUpdateOnNullish: true,\n        },\n        getChildContext: {\n          calledByRenderer: false,\n        },\n        getDerivedStateFromError: true,\n      },\n    };\n  }\n\n  createMountRenderer(options) {\n    assertDomAvailable('mount');\n    if (has(options, 'suspenseFallback')) {\n      throw new TypeError('`suspenseFallback` is not supported by the `mount` renderer');\n    }\n    if (FiberTags === null) {\n      // Requires DOM.\n      FiberTags = detectFiberTags();\n    }\n    const { attachTo, hydrateIn, wrappingComponentProps } = options;\n    const domNode = hydrateIn || attachTo || global.document.createElement('div');\n    let instance = null;\n    const adapter = this;\n    return {\n      render(el, context, callback) {\n        return wrapAct(() => {\n          if (instance === null) {\n            const { type, props, ref } = el;\n            const wrapperProps = {\n              Component: type,\n              props,\n              wrappingComponentProps,\n              context,\n              ...(ref && { refProp: ref }),\n            };\n            const ReactWrapperComponent = createMountWrapper(el, { ...options, adapter });\n            const wrappedEl = React.createElement(ReactWrapperComponent, wrapperProps);\n            instance = hydrateIn\n              ? ReactDOM.hydrate(wrappedEl, domNode)\n              : ReactDOM.render(wrappedEl, domNode);\n            if (typeof callback === 'function') {\n              callback();\n            }\n          } else {\n            instance.setChildProps(el.props, context, callback);\n          }\n        });\n      },\n      unmount() {\n        ReactDOM.unmountComponentAtNode(domNode);\n        instance = null;\n      },\n      getNode() {\n        if (!instance) {\n          return null;\n        }\n        return getNodeFromRootFinder(\n          adapter.isCustomComponent,\n          toTree(instance._reactInternals),\n          options,\n        );\n      },\n      simulateError(nodeHierarchy, rootNode, error) {\n        const isErrorBoundary = ({ instance: elInstance, type }) => {\n          if (type && type.getDerivedStateFromError) {\n            return true;\n          }\n          return elInstance && elInstance.componentDidCatch;\n        };\n\n        const {\n          instance: catchingInstance,\n          type: catchingType,\n        } = nodeHierarchy.find(isErrorBoundary) || {};\n\n        simulateError(\n          error,\n          catchingInstance,\n          rootNode,\n          nodeHierarchy,\n          nodeTypeFromType,\n          adapter.displayNameOfNode,\n          catchingType,\n        );\n      },\n      simulateEvent(node, event, mock) {\n        const mappedEvent = mapNativeEventNames(event, eventOptions);\n        const eventFn = TestUtils.Simulate[mappedEvent];\n        if (!eventFn) {\n          throw new TypeError(`ReactWrapper::simulate() event '${event}' does not exist`);\n        }\n        wrapAct(() => {\n          eventFn(adapter.nodeToHostNode(node), mock);\n        });\n      },\n      batchedUpdates(fn) {\n        return fn();\n        // return ReactDOM.unstable_batchedUpdates(fn);\n      },\n      getWrappingComponentRenderer() {\n        return {\n          ...this,\n          ...getWrappingComponentMountRenderer({\n            toTree: (inst) => toTree(inst._reactInternals),\n            getMountWrapperInstance: () => instance,\n          }),\n        };\n      },\n      wrapInvoke: wrapAct,\n    };\n  }\n\n  createShallowRenderer(options = {}) {\n    const adapter = this;\n    const renderer = new ShallowRenderer();\n    const { suspenseFallback } = options;\n    if (typeof suspenseFallback !== 'undefined' && typeof suspenseFallback !== 'boolean') {\n      throw TypeError('`options.suspenseFallback` should be boolean or undefined');\n    }\n    let isDOM = false;\n    let cachedNode = null;\n\n    let lastComponent = null;\n    let wrappedComponent = null;\n    const sentinel = {};\n\n    // wrap memo components with a PureComponent, or a class component with sCU\n    const wrapPureComponent = (Component, compare) => {\n      if (lastComponent !== Component) {\n        if (isStateful(Component)) {\n          wrappedComponent = class extends Component {};\n          if (compare) {\n            wrappedComponent.prototype.shouldComponentUpdate = (nextProps) => (\n              !compare(this.props, nextProps)\n            );\n          } else {\n            wrappedComponent.prototype.isPureReactComponent = true;\n          }\n        } else {\n          let memoized = sentinel;\n          let prevProps;\n          wrappedComponent = function wrappedComponentFn(props, ...args) {\n            const shouldUpdate = memoized === sentinel || (compare\n              ? !compare(prevProps, props)\n              : !shallowEqual(prevProps, props)\n            );\n            if (shouldUpdate) {\n              memoized = Component({ ...Component.defaultProps, ...props }, ...args);\n              prevProps = props;\n            }\n            return memoized;\n          };\n        }\n        Object.assign(\n          wrappedComponent,\n          Component,\n          { displayName: adapter.displayNameOfNode({ type: Component }) },\n        );\n        lastComponent = Component;\n      }\n      return wrappedComponent;\n    };\n\n    // Wrap functional components on versions prior to 16.5,\n    // to avoid inadvertently pass a `this` instance to it.\n    const wrapFunctionalComponent = (Component) => {\n      if (has(Component, 'defaultProps')) {\n        if (lastComponent !== Component) {\n          wrappedComponent = Object.assign(\n            // eslint-disable-next-line new-cap\n            (props, ...args) => Component({ ...Component.defaultProps, ...props }, ...args),\n            Component,\n            { displayName: adapter.displayNameOfNode({ type: Component }) },\n          );\n          lastComponent = Component;\n        }\n        return wrappedComponent;\n      }\n\n      return Component;\n    };\n\n    const renderElement = (elConfig, ...rest) => {\n      const renderedEl = renderer.render(elConfig, ...rest);\n\n      const typeIsExisted = !!(renderedEl && renderedEl.type);\n      if (typeIsExisted) {\n        const clonedEl = checkIsSuspenseAndCloneElement(renderedEl, { suspenseFallback });\n\n        const elementIsChanged = clonedEl.type !== renderedEl.type;\n        if (elementIsChanged) {\n          return renderer.render({ ...elConfig, type: clonedEl.type }, ...rest);\n        }\n      }\n\n      return renderedEl;\n    };\n\n    return {\n      // eslint-disable-next-line consistent-return\n      render(el, unmaskedContext, {\n        providerValues = new Map(),\n      } = {}) {\n        cachedNode = el;\n        if (typeof el.type === 'string') {\n          isDOM = true;\n        } else if (isContextProvider(el)) {\n          providerValues.set(el.type, el.props.value);\n          const MockProvider = Object.assign(\n            (props) => props.children,\n            el.type,\n          );\n          return withSetStateAllowed(() => renderElement({ ...el, type: MockProvider }));\n        } else if (isContextConsumer(el)) {\n          const Provider = adapter.getProviderFromConsumer(el.type);\n          const value = providerValues.has(Provider)\n            ? providerValues.get(Provider)\n            : getProviderDefaultValue(Provider);\n          const MockConsumer = Object.assign(\n            (props) => props.children(value),\n            el.type,\n          );\n          return withSetStateAllowed(() => renderElement({ ...el, type: MockConsumer }));\n        } else {\n          isDOM = false;\n          let renderedEl = el;\n          if (isLazy(renderedEl)) {\n            throw TypeError('`React.lazy` is not supported by shallow rendering.');\n          }\n\n          renderedEl = checkIsSuspenseAndCloneElement(renderedEl, { suspenseFallback });\n          const { type: Component } = renderedEl;\n\n          const context = getMaskedContext(Component.contextTypes, unmaskedContext);\n\n          if (isMemo(el.type)) {\n            const { type: InnerComp, compare } = el.type;\n\n            return withSetStateAllowed(() => renderElement(\n              { ...el, type: wrapPureComponent(InnerComp, compare) },\n              context,\n            ));\n          }\n\n          const isComponentStateful = isStateful(Component);\n\n          if (!isComponentStateful && typeof Component === 'function') {\n            return withSetStateAllowed(() => renderElement(\n              { ...renderedEl, type: wrapFunctionalComponent(Component) },\n              context,\n            ));\n          }\n\n          if (isComponentStateful) {\n            if (\n              renderer._instance\n              && el.props === renderer._instance.props\n              && !shallowEqual(context, renderer._instance.context)\n            ) {\n              const { restore } = spyMethod(\n                renderer,\n                '_updateClassComponent',\n                (originalMethod) => function _updateClassComponent(...args) {\n                  const { props } = renderer._instance;\n                  const clonedProps = { ...props };\n                  renderer._instance.props = clonedProps;\n\n                  const result = originalMethod.apply(renderer, args);\n\n                  renderer._instance.props = props;\n                  restore();\n\n                  return result;\n                },\n              );\n            }\n\n            // fix react bug; see implementation of `getEmptyStateValue`\n            const emptyStateValue = getEmptyStateValue();\n            if (emptyStateValue) {\n              Object.defineProperty(Component.prototype, 'state', {\n                configurable: true,\n                enumerable: true,\n                get() {\n                  return null;\n                },\n                set(value) {\n                  if (value !== emptyStateValue) {\n                    Object.defineProperty(this, 'state', {\n                      configurable: true,\n                      enumerable: true,\n                      value,\n                      writable: true,\n                    });\n                  }\n                  return true;\n                },\n              });\n            }\n          }\n          return withSetStateAllowed(() => renderElement(renderedEl, context));\n        }\n      },\n      unmount() {\n        renderer.unmount();\n      },\n      getNode() {\n        if (isDOM) {\n          return elementToTree(cachedNode);\n        }\n        const output = renderer.getRenderOutput();\n        return {\n          nodeType: nodeTypeFromType(cachedNode.type),\n          type: cachedNode.type,\n          props: cachedNode.props,\n          key: ensureKeyOrUndefined(cachedNode.key),\n          ref: cachedNode.ref,\n          instance: renderer._instance,\n          rendered: Array.isArray(output)\n            ? flatten(output).map((el) => elementToTree(el))\n            : elementToTree(output),\n        };\n      },\n      simulateError(nodeHierarchy, rootNode, error) {\n        simulateError(\n          error,\n          renderer._instance,\n          cachedNode,\n          nodeHierarchy.concat(cachedNode),\n          nodeTypeFromType,\n          adapter.displayNameOfNode,\n          cachedNode.type,\n        );\n      },\n      simulateEvent(node, event, ...args) {\n        const handler = node.props[propFromEvent(event, eventOptions)];\n        if (handler) {\n          withSetStateAllowed(() => {\n            // TODO(lmr): create/use synthetic events\n            // TODO(lmr): emulate React's event propagation\n            // ReactDOM.unstable_batchedUpdates(() => {\n            handler(...args);\n            // });\n          });\n        }\n      },\n      batchedUpdates(fn) {\n        return fn();\n        // return ReactDOM.unstable_batchedUpdates(fn);\n      },\n      checkPropTypes(typeSpecs, values, location, hierarchy) {\n        return checkPropTypes(\n          typeSpecs,\n          values,\n          location,\n          displayNameOfNode(cachedNode),\n          () => getComponentStack(hierarchy.concat([cachedNode])),\n        );\n      },\n    };\n  }\n\n  createStringRenderer(options) {\n    if (has(options, 'suspenseFallback')) {\n      throw new TypeError('`suspenseFallback` should not be specified in options of string renderer');\n    }\n    return {\n      render(el, context) {\n        if (options.context && (el.type.contextTypes || options.childContextTypes)) {\n          const childContextTypes = {\n            ...(el.type.contextTypes || {}),\n            ...options.childContextTypes,\n          };\n          const ContextWrapper = createRenderWrapper(el, context, childContextTypes);\n          return ReactDOMServer.renderToStaticMarkup(React.createElement(ContextWrapper));\n        }\n        return ReactDOMServer.renderToStaticMarkup(el);\n      },\n    };\n  }\n\n  // Provided a bag of options, return an `EnzymeRenderer`. Some options can be implementation\n  // specific, like `attach` etc. for React, but not part of this interface explicitly.\n  // eslint-disable-next-line class-methods-use-this\n  createRenderer(options) {\n    switch (options.mode) {\n      case EnzymeAdapter.MODES.MOUNT: return this.createMountRenderer(options);\n      case EnzymeAdapter.MODES.SHALLOW: return this.createShallowRenderer(options);\n      case EnzymeAdapter.MODES.STRING: return this.createStringRenderer(options);\n      default:\n        throw new Error(`Enzyme Internal Error: Unrecognized mode: ${options.mode}`);\n    }\n  }\n\n  wrap(element) {\n    return wrap(element);\n  }\n\n  // converts an RSTNode to the corresponding JSX Pragma Element. This will be needed\n  // in order to implement the `Wrapper.mount()` and `Wrapper.shallow()` methods, but should\n  // be pretty straightforward for people to implement.\n  // eslint-disable-next-line class-methods-use-this\n  nodeToElement(node) {\n    if (!node || typeof node !== 'object') return null;\n    const { type } = node;\n    return React.createElement(unmemoType(type), propsWithKeysAndRef(node));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  matchesElementType(node, matchingType) {\n    if (!node) {\n      return node;\n    }\n    const { type } = node;\n    return unmemoType(type) === unmemoType(matchingType);\n  }\n\n  elementToNode(element) {\n    return elementToTree(element);\n  }\n\n  nodeToHostNode(node, supportsArray = false) {\n    const nodes = nodeToHostNode(node);\n    if (Array.isArray(nodes) && !supportsArray) {\n      return nodes[0];\n    }\n    return nodes;\n  }\n\n  displayNameOfNode(node) {\n    if (!node) return null;\n    const { type, $$typeof } = node;\n    const adapter = this;\n\n    const nodeType = type || $$typeof;\n\n    // newer node types may be undefined, so only test if the nodeType exists\n    if (nodeType) {\n      switch (nodeType) {\n        case ConcurrentMode || NaN: return 'ConcurrentMode';\n        case Fragment || NaN: return 'Fragment';\n        case StrictMode || NaN: return 'StrictMode';\n        case Profiler || NaN: return 'Profiler';\n        case Portal || NaN: return 'Portal';\n        case Suspense || NaN: return 'Suspense';\n        default:\n      }\n    }\n\n    const $$typeofType = type && type.$$typeof;\n\n    switch ($$typeofType) {\n      case ContextConsumer || NaN: return 'ContextConsumer';\n      case ContextProvider || NaN: return 'ContextProvider';\n      case Memo || NaN: {\n        const nodeName = displayNameOfNode(node);\n        return typeof nodeName === 'string' ? nodeName : `Memo(${adapter.displayNameOfNode(type)})`;\n      }\n      case ForwardRef || NaN: {\n        if (type.displayName) {\n          return type.displayName;\n        }\n        const name = adapter.displayNameOfNode({ type: type.render });\n        return name ? `ForwardRef(${name})` : 'ForwardRef';\n      }\n      case Lazy || NaN: {\n        return 'lazy';\n      }\n      default: return displayNameOfNode(node);\n    }\n  }\n\n  isValidElement(element) {\n    return isElement(element);\n  }\n\n  isValidElementType(object) {\n    return !!object && isValidElementType(object);\n  }\n\n  isFragment(fragment) {\n    return typeOfNode(fragment) === Fragment;\n  }\n\n  isCustomComponent(type) {\n    const fakeElement = makeFakeElement(type);\n    return !!type && (\n      typeof type === 'function'\n      || isForwardRef(fakeElement)\n      || isContextProvider(fakeElement)\n      || isContextConsumer(fakeElement)\n      || isSuspense(fakeElement)\n    );\n  }\n\n  isContextConsumer(type) {\n    return !!type && isContextConsumer(makeFakeElement(type));\n  }\n\n  isCustomComponentElement(inst) {\n    if (!inst || !this.isValidElement(inst)) {\n      return false;\n    }\n    return this.isCustomComponent(inst.type);\n  }\n\n  getProviderFromConsumer(Consumer) {\n    // React stores references to the Provider on a Consumer differently across versions.\n    if (Consumer) {\n      let Provider;\n      if (Consumer._context) { // check this first, to avoid a deprecation warning\n        ({ Provider } = Consumer._context);\n      } else if (Consumer.Provider) {\n        ({ Provider } = Consumer);\n      }\n      if (Provider) {\n        return Provider;\n      }\n    }\n    throw new Error('Enzyme Internal Error: can’t figure out how to get Provider from Consumer');\n  }\n\n  createElement(...args) {\n    return React.createElement(...args);\n  }\n\n  wrapWithWrappingComponent(node, options) {\n    return {\n      RootFinder,\n      node: wrapWithWrappingComponent(React.createElement, node, options),\n    };\n  }\n}\n\nmodule.exports = ReactSeventeenAdapter;\n"]}