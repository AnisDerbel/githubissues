{"version":3,"sources":["response.ts"],"names":["createSuccessfulResponse","data","status","statusText","createFailedResponse"],"mappings":";;;;;AAWO,IAAMA,wBAAmD,GAAG,SAAtDA,wBAAsD,CAAAC,IAAI;AAAA,SAAK;AAC1EC,IAAAA,MAAM,EAAE,GADkE;AAE1EC,IAAAA,UAAU,EAAE,IAF8D;AAG1EF,IAAAA,IAAI,EAAJA;AAH0E,GAAL;AAAA,CAAhE;;;;AAMA,IAAMG,oBAA2C,GAAG,SAA9CA,oBAA8C;AAAA,MACzDF,MADyD,uEAChD,GADgD;AAAA,MAEzDD,IAFyD;AAAA,SAGrD;AACJC,IAAAA,MAAM,EAANA,MADI;AAEJD,IAAAA,IAAI,EAAJA;AAFI,GAHqD;AAAA,CAApD","sourcesContent":["import {AxiosResponse} from 'axios';\n\ntype TCreateSuccessfulResponse = (\n  data?: Record<any, any>,\n) => Pick<AxiosResponse, 'status' | 'statusText' | 'data'>;\n\ntype TCreateFailedResponse = (\n  status?: AxiosResponse['status'],\n  data?: Record<any, any>,\n) => Pick<AxiosResponse, 'status' | 'data'>;\n\nexport const createSuccessfulResponse: TCreateSuccessfulResponse = data => ({\n  status: 200,\n  statusText: 'OK',\n  data,\n});\n\nexport const createFailedResponse: TCreateFailedResponse = (\n  status = 500,\n  data,\n) => ({\n  status,\n  data,\n});\n"]}