8cbf389981e813fef46ef5a2dcb13a3c
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLimit = exports.isFilter = exports.filterNames = void 0;
exports.filterNames = new Set(["first", "last", "eq", "gt", "nth", "lt", "even", "odd"]);

function isFilter(s) {
  if (s.type !== "pseudo") return false;
  if (exports.filterNames.has(s.name)) return true;

  if (s.name === "not" && Array.isArray(s.data)) {
    return s.data.some(function (s) {
      return s.some(isFilter);
    });
  }

  return false;
}

exports.isFilter = isFilter;

function getLimit(filter, data) {
  var num = data != null ? parseInt(data, 10) : NaN;

  switch (filter) {
    case "first":
      return 1;

    case "nth":
    case "eq":
      return isFinite(num) ? num >= 0 ? num + 1 : Infinity : 0;

    case "lt":
      return isFinite(num) ? num >= 0 ? num : Infinity : 0;

    case "gt":
      return isFinite(num) ? Infinity : 0;

    default:
      return Infinity;
  }
}

exports.getLimit = getLimit;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc2l0aW9uYWxzLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0TGltaXQiLCJpc0ZpbHRlciIsImZpbHRlck5hbWVzIiwiU2V0IiwicyIsInR5cGUiLCJoYXMiLCJuYW1lIiwiQXJyYXkiLCJpc0FycmF5IiwiZGF0YSIsInNvbWUiLCJmaWx0ZXIiLCJudW0iLCJwYXJzZUludCIsIk5hTiIsImlzRmluaXRlIiwiSW5maW5pdHkiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQTdDO0FBQ0FELE9BQU8sQ0FBQ0UsUUFBUixHQUFtQkYsT0FBTyxDQUFDRyxRQUFSLEdBQW1CSCxPQUFPLENBQUNJLFdBQVIsR0FBc0IsS0FBSyxDQUFqRTtBQUNBSixPQUFPLENBQUNJLFdBQVIsR0FBc0IsSUFBSUMsR0FBSixDQUFRLENBQzFCLE9BRDBCLEVBRTFCLE1BRjBCLEVBRzFCLElBSDBCLEVBSTFCLElBSjBCLEVBSzFCLEtBTDBCLEVBTTFCLElBTjBCLEVBTzFCLE1BUDBCLEVBUTFCLEtBUjBCLENBQVIsQ0FBdEI7O0FBVUEsU0FBU0YsUUFBVCxDQUFrQkcsQ0FBbEIsRUFBcUI7QUFDakIsTUFBSUEsQ0FBQyxDQUFDQyxJQUFGLEtBQVcsUUFBZixFQUNJLE9BQU8sS0FBUDtBQUNKLE1BQUlQLE9BQU8sQ0FBQ0ksV0FBUixDQUFvQkksR0FBcEIsQ0FBd0JGLENBQUMsQ0FBQ0csSUFBMUIsQ0FBSixFQUNJLE9BQU8sSUFBUDs7QUFDSixNQUFJSCxDQUFDLENBQUNHLElBQUYsS0FBVyxLQUFYLElBQW9CQyxLQUFLLENBQUNDLE9BQU4sQ0FBY0wsQ0FBQyxDQUFDTSxJQUFoQixDQUF4QixFQUErQztBQUUzQyxXQUFPTixDQUFDLENBQUNNLElBQUYsQ0FBT0MsSUFBUCxDQUFZLFVBQVVQLENBQVYsRUFBYTtBQUFFLGFBQU9BLENBQUMsQ0FBQ08sSUFBRixDQUFPVixRQUFQLENBQVA7QUFBMEIsS0FBckQsQ0FBUDtBQUNIOztBQUNELFNBQU8sS0FBUDtBQUNIOztBQUNESCxPQUFPLENBQUNHLFFBQVIsR0FBbUJBLFFBQW5COztBQUNBLFNBQVNELFFBQVQsQ0FBa0JZLE1BQWxCLEVBQTBCRixJQUExQixFQUFnQztBQUM1QixNQUFJRyxHQUFHLEdBQUdILElBQUksSUFBSSxJQUFSLEdBQWVJLFFBQVEsQ0FBQ0osSUFBRCxFQUFPLEVBQVAsQ0FBdkIsR0FBb0NLLEdBQTlDOztBQUNBLFVBQVFILE1BQVI7QUFDSSxTQUFLLE9BQUw7QUFDSSxhQUFPLENBQVA7O0FBQ0osU0FBSyxLQUFMO0FBQ0EsU0FBSyxJQUFMO0FBQ0ksYUFBT0ksUUFBUSxDQUFDSCxHQUFELENBQVIsR0FBaUJBLEdBQUcsSUFBSSxDQUFQLEdBQVdBLEdBQUcsR0FBRyxDQUFqQixHQUFxQkksUUFBdEMsR0FBa0QsQ0FBekQ7O0FBQ0osU0FBSyxJQUFMO0FBQ0ksYUFBT0QsUUFBUSxDQUFDSCxHQUFELENBQVIsR0FBaUJBLEdBQUcsSUFBSSxDQUFQLEdBQVdBLEdBQVgsR0FBaUJJLFFBQWxDLEdBQThDLENBQXJEOztBQUNKLFNBQUssSUFBTDtBQUNJLGFBQU9ELFFBQVEsQ0FBQ0gsR0FBRCxDQUFSLEdBQWdCSSxRQUFoQixHQUEyQixDQUFsQzs7QUFDSjtBQUNJLGFBQU9BLFFBQVA7QUFYUjtBQWFIOztBQUNEbkIsT0FBTyxDQUFDRSxRQUFSLEdBQW1CQSxRQUFuQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRMaW1pdCA9IGV4cG9ydHMuaXNGaWx0ZXIgPSBleHBvcnRzLmZpbHRlck5hbWVzID0gdm9pZCAwO1xuZXhwb3J0cy5maWx0ZXJOYW1lcyA9IG5ldyBTZXQoW1xuICAgIFwiZmlyc3RcIixcbiAgICBcImxhc3RcIixcbiAgICBcImVxXCIsXG4gICAgXCJndFwiLFxuICAgIFwibnRoXCIsXG4gICAgXCJsdFwiLFxuICAgIFwiZXZlblwiLFxuICAgIFwib2RkXCIsXG5dKTtcbmZ1bmN0aW9uIGlzRmlsdGVyKHMpIHtcbiAgICBpZiAocy50eXBlICE9PSBcInBzZXVkb1wiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGV4cG9ydHMuZmlsdGVyTmFtZXMuaGFzKHMubmFtZSkpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmIChzLm5hbWUgPT09IFwibm90XCIgJiYgQXJyYXkuaXNBcnJheShzLmRhdGEpKSB7XG4gICAgICAgIC8vIE9ubHkgY29uc2lkZXIgYDpub3RgIHdpdGggZW1iZWRkZWQgZmlsdGVyc1xuICAgICAgICByZXR1cm4gcy5kYXRhLnNvbWUoZnVuY3Rpb24gKHMpIHsgcmV0dXJuIHMuc29tZShpc0ZpbHRlcik7IH0pO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnRzLmlzRmlsdGVyID0gaXNGaWx0ZXI7XG5mdW5jdGlvbiBnZXRMaW1pdChmaWx0ZXIsIGRhdGEpIHtcbiAgICB2YXIgbnVtID0gZGF0YSAhPSBudWxsID8gcGFyc2VJbnQoZGF0YSwgMTApIDogTmFOO1xuICAgIHN3aXRjaCAoZmlsdGVyKSB7XG4gICAgICAgIGNhc2UgXCJmaXJzdFwiOlxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIGNhc2UgXCJudGhcIjpcbiAgICAgICAgY2FzZSBcImVxXCI6XG4gICAgICAgICAgICByZXR1cm4gaXNGaW5pdGUobnVtKSA/IChudW0gPj0gMCA/IG51bSArIDEgOiBJbmZpbml0eSkgOiAwO1xuICAgICAgICBjYXNlIFwibHRcIjpcbiAgICAgICAgICAgIHJldHVybiBpc0Zpbml0ZShudW0pID8gKG51bSA+PSAwID8gbnVtIDogSW5maW5pdHkpIDogMDtcbiAgICAgICAgY2FzZSBcImd0XCI6XG4gICAgICAgICAgICByZXR1cm4gaXNGaW5pdGUobnVtKSA/IEluZmluaXR5IDogMDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBJbmZpbml0eTtcbiAgICB9XG59XG5leHBvcnRzLmdldExpbWl0ID0gZ2V0TGltaXQ7XG4iXX0=