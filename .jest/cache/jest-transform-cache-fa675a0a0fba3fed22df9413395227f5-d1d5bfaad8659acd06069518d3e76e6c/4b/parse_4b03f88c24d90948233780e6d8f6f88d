6aee764f08b2731264e68377be3bd48b
var htmlparser = require('htmlparser2');

var parse5 = require('parse5');

var htmlparser2Adapter = require('parse5-htmlparser2-tree-adapter');

var domhandler = require('domhandler');

var DomUtils = htmlparser.DomUtils;

exports = module.exports = function parse(content, options, isDocument) {
  var dom;

  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {
    content = content.toString();
  }

  if (typeof content === 'string') {
    var useHtmlParser2 = options.xmlMode || options._useHtmlParser2;
    dom = useHtmlParser2 ? htmlparser.parseDocument(content, options) : parseWithParse5(content, options, isDocument);
  } else {
    if (typeof content === 'object' && content != null && content.type === 'root') {
      dom = content;
    } else {
      var root = new domhandler.Document(content);
      content.forEach(function (node) {
        node.parent = root;
      });
      dom = root;
    }
  }

  return dom;
};

function parseWithParse5(content, options, isDocument) {
  var parse = isDocument ? parse5.parse : parse5.parseFragment;
  return parse(content, {
    treeAdapter: htmlparser2Adapter,
    sourceCodeLocationInfo: options.sourceCodeLocationInfo
  });
}

exports.update = function (arr, parent) {
  if (!Array.isArray(arr)) arr = [arr];

  if (parent) {
    parent.children = arr;
  } else {
    parent = null;
  }

  for (var i = 0; i < arr.length; i++) {
    var node = arr[i];

    if (node.parent && node.parent.children !== arr) {
      DomUtils.removeElement(node);
    }

    if (parent) {
      node.prev = arr[i - 1] || null;
      node.next = arr[i + 1] || null;
    } else {
      node.prev = node.next = null;
    }

    node.parent = parent;
  }

  return parent;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlLmpzIl0sIm5hbWVzIjpbImh0bWxwYXJzZXIiLCJyZXF1aXJlIiwicGFyc2U1IiwiaHRtbHBhcnNlcjJBZGFwdGVyIiwiZG9taGFuZGxlciIsIkRvbVV0aWxzIiwiZXhwb3J0cyIsIm1vZHVsZSIsInBhcnNlIiwiY29udGVudCIsIm9wdGlvbnMiLCJpc0RvY3VtZW50IiwiZG9tIiwiQnVmZmVyIiwiaXNCdWZmZXIiLCJ0b1N0cmluZyIsInVzZUh0bWxQYXJzZXIyIiwieG1sTW9kZSIsIl91c2VIdG1sUGFyc2VyMiIsInBhcnNlRG9jdW1lbnQiLCJwYXJzZVdpdGhQYXJzZTUiLCJ0eXBlIiwicm9vdCIsIkRvY3VtZW50IiwiZm9yRWFjaCIsIm5vZGUiLCJwYXJlbnQiLCJwYXJzZUZyYWdtZW50IiwidHJlZUFkYXB0ZXIiLCJzb3VyY2VDb2RlTG9jYXRpb25JbmZvIiwidXBkYXRlIiwiYXJyIiwiQXJyYXkiLCJpc0FycmF5IiwiY2hpbGRyZW4iLCJpIiwibGVuZ3RoIiwicmVtb3ZlRWxlbWVudCIsInByZXYiLCJuZXh0Il0sIm1hcHBpbmdzIjoiQUFHQSxJQUFJQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXhCOztBQUNBLElBQUlDLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBQ0EsSUFBSUUsa0JBQWtCLEdBQUdGLE9BQU8sQ0FBQyxpQ0FBRCxDQUFoQzs7QUFDQSxJQUFJRyxVQUFVLEdBQUdILE9BQU8sQ0FBQyxZQUFELENBQXhCOztBQUNBLElBQUlJLFFBQVEsR0FBR0wsVUFBVSxDQUFDSyxRQUExQjs7QUFLQUMsT0FBTyxHQUFHQyxNQUFNLENBQUNELE9BQVAsR0FBaUIsU0FBU0UsS0FBVCxDQUFlQyxPQUFmLEVBQXdCQyxPQUF4QixFQUFpQ0MsVUFBakMsRUFBNkM7QUFHdEUsTUFBSUMsR0FBSjs7QUFFQSxNQUFJLE9BQU9DLE1BQVAsS0FBa0IsV0FBbEIsSUFBaUNBLE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQkwsT0FB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Y2VzQ29udGVudCI6WyIvKlxuICBNb2R1bGUgRGVwZW5kZW5jaWVzXG4qL1xudmFyIGh0bWxwYXJzZXIgPSByZXF1aXJlKCdodG1scGFyc2VyMicpO1xudmFyIHBhcnNlNSA9IHJlcXVpcmUoJ3BhcnNlNScpO1xudmFyIGh0bWxwYXJzZXIyQWRhcHRlciA9IHJlcXVpcmUoJ3BhcnNlNS1odG1scGFyc2VyMi10cmVlLWFkYXB0ZXInKTtcbnZhciBkb21oYW5kbGVyID0gcmVxdWlyZSgnZG9taGFuZGxlcicpO1xudmFyIERvbVV0aWxzID0gaHRtbHBhcnNlci5Eb21VdGlscztcblxuLypcbiAgUGFyc2VyXG4qL1xuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2UoY29udGVudCwgb3B0aW9ucywgaXNEb2N1bWVudCkge1xuICAvLyBvcHRpb25zID0gb3B0aW9ucyB8fCAkLmZuLm9wdGlvbnM7XG5cbiAgdmFyIGRvbTtcblxuICBpZiAodHlwZW9mIEJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcgJiYgQnVmZmVyLmlzQnVmZmVyKGNvbnRlbnQpKSB7XG4gICAgY29udGVudCA9IGNvbnRlbnQudG9TdHJpbmcoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICB2YXIgdXNlSHRtbFBhcnNlcjIgPSBvcHRpb25zLnhtbE1vZGUgfHwgb3B0aW9ucy5fdXNlSHRtbFBhcnNlcjI7XG5cbiAgICBkb20gPSB1c2VIdG1sUGFyc2VyMlxuICAgICAgPyBodG1scGFyc2VyLnBhcnNlRG9jdW1lbnQoY29udGVudCwgb3B0aW9ucylcbiAgICAgIDogcGFyc2VXaXRoUGFyc2U1KGNvbnRlbnQsIG9wdGlvbnMsIGlzRG9jdW1lbnQpO1xuICB9IGVsc2Uge1xuICAgIGlmIChcbiAgICAgIHR5cGVvZiBjb250ZW50ID09PSAnb2JqZWN0JyAmJlxuICAgICAgY29udGVudCAhPSBudWxsICYmXG4gICAgICBjb250ZW50LnR5cGUgPT09ICdyb290J1xuICAgICkge1xuICAgICAgZG9tID0gY29udGVudDtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gR2VuZXJpYyByb290IGVsZW1lbnRcbiAgICAgIHZhciByb290ID0gbmV3IGRvbWhhbmRsZXIuRG9jdW1lbnQoY29udGVudCk7XG4gICAgICBjb250ZW50LmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgbm9kZS5wYXJlbnQgPSByb290O1xuICAgICAgfSk7XG5cbiAgICAgIGRvbSA9IHJvb3Q7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRvbTtcbn07XG5cbmZ1bmN0aW9uIHBhcnNlV2l0aFBhcnNlNShjb250ZW50LCBvcHRpb25zLCBpc0RvY3VtZW50KSB7XG4gIHZhciBwYXJzZSA9IGlzRG9jdW1lbnQgPyBwYXJzZTUucGFyc2UgOiBwYXJzZTUucGFyc2VGcmFnbWVudDtcblxuICByZXR1cm4gcGFyc2UoY29udGVudCwge1xuICAgIHRyZWVBZGFwdGVyOiBodG1scGFyc2VyMkFkYXB0ZXIsXG4gICAgc291cmNlQ29kZUxvY2F0aW9uSW5mbzogb3B0aW9ucy5zb3VyY2VDb2RlTG9jYXRpb25JbmZvLFxuICB9KTtcbn1cblxuLypcbiAgVXBkYXRlIHRoZSBkb20gc3RydWN0dXJlLCBmb3Igb25lIGNoYW5nZWQgbGF5ZXJcbiovXG5leHBvcnRzLnVwZGF0ZSA9IGZ1bmN0aW9uIChhcnIsIHBhcmVudCkge1xuICAvLyBub3JtYWxpemVcbiAgaWYgKCFBcnJheS5pc0FycmF5KGFycikpIGFyciA9IFthcnJdO1xuXG4gIC8vIFVwZGF0ZSBwYXJlbnRcbiAgaWYgKHBhcmVudCkge1xuICAgIHBhcmVudC5jaGlsZHJlbiA9IGFycjtcbiAgfSBlbHNlIHtcbiAgICBwYXJlbnQgPSBudWxsO1xuICB9XG5cbiAgLy8gVXBkYXRlIG5laWdoYm9yc1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgIHZhciBub2RlID0gYXJyW2ldO1xuXG4gICAgLy8gQ2xlYW5seSByZW1vdmUgZXhpc3Rpbmcgbm9kZXMgZnJvbSB0aGVpciBwcmV2aW91cyBzdHJ1Y3R1cmVzLlxuICAgIGlmIChub2RlLnBhcmVudCAmJiBub2RlLnBhcmVudC5jaGlsZHJlbiAhPT0gYXJyKSB7XG4gICAgICBEb21VdGlscy5yZW1vdmVFbGVtZW50KG5vZGUpO1xuICAgIH1cblxuICAgIGlmIChwYXJlbnQpIHtcbiAgICAgIG5vZGUucHJldiA9IGFycltpIC0gMV0gfHwgbnVsbDtcbiAgICAgIG5vZGUubmV4dCA9IGFycltpICsgMV0gfHwgbnVsbDtcbiAgICB9IGVsc2Uge1xuICAgICAgbm9kZS5wcmV2ID0gbm9kZS5uZXh0ID0gbnVsbDtcbiAgICB9XG5cbiAgICBub2RlLnBhcmVudCA9IHBhcmVudDtcbiAgfVxuXG4gIHJldHVybiBwYXJlbnQ7XG59O1xuIl19