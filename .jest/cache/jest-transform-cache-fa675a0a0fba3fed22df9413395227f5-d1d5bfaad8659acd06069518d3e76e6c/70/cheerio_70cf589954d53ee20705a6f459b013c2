7f76d249aa784149e2209a4675d4fceb
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var parse = require('./parse');

var defaultOptions = require('./options').default;

var flattenOptions = require('./options').flatten;

var isHtml = require('./utils').isHtml;

var api = [require('./api/attributes'), require('./api/traversing'), require('./api/manipulation'), require('./api/css'), require('./api/forms')];

var Cheerio = module.exports = function (selector, context, root, options) {
  if (!(this instanceof Cheerio)) {
    return new Cheerio(selector, context, root, options);
  }

  this.options = (0, _extends2.default)({}, defaultOptions, this.options, flattenOptions(options));
  if (!selector) return this;

  if (root) {
    if (typeof root === 'string') root = parse(root, this.options, false);
    this._root = Cheerio.call(this, root);
  }

  if (selector.cheerio) return selector;
  if (isNode(selector)) selector = [selector];

  if (Array.isArray(selector)) {
    selector.forEach(function (elem, idx) {
      this[idx] = elem;
    }, this);
    this.length = selector.length;
    return this;
  }

  if (typeof selector === 'string' && isHtml(selector)) {
    return Cheerio.call(this, parse(selector, this.options, false).children);
  }

  if (!context) {
    context = this._root;
  } else if (typeof context === 'string') {
    if (isHtml(context)) {
      context = parse(context, this.options, false);
      context = Cheerio.call(this, context);
    } else {
      selector = [context, selector].join(' ');
      context = this._root;
    }
  } else if (!context.cheerio) {
    context = Cheerio.call(this, context);
  }

  if (!context) return this;
  return context.find(selector);
};

Cheerio.prototype.cheerio = '[cheerio object]';
Cheerio.prototype.length = 0;
Cheerio.prototype.splice = Array.prototype.splice;

Cheerio.prototype._make = function (dom, context) {
  var cheerio = new this.constructor(dom, context, this._root, this.options);
  cheerio.prevObject = this;
  return cheerio;
};

Cheerio.prototype.toArray = function () {
  return this.get();
};

if (typeof Symbol !== 'undefined') {
  Cheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];
}

api.forEach(function (mod) {
  (0, _extends2.default)(Cheerio.prototype, mod);
});

var isNode = function isNode(obj) {
  return obj.name || obj.type === 'root' || obj.type === 'text' || obj.type === 'comment';
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWVyaW8uanMiXSwibmFtZXMiOlsicGFyc2UiLCJyZXF1aXJlIiwiZGVmYXVsdE9wdGlvbnMiLCJkZWZhdWx0IiwiZmxhdHRlbk9wdGlvbnMiLCJmbGF0dGVuIiwiaXNIdG1sIiwiYXBpIiwiQ2hlZXJpbyIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZWxlY3RvciIsImNvbnRleHQiLCJyb290Iiwib3B0aW9ucyIsIl9yb290IiwiY2FsbCIsImNoZWVyaW8iLCJpc05vZGUiLCJBcnJheSIsImlzQXJyYXkiLCJmb3JFYWNoIiwiZWxlbSIsImlkeCIsImxlbmd0aCIsImNoaWxkcmVuIiwiam9pbiIsImZpbmQiLCJwcm90b3R5cGUiLCJzcGxpY2UiLCJfbWFrZSIsImRvbSIsImNvbnN0cnVjdG9yIiwicHJldk9iamVjdCIsInRvQXJyYXkiLCJnZXQiLCJTeW1ib2wiLCJpdGVyYXRvciIsIm1vZCIsIm9iaiIsIm5hbWUiLCJ0eXBlIl0sIm1hcHBpbmdzIjoiOzs7O0FBSUEsSUFBSUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFuQjs7QUFDQSxJQUFJQyxjQUFjLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQVAsQ0FBcUJFLE9BQTFDOztBQUNBLElBQUlDLGNBQWMsR0FBR0gsT0FBTyxDQUFDLFdBQUQsQ0FBUCxDQUFxQkksT0FBMUM7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHTCxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CSyxNQUFoQzs7QUFLQSxJQUFJQyxHQUFHLEdBQUcsQ0FDUk4sT0FBTyxDQUFDLGtCQUFELENBREMsRUFFUkEsT0FBTyxDQUFDLGtCQUFELENBRkMsRUFHUkEsT0FBTyxDQUFDLG9CQUFELENBSEMsRUFJUkEsT0FBTyxDQUFDLFdBQUQsQ0FKQyxFQUtSQSxPQUFPLENBQUMsYUFBRCxDQUxDLENBQVY7O0FBeUJBLElBQUlPLE9BQU8sR0FBSUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQVVDLFFBQVYsRUFBb0JDLE9BQXBCLEVBQTZCQyxJ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QUFPLENBQUNvQixTQUFSLENBQWtCRSxLQUFsQixHQUEwQixVQUFVQyxHQUFWLEVBQWVuQixPQUFmLEVBQXdCO0FBQ2hELE1BQUlLLE9BQU8sR0FBRyxJQUFJLEtBQUtlLFdBQVQsQ0FBcUJELEdBQXJCLEVBQTBCbkIsT0FBMUIsRUFBbUMsS0FBS0csS0FBeEMsRUFBK0MsS0FBS0QsT0FBcEQsQ0FBZDtBQUNBRyxFQUFBQSxPQUFPLENBQUNnQixVQUFSLEdBQXFCLElBQXJCO0FBQ0EsU0FBT2hCLE9BQVA7QUFDRCxDQUpEOztBQWFBVCxPQUFPLENBQUNvQixTQUFSLENBQWtCTSxPQUFsQixHQUE0QixZQUFZO0FBQ3RDLFNBQU8sS0FBS0MsR0FBTCxFQUFQO0FBQ0QsQ0FGRDs7QUFLQSxJQUFJLE9BQU9DLE1BQVAsS0FBa0IsV0FBdEIsRUFBbUM7QUFDakM1QixFQUFBQSxPQUFPLENBQUNvQixTQUFSLENBQWtCUSxNQUFNLENBQUNDLFFBQXpCLElBQXFDbEIsS0FBSyxDQUFDUyxTQUFOLENBQWdCUSxNQUFNLENBQUNDLFFBQXZCLENBQXJDO0FBQ0Q7O0FBR0Q5QixHQUFHLENBQUNjLE9BQUosQ0FBWSxVQUFVaUIsR0FBVixFQUFlO0FBQ3pCLHlCQUFjOUIsT0FBTyxDQUFDb0IsU0FBdEIsRUFBaUNVLEdBQWpDO0FBQ0QsQ0FGRDs7QUFJQSxJQUFJcEIsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBVXFCLEdBQVYsRUFBZTtBQUMxQixTQUNFQSxHQUFHLENBQUNDLElBQUosSUFDQUQsR0FBRyxDQUFDRSxJQUFKLEtBQWEsTUFEYixJQUVBRixHQUFHLENBQUNFLElBQUosS0FBYSxNQUZiLElBR0FGLEdBQUcsQ0FBQ0UsSUFBSixLQUFhLFNBSmY7QUFNRCxDQVBEIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAgTW9kdWxlIGRlcGVuZGVuY2llc1xuKi9cblxudmFyIHBhcnNlID0gcmVxdWlyZSgnLi9wYXJzZScpO1xudmFyIGRlZmF1bHRPcHRpb25zID0gcmVxdWlyZSgnLi9vcHRpb25zJykuZGVmYXVsdDtcbnZhciBmbGF0dGVuT3B0aW9ucyA9IHJlcXVpcmUoJy4vb3B0aW9ucycpLmZsYXR0ZW47XG52YXIgaXNIdG1sID0gcmVxdWlyZSgnLi91dGlscycpLmlzSHRtbDtcblxuLypcbiAqIFRoZSBBUElcbiAqL1xudmFyIGFwaSA9IFtcbiAgcmVxdWlyZSgnLi9hcGkvYXR0cmlidXRlcycpLFxuICByZXF1aXJlKCcuL2FwaS90cmF2ZXJzaW5nJyksXG4gIHJlcXVpcmUoJy4vYXBpL21hbmlwdWxhdGlvbicpLFxuICByZXF1aXJlKCcuL2FwaS9jc3MnKSxcbiAgcmVxdWlyZSgnLi9hcGkvZm9ybXMnKSxcbl07XG5cbi8qKlxuICogSW5zdGFuY2Ugb2YgY2hlZXJpby4gTWV0aG9kcyBhcmUgc3BlY2lmaWVkIGluIHRoZSBtb2R1bGVzLlxuICogVXNhZ2Ugb2YgdGhpcyBjb25zdHJ1Y3RvciBpcyBub3QgcmVjb21tZW5kZWQuIFBsZWFzZSB1c2UgJC5sb2FkIGluc3RlYWQuXG4gKlxuICogQGNsYXNzXG4gKiBAaGlkZWNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge3N0cmluZ3xjaGVlcmlvfG5vZGV8bm9kZVtdfSBzZWxlY3RvciAtIFRoZSBuZXcgc2VsZWN0aW9uLlxuICogQHBhcmFtIHtzdHJpbmd8Y2hlZXJpb3xub2RlfG5vZGVbXX0gW2NvbnRleHRdIC0gQ29udGV4dCBvZiB0aGUgc2VsZWN0aW9uLlxuICogQHBhcmFtIHtzdHJpbmd8Y2hlZXJpb3xub2RlfG5vZGVbXX0gW3Jvb3RdIC0gU2V0cyB0aGUgcm9vdCBub2RlLlxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXSAtIE9wdGlvbnMgZm9yIHRoZSBpbnN0YW5jZS5cbiAqXG4gKiBAbWl4ZXMgbW9kdWxlOmNoZWVyaW8vYXR0cmlidXRlc1xuICogQG1peGVzIG1vZHVsZTpjaGVlcmlvL2Nzc1xuICogQG1peGVzIG1vZHVsZTpjaGVlcmlvL2Zvcm1zXG4gKiBAbWl4ZXMgbW9kdWxlOmNoZWVyaW8vbWFuaXB1bGF0aW9uXG4gKiBAbWl4ZXMgbW9kdWxlOmNoZWVyaW8vdHJhdmVyc2luZ1xuICovXG52YXIgQ2hlZXJpbyA9IChtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzZWxlY3RvciwgY29udGV4dCwgcm9vdCwgb3B0aW9ucykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQ2hlZXJpbykpIHtcbiAgICByZXR1cm4gbmV3IENoZWVyaW8oc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QsIG9wdGlvbnMpO1xuICB9XG5cbiAgdGhpcy5vcHRpb25zID0gT2JqZWN0LmFzc2lnbihcbiAgICB7fSxcbiAgICBkZWZhdWx0T3B0aW9ucyxcbiAgICB0aGlzLm9wdGlvbnMsXG4gICAgZmxhdHRlbk9wdGlvbnMob3B0aW9ucylcbiAgKTtcblxuICAvLyAkKCksICQobnVsbCksICQodW5kZWZpbmVkKSwgJChmYWxzZSlcbiAgaWYgKCFzZWxlY3RvcikgcmV0dXJuIHRoaXM7XG5cbiAgaWYgKHJvb3QpIHtcbiAgICBpZiAodHlwZW9mIHJvb3QgPT09ICdzdHJpbmcnKSByb290ID0gcGFyc2Uocm9vdCwgdGhpcy5vcHRpb25zLCBmYWxzZSk7XG4gICAgdGhpcy5fcm9vdCA9IENoZWVyaW8uY2FsbCh0aGlzLCByb290KTtcbiAgfVxuXG4gIC8vICQoJClcbiAgaWYgKHNlbGVjdG9yLmNoZWVyaW8pIHJldHVybiBzZWxlY3RvcjtcblxuICAvLyAkKGRvbSlcbiAgaWYgKGlzTm9kZShzZWxlY3RvcikpIHNlbGVjdG9yID0gW3NlbGVjdG9yXTtcblxuICAvLyAkKFtkb21dKVxuICBpZiAoQXJyYXkuaXNBcnJheShzZWxlY3RvcikpIHtcbiAgICBzZWxlY3Rvci5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtLCBpZHgpIHtcbiAgICAgIHRoaXNbaWR4XSA9IGVsZW07XG4gICAgfSwgdGhpcyk7XG4gICAgdGhpcy5sZW5ndGggPSBzZWxlY3Rvci5sZW5ndGg7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvLyAkKDxodG1sPilcbiAgaWYgKHR5cGVvZiBzZWxlY3RvciA9PT0gJ3N0cmluZycgJiYgaXNIdG1sKHNlbGVjdG9yKSkge1xuICAgIHJldHVybiBDaGVlcmlvLmNhbGwodGhpcywgcGFyc2Uoc2VsZWN0b3IsIHRoaXMub3B0aW9ucywgZmFsc2UpLmNoaWxkcmVuKTtcbiAgfVxuXG4gIC8vIElmIHdlIGRvbid0IGhhdmUgYSBjb250ZXh0LCBtYXliZSB3ZSBoYXZlIGEgcm9vdCwgZnJvbSBsb2FkaW5nXG4gIGlmICghY29udGV4dCkge1xuICAgIGNvbnRleHQgPSB0aGlzLl9yb290O1xuICB9IGVsc2UgaWYgKHR5cGVvZiBjb250ZXh0ID09PSAnc3RyaW5nJykge1xuICAgIGlmIChpc0h0bWwoY29udGV4dCkpIHtcbiAgICAgIC8vICQoJ2xpJywgJzx1bD4uLi48L3VsPicpXG4gICAgICBjb250ZXh0ID0gcGFyc2UoY29udGV4dCwgdGhpcy5vcHRpb25zLCBmYWxzZSk7XG4gICAgICBjb250ZXh0ID0gQ2hlZXJpby5jYWxsKHRoaXMsIGNvbnRleHQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyAkKCdsaScsICd1bCcpXG4gICAgICBzZWxlY3RvciA9IFtjb250ZXh0LCBzZWxlY3Rvcl0uam9pbignICcpO1xuICAgICAgY29udGV4dCA9IHRoaXMuX3Jvb3Q7XG4gICAgfVxuICB9IGVsc2UgaWYgKCFjb250ZXh0LmNoZWVyaW8pIHtcbiAgICAvLyAkKCdsaScsIG5vZGUpLCAkKCdsaScsIFtub2Rlc10pXG4gICAgY29udGV4dCA9IENoZWVyaW8uY2FsbCh0aGlzLCBjb250ZXh0KTtcbiAgfVxuXG4gIC8vIElmIHdlIHN0aWxsIGRvbid0IGhhdmUgYSBjb250ZXh0LCByZXR1cm5cbiAgaWYgKCFjb250ZXh0KSByZXR1cm4gdGhpcztcblxuICAvLyAjaWQsIC5jbGFzcywgdGFnXG4gIHJldHVybiBjb250ZXh0LmZpbmQoc2VsZWN0b3IpO1xufSk7XG5cbi8qXG4gKiBTZXQgYSBzaWduYXR1cmUgb2YgdGhlIG9iamVjdFxuICovXG5DaGVlcmlvLnByb3RvdHlwZS5jaGVlcmlvID0gJ1tjaGVlcmlvIG9iamVjdF0nO1xuXG4vKlxuICogTWFrZSBjaGVlcmlvIGFuIGFycmF5LWxpa2Ugb2JqZWN0XG4gKi9cbkNoZWVyaW8ucHJvdG90eXBlLmxlbmd0aCA9IDA7XG5DaGVlcmlvLnByb3RvdHlwZS5zcGxpY2UgPSBBcnJheS5wcm90b3R5cGUuc3BsaWNlO1xuXG4vKlxuICogTWFrZSBhIGNoZWVyaW8gb2JqZWN0XG4gKlxuICogQHByaXZhdGVcbiAqL1xuQ2hlZXJpby5wcm90b3R5cGUuX21ha2UgPSBmdW5jdGlvbiAoZG9tLCBjb250ZXh0KSB7XG4gIHZhciBjaGVlcmlvID0gbmV3IHRoaXMuY29uc3RydWN0b3IoZG9tLCBjb250ZXh0LCB0aGlzLl9yb290LCB0aGlzLm9wdGlvbnMpO1xuICBjaGVlcmlvLnByZXZPYmplY3QgPSB0aGlzO1xuICByZXR1cm4gY2hlZXJpbztcbn07XG5cbi8qKlxuICogUmV0cmlldmUgYWxsIHRoZSBET00gZWxlbWVudHMgY29udGFpbmVkIGluIHRoZSBqUXVlcnkgc2V0IGFzIGFuIGFycmF5LlxuICpcbiAqIEBleGFtcGxlXG4gKiAkKCdsaScpLnRvQXJyYXkoKVxuICogLy89PiBbIHsuLi59LCB7Li4ufSwgey4uLn0gXVxuICovXG5DaGVlcmlvLnByb3RvdHlwZS50b0FycmF5ID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5nZXQoKTtcbn07XG5cbi8vIFN1cHBvcnQgZm9yIChjb25zdCBlbGVtZW50IG9mICQoLi4uKSkgaXRlcmF0aW9uOlxuaWYgKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnKSB7XG4gIENoZWVyaW8ucHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl0gPSBBcnJheS5wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXTtcbn1cblxuLy8gUGx1ZyBpbiB0aGUgQVBJXG5hcGkuZm9yRWFjaChmdW5jdGlvbiAobW9kKSB7XG4gIE9iamVjdC5hc3NpZ24oQ2hlZXJpby5wcm90b3R5cGUsIG1vZCk7XG59KTtcblxudmFyIGlzTm9kZSA9IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIChcbiAgICBvYmoubmFtZSB8fFxuICAgIG9iai50eXBlID09PSAncm9vdCcgfHxcbiAgICBvYmoudHlwZSA9PT0gJ3RleHQnIHx8XG4gICAgb2JqLnR5cGUgPT09ICdjb21tZW50J1xuICApO1xufTtcbiJdfQ==