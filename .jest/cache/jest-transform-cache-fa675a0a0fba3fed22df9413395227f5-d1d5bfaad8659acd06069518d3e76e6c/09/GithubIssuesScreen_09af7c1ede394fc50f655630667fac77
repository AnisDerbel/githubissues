fe9cecee1a54be3c584626ba41cdf3e0
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNativePaper = require("react-native-paper");

var _reactRedux = require("react-redux");

var _moment = _interopRequireDefault(require("moment"));

var _Labels = _interopRequireDefault(require("../components/Labels"));

var _Title = _interopRequireDefault(require("../components/Title"));

var _open = _interopRequireDefault(require("../assets/svgs/open.svg"));

var _closed = _interopRequireDefault(require("../assets/svgs/closed.svg"));

var _Pagination = _interopRequireDefault(require("../components/Pagination"));

function cov_1f50eyxaqh() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/screens/GithubIssuesScreen.tsx";
  var hash = "3a92d645667db44c8a1767e938d4d394880d5e72";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/screens/GithubIssuesScreen.tsx",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 87,
          column: 1
        }
      },
      "1": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 26
        }
      },
      "2": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "3": {
        start: {
          line: 24,
          column: 25
        },
        end: {
          line: 24,
          column: 78
        }
      },
      "4": {
        start: {
          line: 24,
          column: 67
        },
        end: {
          line: 24,
          column: 77
        }
      },
      "5": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 59
        }
      },
      "6": {
        start: {
          line: 27,
          column: 48
        },
        end: {
          line: 27,
          column: 58
        }
      },
      "7": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 31,
          column: 13
        }
      },
      "8": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "9": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 55,
          column: 3
        }
      },
      "10": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 54,
          column: 23
        }
      },
      "11": {
        start: {
          line: 34,
          column: 37
        },
        end: {
          line: 34,
          column: 67
        }
      },
      "12": {
        start: {
          line: 57,
          column: 33
        },
        end: {
          line: 64,
          column: 3
        }
      },
      "13": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 63,
          column: 6
        }
      },
      "14": {
        start: {
          line: 66,
          column: 2
        },
        end: {
          line: 86,
          column: 4
        }
      },
      "15": {
        start: {
          line: 78,
          column: 30
        },
        end: {
          line: 78,
          column: 42
        }
      },
      "16": {
        start: {
          line: 91,
          column: 15
        },
        end: {
          line: 98,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 28
          }
        },
        loc: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 24,
            column: 38
          }
        },
        loc: {
          start: {
            line: 24,
            column: 67
          },
          end: {
            line: 24,
            column: 77
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 58
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        },
        loc: {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 21
          },
          end: {
            line: 33,
            column: 22
          }
        },
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 54,
            column: 23
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 32
          }
        },
        loc: {
          start: {
            line: 34,
            column: 37
          },
          end: {
            line: 34,
            column: 67
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 57,
            column: 34
          }
        },
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 63,
            column: 6
          }
        },
        line: 58
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 78,
            column: 22
          },
          end: {
            line: 78,
            column: 23
          }
        },
        loc: {
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 42
          }
        },
        line: 78
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 11
          },
          end: {
            line: 37,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 37,
            column: 43
          }
        }, {
          start: {
            line: 37,
            column: 46
          },
          end: {
            line: 37,
            column: 56
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 11
          },
          end: {
            line: 43,
            column: 11
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 11
          },
          end: {
            line: 41,
            column: 22
          }
        }, {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 48
          }
        }, {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 42
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 7
          },
          end: {
            line: 74,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 7
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 73,
            column: 67
          }
        }],
        line: 68
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3a92d645667db44c8a1767e938d4d394880d5e72"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_1f50eyxaqh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1f50eyxaqh();
cov_1f50eyxaqh().s[0]++;

var GithubIssuesScreen = function GithubIssuesScreen() {
  cov_1f50eyxaqh().f[0]++;
  var theme = (cov_1f50eyxaqh().s[1]++, (0, _reactNativePaper.useTheme)());
  var refList = (cov_1f50eyxaqh().s[2]++, (0, _react.useRef)(null));

  var _ref = (cov_1f50eyxaqh().s[3]++, (0, _reactRedux.useSelector)(function (state) {
    cov_1f50eyxaqh().f[1]++;
    cov_1f50eyxaqh().s[4]++;
    return state.repo;
  })),
      issues = _ref.issues,
      page = _ref.page;

  var _ref2 = (cov_1f50eyxaqh().s[5]++, (0, _reactRedux.useSelector)(function (state) {
    cov_1f50eyxaqh().f[2]++;
    cov_1f50eyxaqh().s[6]++;
    return state.form;
  })),
      values = _ref2.form.values;

  cov_1f50eyxaqh().s[7]++;
  (0, _react.useEffect)(function () {
    var _refList$current;

    cov_1f50eyxaqh().f[3]++;
    cov_1f50eyxaqh().s[8]++;
    refList === null || refList === void 0 ? void 0 : (_refList$current = refList.current) === null || _refList$current === void 0 ? void 0 : _refList$current.scrollToOffset({
      offset: 0
    });
  }, [page]);
  cov_1f50eyxaqh().s[9]++;

  var renderItem = function renderItem(_ref3) {
    var item = _ref3.item;
    cov_1f50eyxaqh().f[4]++;
    cov_1f50eyxaqh().s[10]++;
    return _react.default.createElement(_reactNative.TouchableOpacity, {
      onPress: function onPress() {
        cov_1f50eyxaqh().f[5]++;
        cov_1f50eyxaqh().s[11]++;
        return _reactNative.Linking.openURL(item.html_url);
      }
    }, _react.default.createElement(_reactNative.View, {
      style: [{
        marginHorizontal: theme.spacing.m
      }, styles.row]
    }, _react.default.createElement(_reactNative.View, {
      style: {
        top: theme.spacing.xs
      }
    }, item.state === 'open' ? (cov_1f50eyxaqh().b[0][0]++, _react.default.createElement(_open.default, null)) : (cov_1f50eyxaqh().b[0][1]++, _react.default.createElement(_closed.default, null))), _react.default.createElement(_reactNative.View, {
      style: {
        marginLeft: theme.spacing.m
      }
    }, _react.default.createElement(_Title.default, null, item.title), (cov_1f50eyxaqh().b[1][0]++, item.labels) && (cov_1f50eyxaqh().b[1][1]++, item.labels.length > 0) && (cov_1f50eyxaqh().b[1][2]++, _react.default.createElement(_Labels.default, {
      items: item.labels
    })), _react.default.createElement(_reactNative.Text, {
      style: [theme.variants.info, {
        color: theme.colors.text,
        marginTop: theme.spacing.s
      }]
    }, "#", item.number, " opened ", (0, _moment.default)(item.created_at).fromNow(), " by", ' ', item.user.login))));
  };

  cov_1f50eyxaqh().s[12]++;

  var ItemSeparatorComponent = function ItemSeparatorComponent() {
    cov_1f50eyxaqh().f[6]++;
    cov_1f50eyxaqh().s[13]++;
    return _react.default.createElement(_reactNativePaper.Divider, {
      style: {
        marginVertical: theme.spacing.m,
        backgroundColor: theme.colors.divider
      }
    });
  };

  cov_1f50eyxaqh().s[14]++;
  return _react.default.createElement(_reactNative.View, null, (cov_1f50eyxaqh().b[2][0]++, values) && (cov_1f50eyxaqh().b[2][1]++, _react.default.createElement(_reactNative.Text, {
    style: [theme.variants.h1, {
      margin: theme.spacing.m,
      color: theme.colors.primary
    }]
  }, values.organization + "/" + values.repository)), _react.default.createElement(_reactNative.FlatList, {
    ref: refList,
    keyExtractor: function keyExtractor(item) {
      cov_1f50eyxaqh().f[7]++;
      cov_1f50eyxaqh().s[15]++;
      return item.node_id;
    },
    contentContainerStyle: styles.container,
    ItemSeparatorComponent: ItemSeparatorComponent,
    ListFooterComponent: _Pagination.default,
    renderItem: renderItem,
    data: issues[page]
  }));
};

var _default = GithubIssuesScreen;
exports.default = _default;
var styles = (cov_1f50eyxaqh().s[16]++, _reactNative.StyleSheet.create({
  row: {
    flexDirection: 'row'
  },
  container: {
    paddingBottom: 100
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,