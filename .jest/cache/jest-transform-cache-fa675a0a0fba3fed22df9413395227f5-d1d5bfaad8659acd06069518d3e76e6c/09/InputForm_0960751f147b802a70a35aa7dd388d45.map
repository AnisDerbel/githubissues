{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/components/InputForm.tsx"],"names":[],"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {reduxForm, Field, InjectedFormProps} from 'redux-form';\nimport {Button, useTheme} from 'react-native-paper';\nimport Input from './Input';\nimport {validate} from '../validate';\nimport {IApplicationState} from '../redux/appReducer';\nimport {repoActions} from '../redux/repo/actions';\n\ninterface IFormState {\n  repository: string;\n  organization: string;\n}\n\ninterface IProps {\n  onSuccess: () => void;\n}\nconst InputForm = (props: InjectedFormProps<IFormState> & IProps) => {\n  const dispatch = useDispatch();\n  const {isLoading, error} = useSelector(\n    (state: IApplicationState) => state.repo,\n  );\n  const theme = useTheme();\n  const {handleSubmit, onSuccess} = props;\n  const onSubmit = () => {\n    dispatch(repoActions.getRepoIssues({page: 1, reset: true}));\n  };\n\n  useEffect(() => {\n    if (!isLoading && error === false) onSuccess();\n  }, [isLoading, error]);\n\n  return (\n    <View>\n      <Field\n        errorColor={theme.colors.error}\n        maxLength={60}\n        label=\"organization*\"\n        name=\"organization\"\n        component={Input}\n      />\n      <Field\n        errorColor={theme.colors.error}\n        maxLength={100}\n        label=\"repository*\"\n        name=\"repository\"\n        component={Input}\n      />\n      <Button\n        disabled={isLoading}\n        loading={isLoading}\n        onPress={handleSubmit(onSubmit)}\n        style={styles.button}\n        mode=\"contained\">\n        get issues\n      </Button>\n    </View>\n  );\n};\n\nexport default reduxForm<IFormState, IProps>({\n  form: 'form',\n  // fields: ['organization', 'repository'],\n  validate,\n})(InputForm);\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 10,\n  },\n  button: {\n    marginTop: 20,\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 20,\n  },\n});\n"]}