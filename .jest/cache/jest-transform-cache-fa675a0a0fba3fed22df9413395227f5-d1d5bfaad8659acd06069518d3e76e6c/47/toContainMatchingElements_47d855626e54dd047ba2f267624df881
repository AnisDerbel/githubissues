9b892dbf6c67c01a2ac3147a9a9cf191
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _html = _interopRequireDefault(require("../utils/html"));

var _displayName = _interopRequireDefault(require("../utils/displayName"));

var _name = _interopRequireDefault(require("../utils/name"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function toContainMatchingElements(enzymeWrapper, n, selector) {
  var matches = enzymeWrapper.find(selector);
  var pass = matches.length === n;
  var nodeName = (0, _name.default)(enzymeWrapper);
  return {
    pass: pass,
    message: "Expected <" + nodeName + "> to contain " + n + " element" + (n === 1 ? '' : 's') + " matching " + ("\"" + (0, _displayName.default)(selector) + "\" but " + matches.length + " " + (matches.length === 1 ? 'was' : 'were') + " found."),
    negatedMessage: "Expected <" + nodeName + "> to not contain " + n + " element" + (n === 1 ? '' : 's') + " matching \"" + (0, _displayName.default)(selector) + "\" but it did.",
    contextualInformation: {
      actual: "HTML Output of <" + nodeName + ">:\n " + (0, _html.default)(enzymeWrapper)
    }
  };
}

var _default = toContainMatchingElements;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvQ29udGFpbk1hdGNoaW5nRWxlbWVudHMuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiX2h0bWwiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9kaXNwbGF5TmFtZSIsIl9uYW1lIiwib2JqIiwiX19lc01vZHVsZSIsInRvQ29udGFpbk1hdGNoaW5nRWxlbWVudHMiLCJlbnp5bWVXcmFwcGVyIiwibiIsInNlbGVjdG9yIiwibWF0Y2hlcyIsImZpbmQiLCJwYXNzIiwibGVuZ3RoIiwibm9kZU5hbWUiLCJtZXNzYWdlIiwibmVnYXRlZE1lc3NhZ2UiLCJjb250ZXh0dWFsSW5mb3JtYXRpb24iLCJhY3R1YWwiLCJfZGVmYXVsdCIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDM0NDLEVBQUFBLEtBQUssRUFBRTtBQURvQyxDQUE3QztBQUdBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0IsS0FBSyxDQUF2Qjs7QUFFQSxJQUFJQyxLQUFLLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsZUFBRCxDQUFSLENBQWxDOztBQUVBLElBQUlDLFlBQVksR0FBR0Ysc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxzQkFBRCxDQUFSLENBQXpDOztBQUVBLElBQUlFLEtBQUssR0FBR0gsc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxlQUFELENBQVIsQ0FBbEM7O0FBRUEsU0FBU0Qsc0JBQVQsQ0FBZ0NJLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCO0FBQUVOLElBQUFBLE9BQU8sRUFBRU07QUFBWCxHQUFyQztBQUF3RDs7QUFTL0YsU0FBU0UseUJBQVQsQ0FBbUNDLGFBQW5DLEVBQWtEQyxDQUFsRCxFQUFxREMsUUFBckQsRUFBK0Q7QUFDN0QsTUFBTUMsT0FBTyxHQUFHSCxhQUFhLENBQUNJLElBQWQsQ0FBbUJGLFFBQW5CLENBQWhCO0FBQ0EsTUFBTUcsSUFBSSxHQUFHRixPQUFPLENBQUNHLE1BQVIsS0FBbUJMLENBQWhDO0FBQ0EsTUFBTU0sUUFBUSxHQUFHLENBQUMsR0FBR1gsS0FBSyxDQUFDTCxPQUFWLEVBQW1CUyxhQUFuQixDQUFqQjtBQUNBLFNBQU87QUFDTEssSUFBQUEsSUFBSSxFQUFKQSxJQURLO0FBRUxHLElBQUFBLE9BQU8sRUFBRSxlQUFhRCxRQUFiLHFCQUFxQ04sQ0FBckMsaUJBQWlEQSxDQUFDLEtBQUssQ0FBTixHQUFVLEVBQVYsR0FBZSxHQUFoRSwyQkFBc0YsQ0FBQyxHQUFHTixZQUFZLENBQUNKLE9BQWpCLEVBQTBCVyxRQUExQixDQUF0RixlQUFrSUMsT0FBTyxDQUFDRyxNQUExSSxVQUFvSkgsT0FBTyxDQUFDRyxNQUFSLEtBQW1CLENBQW5CLEdBQXVCLEtBQXZCLEdBQStCLE1BQW5MLGNBRko7QUFHTEcsSUFBQUEsY0FBYyxpQkFBZUYsUUFBZix5QkFBMkNOLENBQTNDLGlCQUF1REEsQ0FBQyxLQUFLLENBQU4sR0FBVSxFQUFWLEdBQWUsR0FBdEUscUJBQXVGLENBQUMsR0FBR04sWUFBWSxDQUFDSixPQUFqQixFQUEwQlcsUUFBMUIsQ0FBdkYsbUJBSFQ7QUFJTFEsSUFBQUEscUJBQXFCLEVBQUU7QUFDckJDLE1BQUFBLE1BQU0sdUJBQXFCSixRQUFyQixhQUFxQyxDQUFDLEdBQUdmLEtBQUssQ0FBQ0QsT0FBVixFQUFtQlMsYUFBbkI7QUFEdEI7QUFKbEIsR0FBUDtBQVFEOztBQUVELElBQUlZLFFBQVEsR0FBR2IseUJBQWY7QUFDQVYsT0FBTyxDQUFDRSxPQUFSLEdBQWtCcUIsUUFBbEI7QUFDQUMsTUFBTSxDQUFDeEIsT0FBUCxHQUFpQkEsT0FBTyxDQUFDRSxPQUF6QiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX2h0bWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlscy9odG1sXCIpKTtcblxudmFyIF9kaXNwbGF5TmFtZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3V0aWxzL2Rpc3BsYXlOYW1lXCIpKTtcblxudmFyIF9uYW1lID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vdXRpbHMvbmFtZVwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlULXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuICpcbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgdG9Db250YWluTWF0Y2hpbmdFbGVtZW50c1xuICogXG4gKi9cbmZ1bmN0aW9uIHRvQ29udGFpbk1hdGNoaW5nRWxlbWVudHMoZW56eW1lV3JhcHBlciwgbiwgc2VsZWN0b3IpIHtcbiAgY29uc3QgbWF0Y2hlcyA9IGVuenltZVdyYXBwZXIuZmluZChzZWxlY3Rvcik7XG4gIGNvbnN0IHBhc3MgPSBtYXRjaGVzLmxlbmd0aCA9PT0gbjtcbiAgY29uc3Qgbm9kZU5hbWUgPSAoMCwgX25hbWUuZGVmYXVsdCkoZW56eW1lV3JhcHBlcik7XG4gIHJldHVybiB7XG4gICAgcGFzcyxcbiAgICBtZXNzYWdlOiBgRXhwZWN0ZWQgPCR7bm9kZU5hbWV9PiB0byBjb250YWluICR7bn0gZWxlbWVudCR7biA9PT0gMSA/ICcnIDogJ3MnfSBtYXRjaGluZyBgICsgYFwiJHsoMCwgX2Rpc3BsYXlOYW1lLmRlZmF1bHQpKHNlbGVjdG9yKX1cIiBidXQgJHttYXRjaGVzLmxlbmd0aH0gJHttYXRjaGVzLmxlbmd0aCA9PT0gMSA/ICd3YXMnIDogJ3dlcmUnfSBmb3VuZC5gLFxuICAgIG5lZ2F0ZWRNZXNzYWdlOiBgRXhwZWN0ZWQgPCR7bm9kZU5hbWV9PiB0byBub3QgY29udGFpbiAke259IGVsZW1lbnQke24gPT09IDEgPyAnJyA6ICdzJ30gbWF0Y2hpbmcgXCIkeygwLCBfZGlzcGxheU5hbWUuZGVmYXVsdCkoc2VsZWN0b3IpfVwiIGJ1dCBpdCBkaWQuYCxcbiAgICBjb250ZXh0dWFsSW5mb3JtYXRpb246IHtcbiAgICAgIGFjdHVhbDogYEhUTUwgT3V0cHV0IG9mIDwke25vZGVOYW1lfT46XFxuICR7KDAsIF9odG1sLmRlZmF1bHQpKGVuenltZVdyYXBwZXIpfWBcbiAgICB9XG4gIH07XG59XG5cbnZhciBfZGVmYXVsdCA9IHRvQ29udGFpbk1hdGNoaW5nRWxlbWVudHM7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdfQ==