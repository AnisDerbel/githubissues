fa4a568ae8b38bf741646d0b8f401b20
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;

var entities_json_1 = __importDefault(require("./maps/entities.json"));

var legacy_json_1 = __importDefault(require("./maps/legacy.json"));

var xml_json_1 = __importDefault(require("./maps/xml.json"));

var decode_codepoint_1 = __importDefault(require("./decode_codepoint"));

var strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\da-fA-F]+|#\d+);/g;
exports.decodeXML = getStrictDecoder(xml_json_1.default);
exports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);

function getStrictDecoder(map) {
  var replace = getReplacer(map);
  return function (str) {
    return String(str).replace(strictEntityRe, replace);
  };
}

var sorter = function sorter(a, b) {
  return a < b ? 1 : -1;
};

exports.decodeHTML = function () {
  var legacy = Object.keys(legacy_json_1.default).sort(sorter);
  var keys = Object.keys(entities_json_1.default).sort(sorter);

  for (var i = 0, j = 0; i < keys.length; i++) {
    if (legacy[j] === keys[i]) {
      keys[i] += ";?";
      j++;
    } else {
      keys[i] += ";";
    }
  }

  var re = new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g");
  var replace = getReplacer(entities_json_1.default);

  function replacer(str) {
    if (str.substr(-1) !== ";") str += ";";
    return replace(str);
  }

  return function (str) {
    return String(str).replace(re, replacer);
  };
}();

function getReplacer(map) {
  return function replace(str) {
    if (str.charAt(1) === "#") {
      var secondChar = str.charAt(2);

      if (secondChar === "X" || secondChar === "x") {
        return decode_codepoint_1.default(parseInt(str.substr(3), 16));
      }

      return decode_codepoint_1.default(parseInt(str.substr(2), 10));
    }

    return map[str.slice(1, -1)] || str;
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlY29kZS5qcyJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWNvZGVIVE1MIiwiZGVjb2RlSFRNTFN0cmljdCIsImRlY29kZVhNTCIsImVudGl0aWVzX2pzb25fMSIsInJlcXVpcmUiLCJsZWdhY3lfanNvbl8xIiwieG1sX2pzb25fMSIsImRlY29kZV9jb2RlcG9pbnRfMSIsInN0cmljdEVudGl0eVJlIiwiZ2V0U3RyaWN0RGVjb2RlciIsImRlZmF1bHQiLCJtYXAiLCJyZXBsYWNlIiwiZ2V0UmVwbGFjZXIiLCJzdHIiLCJTdHJpbmciLCJzb3J0ZXIiLCJhIiwiYiIsImxlZ2FjeSIsImtleXMiLCJzb3J0IiwiaSIsImoiLCJsZW5ndGgiLCJyZSIsIlJlZ0V4cCIsImpvaW4iLCJyZXBsYWNlciIsInN1YnN0ciIsImNoYXJBdCIsInNlY29uZENoYXIiLCJwYXJzZUludCIsInNsaWNlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxJQUFJQSxlQUFlLEdBQUksUUFBUSxLQUFLQSxlQUFkLElBQWtDLFVBQVVDLEdBQVYsRUFBZTtBQUNuRSxTQUFRQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsVUFBWixHQUEwQkQsR0FBMUIsR0FBZ0M7QUFBRSxlQUFXQTtBQUFiLEdBQXZDO0FBQ0gsQ0FGRDs7QUFHQUUsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUFFQyxFQUFBQSxLQUFLLEVBQUU7QUFBVCxDQUE3QztBQUNBRCxPQUFPLENBQUNFLFVBQVIsR0FBcUJGLE9BQU8sQ0FBQ0csZ0JBQVIsR0FBMkJILE9BQU8sQ0FBQ0ksU0FBUixHQUFvQixLQUFLLENBQXpFOztBQUNBLElBQUlDLGVBQWUsR0FBR1YsZUFBZSxDQUFDVyxPQUFPLENBQUMsc0JBQUQsQ0FBUixDQUFyQzs7QUFDQSxJQUFJQyxhQUFhLEdB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QUosQ0FBVyxDQUFYLENBQWpCOztBQUNBLFVBQUlDLFVBQVUsS0FBSyxHQUFmLElBQXNCQSxVQUFVLEtBQUssR0FBekMsRUFBOEM7QUFDMUMsZUFBT3hCLGtCQUFrQixDQUFDRyxPQUFuQixDQUEyQnNCLFFBQVEsQ0FBQ2xCLEdBQUcsQ0FBQ2UsTUFBSixDQUFXLENBQVgsQ0FBRCxFQUFnQixFQUFoQixDQUFuQyxDQUFQO0FBQ0g7O0FBQ0QsYUFBT3RCLGtCQUFrQixDQUFDRyxPQUFuQixDQUEyQnNCLFFBQVEsQ0FBQ2xCLEdBQUcsQ0FBQ2UsTUFBSixDQUFXLENBQVgsQ0FBRCxFQUFnQixFQUFoQixDQUFuQyxDQUFQO0FBQ0g7O0FBRUQsV0FBT2xCLEdBQUcsQ0FBQ0csR0FBRyxDQUFDbUIsS0FBSixDQUFVLENBQVYsRUFBYSxDQUFDLENBQWQsQ0FBRCxDQUFILElBQXlCbkIsR0FBaEM7QUFDSCxHQVZEO0FBV0giLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlSFRNTCA9IGV4cG9ydHMuZGVjb2RlSFRNTFN0cmljdCA9IGV4cG9ydHMuZGVjb2RlWE1MID0gdm9pZCAwO1xudmFyIGVudGl0aWVzX2pzb25fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9tYXBzL2VudGl0aWVzLmpzb25cIikpO1xudmFyIGxlZ2FjeV9qc29uXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vbWFwcy9sZWdhY3kuanNvblwiKSk7XG52YXIgeG1sX2pzb25fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9tYXBzL3htbC5qc29uXCIpKTtcbnZhciBkZWNvZGVfY29kZXBvaW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vZGVjb2RlX2NvZGVwb2ludFwiKSk7XG52YXIgc3RyaWN0RW50aXR5UmUgPSAvJig/OlthLXpBLVowLTldK3wjW3hYXVtcXGRhLWZBLUZdK3wjXFxkKyk7L2c7XG5leHBvcnRzLmRlY29kZVhNTCA9IGdldFN0cmljdERlY29kZXIoeG1sX2pzb25fMS5kZWZhdWx0KTtcbmV4cG9ydHMuZGVjb2RlSFRNTFN0cmljdCA9IGdldFN0cmljdERlY29kZXIoZW50aXRpZXNfanNvbl8xLmRlZmF1bHQpO1xuZnVuY3Rpb24gZ2V0U3RyaWN0RGVjb2RlcihtYXApIHtcbiAgICB2YXIgcmVwbGFjZSA9IGdldFJlcGxhY2VyKG1hcCk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChzdHIpIHsgcmV0dXJuIFN0cmluZyhzdHIpLnJlcGxhY2Uoc3RyaWN0RW50aXR5UmUsIHJlcGxhY2UpOyB9O1xufVxudmFyIHNvcnRlciA9IGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiAoYSA8IGIgPyAxIDogLTEpOyB9O1xuZXhwb3J0cy5kZWNvZGVIVE1MID0gKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbGVnYWN5ID0gT2JqZWN0LmtleXMobGVnYWN5X2pzb25fMS5kZWZhdWx0KS5zb3J0KHNvcnRlcik7XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhlbnRpdGllc19qc29uXzEuZGVmYXVsdCkuc29ydChzb3J0ZXIpO1xuICAgIGZvciAodmFyIGkgPSAwLCBqID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGxlZ2FjeVtqXSA9PT0ga2V5c1tpXSkge1xuICAgICAgICAgICAga2V5c1tpXSArPSBcIjs/XCI7XG4gICAgICAgICAgICBqKys7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBrZXlzW2ldICs9IFwiO1wiO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZhciByZSA9IG5ldyBSZWdFeHAoXCImKD86XCIgKyBrZXlzLmpvaW4oXCJ8XCIpICsgXCJ8I1t4WF1bXFxcXGRhLWZBLUZdKzs/fCNcXFxcZCs7PylcIiwgXCJnXCIpO1xuICAgIHZhciByZXBsYWNlID0gZ2V0UmVwbGFjZXIoZW50aXRpZXNfanNvbl8xLmRlZmF1bHQpO1xuICAgIGZ1bmN0aW9uIHJlcGxhY2VyKHN0cikge1xuICAgICAgICBpZiAoc3RyLnN1YnN0cigtMSkgIT09IFwiO1wiKVxuICAgICAgICAgICAgc3RyICs9IFwiO1wiO1xuICAgICAgICByZXR1cm4gcmVwbGFjZShzdHIpO1xuICAgIH1cbiAgICAvLyBUT0RPIGNvbnNpZGVyIGNyZWF0aW5nIGEgbWVyZ2VkIG1hcFxuICAgIHJldHVybiBmdW5jdGlvbiAoc3RyKSB7IHJldHVybiBTdHJpbmcoc3RyKS5yZXBsYWNlKHJlLCByZXBsYWNlcik7IH07XG59KSgpO1xuZnVuY3Rpb24gZ2V0UmVwbGFjZXIobWFwKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2Uoc3RyKSB7XG4gICAgICAgIGlmIChzdHIuY2hhckF0KDEpID09PSBcIiNcIikge1xuICAgICAgICAgICAgdmFyIHNlY29uZENoYXIgPSBzdHIuY2hhckF0KDIpO1xuICAgICAgICAgICAgaWYgKHNlY29uZENoYXIgPT09IFwiWFwiIHx8IHNlY29uZENoYXIgPT09IFwieFwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRlY29kZV9jb2RlcG9pbnRfMS5kZWZhdWx0KHBhcnNlSW50KHN0ci5zdWJzdHIoMyksIDE2KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGVjb2RlX2NvZGVwb2ludF8xLmRlZmF1bHQocGFyc2VJbnQoc3RyLnN1YnN0cigyKSwgMTApKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3ByZWZlci1udWxsaXNoLWNvYWxlc2NpbmdcbiAgICAgICAgcmV0dXJuIG1hcFtzdHIuc2xpY2UoMSwgLTEpXSB8fCBzdHI7XG4gICAgfTtcbn1cbiJdfQ==