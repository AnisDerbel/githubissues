{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/components/__tests__/title.spec.tsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAA,yBAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,oCAAA,CAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AACA,IAAA,0BAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AAEA,QAAA,CAAA,SAAA,CAAU;AAAE,EAAA,OAAO,EAAE,IAAI,yBAAA,CAAA,OAAJ;AAAX,CAAV;AAGA,IAAI,SAAJ;AAEA,QAAQ,CAAC,OAAD,EAAU,YAAK;AACrB,MAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,KAAD;AAAA,WACtB,QAAA,CAAA,KAAA,CACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,oBAAA,CAAA,QAAD,EAAc;AAAC,MAAA,KAAK,EAAE,OAAA,CAAA;AAAR,KAAd,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,OAAA,CAAA,OAAD,EAAM,IAAN,EAAQ,KAAR,CADF,CADF,CADsB;AAAA,GAAxB;;AAMA,EAAA,UAAU,CAAC,YAAK;AACd,IAAA,SAAS,GAAG,eAAe,CAAC,MAAA,CAAA,cAAA,CAAe,IAAf,CAAoB,CAApB,EAAuB,KAAxB,CAA3B;AACD,GAFS,CAAV;AAIA,EAAA,EAAE,CAAC,+BAAD,EAAkC,YAAK;AACvC,IAAA,MAAM,CAAC,SAAS,CAAC,IAAV,CAAe,0BAAA,CAAA,OAAf,EAA2B,IAA3B,EAAD,CAAN,CAA0C,OAA1C,CAAkD,MAAA,CAAA,cAAA,CAAe,IAAf,CAAoB,CAApB,EAAuB,KAAzE;AACD,GAFC,CAAF;AAIA,EAAA,EAAE,CAAC,qDAAD,EAAwD,YAAK;AAC7D,IAAA,MAAM,CAAC,OAAA,CAAA,UAAA,CAAW,uBAAX,CAAD,CAAN,CAA4C,OAA5C,CAAoD,qBAApD;AACA,IAAA,MAAM,CAAC,OAAA,CAAA,UAAA,CAAW,0BAAX,CAAD,CAAN,CAA+C,OAA/C,CAAuD,4BAAvD;AACA,IAAA,MAAM,CAAC,OAAA,CAAA,UAAA,CAAW,yBAAX,CAAD,CAAN,CAA8C,OAA9C,CAAsD,2BAAtD;AACD,GAJC,CAAF;AAKD,CApBO,CAAR","sourcesContent":["import React from 'react';\nimport { mount, ReactWrapper, configure } from 'enzyme';\nimport { IssueItemProps } from '../IssueItem';\nimport Adapter from '@wojtekmaj/enzyme-adapter-react-17';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { repoIssuesMock } from '../../__mocks__/repo';\nimport theme from '../../theme';\nimport Title, { renderText } from '../Title';\nimport ParsedText from 'react-native-parsed-text';\n\nconfigure({ adapter: new Adapter() });\ntype ComponentWrapper = ReactWrapper<IssueItemProps, void, React.Component>;\n\nlet component: ComponentWrapper;\n\ndescribe('Title', () => {\n  const renderComponent = (title: string): ComponentWrapper =>\n    mount(\n      <PaperProvider theme={theme}>\n        <Title>{title}</Title>\n      </PaperProvider>,\n    );\n  beforeEach(() => {\n    component = renderComponent(repoIssuesMock.data[0].title);\n  });\n\n  it('should render title correctly', () => {\n    expect(component.find(ParsedText).text()).toEqual(repoIssuesMock.data[0].title);\n  });\n\n  it('should return plain text if surrounding with quotes', () => {\n    expect(renderText('`this is highlighted`')).toEqual('this is highlighted');\n    expect(renderText('`this is not highlighted')).toEqual('`this is not a highlighted');\n    expect(renderText('this is not highlighted')).toEqual('this is not a highlighted');\n  });\n});\n"]}