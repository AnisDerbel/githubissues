{"version":3,"sources":["interceptors.spec.ts"],"names":["mockOnStartCheckMe","jest","fn","describe","sumMock","beforeEach","sum","it","res","response","status","rejectedRes","axios","interceptors","handlers","rejected","expect","rejects","toMatchObject"],"mappings":";;AACA;;AACA;;AACA;;AAGA,IAAMA,kBAAkB,GAAGC,IAAI,CAACC,EAAL,EAA3B;AAEAC,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BA,EAAAA,QAAQ,CAAC,6BAAD,EAAgC,YAAM;AAC5C,QAAIC,OAAJ;AACAC,IAAAA,UAAU,CAAC,YAAM;AAEfD,MAAAA,OAAO,GAAGH,IAAI,CAACC,EAAL,CAAQI,iBAAR,CAAV;AAGD,KALS,CAAV;AAMA,oCAAa,iCAAb;AAEAC,IAAAA,EAAE,CAAC,yDAAD,EAA4D,YAAM;AAClE,UAAMC,GAAG,GAAG;AACVC,QAAAA,QAAQ,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT;AADA,OAAZ;;AAGA,UAAMC,WAAW,GAAGC,eAAMC,YAAN,CAAmBJ,QAAnB,CAA4BK,QAA5B,CAAqC,CAArC,EAAwCC,QAAxC,CAAiDP,GAAjD,CAApB;;AAKAQ,MAAAA,MAAM,CAACL,WAAD,CAAN,CAAoBM,OAApB,CAA4BC,aAA5B,CAA0CV,GAA1C;AAUD,KAnBC,CAAF;AAgCD,GA1CO,CAAR;AA2CD,CA5CO,CAAR","sourcesContent":["import {showMessage} from 'react-native-flash-message';\nimport 'jest';\nimport axios, {createAxiosInstance} from '../../axios';\nimport {interceptors, sum} from '../interceptors';\nimport {mount} from 'enzyme';\nimport {Text} from 'react-native-paper/lib/typescript/components/Avatar/Avatar';\nconst mockOnStartCheckMe = jest.fn();\n\ndescribe('Interceptors', () => {\n  describe('NotFoundResponseInterceptor', () => {\n    let sumMock: jest.Mock;\n    beforeEach(() => {\n      // (showMessage as jest.Mock).mockReset();\n      sumMock = jest.fn(sum);\n      // mockFn.mockReset();\n      // jest.useFakeTimers();\n    });\n    interceptors(createAxiosInstance());\n\n    it('should throw error if response status is other then 403', () => {\n      const res = {\n        response: {status: 404},\n      };\n      const rejectedRes = axios.interceptors.response.handlers[0].rejected(res);\n\n      // 'Not found',\n      //     'Organization and/or repository not found!',\n\n      expect(rejectedRes).rejects.toMatchObject(res);\n      // jest.useFakeTimers();\n      // sumMock();\n      //  expect(showMessage).toBeCalled();\n      // interceptor.showErrorAlert = sendNotificationMock;\n\n      // expect(showMessage).toHaveBeenCalledWith({\n      //   message: 'Organization and/or repository not found!',\n      //   type: 'danger',\n      // });\n    });\n\n    // it('it should redirect to login page if response status is 403', () => {\n    //   // global is `window` in jest\n    //   global.location.replace = jest.fn();\n\n    //   const rejectedRes = axios.interceptors.response.handlers[0].rejected({\n    //     response: {status: 403},\n    //   });\n\n    //   expect(global.location.replace).toBeCalledWith('/login');\n    //   expect(rejectedRes).toBeUndefined();\n    // });\n  });\n});\n"]}