f8731c6e364320615f994a26d5453833
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

require("jest");

var _axios = _interopRequireWildcard(require("../../axios"));

var _interceptors = require("../interceptors");

var mockOnStartCheckMe = jest.fn();
describe('Interceptors', function () {
  describe('NotFoundResponseInterceptor', function () {
    var sumMock;
    beforeEach(function () {
      sumMock = jest.fn(_interceptors.sum);
    });
    (0, _interceptors.interceptors)((0, _axios.createAxiosInstance)());
    it('should throw error if response status is other then 403', function () {
      var res = {
        response: {
          status: 404
        }
      };

      var rejectedRes = _axios.default.interceptors.response.handlers[0].rejected(res);

      expect(rejectedRes).rejects.toMatchObject(res);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVyY2VwdG9ycy5zcGVjLnRzIl0sIm5hbWVzIjpbIm1vY2tPblN0YXJ0Q2hlY2tNZSIsImplc3QiLCJmbiIsImRlc2NyaWJlIiwic3VtTW9jayIsImJlZm9yZUVhY2giLCJzdW0iLCJpdCIsInJlcyIsInJlc3BvbnNlIiwic3RhdHVzIiwicmVqZWN0ZWRSZXMiLCJheGlvcyIsImludGVyY2VwdG9ycyIsImhhbmRsZXJzIiwicmVqZWN0ZWQiLCJleHBlY3QiLCJyZWplY3RzIiwidG9NYXRjaE9iamVjdCJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQSxJQUFNQSxrQkFBa0IsR0FBR0MsSUFBSSxDQUFDQyxFQUFMLEVBQTNCO0FBRUFDLFFBQVEsQ0FBQyxjQUFELEVBQWlCLFlBQU07QUFDN0JBLEVBQUFBLFFBQVEsQ0FBQyw2QkFBRCxFQUFnQyxZQUFNO0FBQzVDLFFBQUlDLE9BQUo7QUFDQUMsSUFBQUEsVUFBVSxDQUFDLFlBQU07QUFFZkQsTUFBQUEsT0FBTyxHQUFHSCxJQUFJLENBQUNDLEVBQUwsQ0FBUUksaUJBQVIsQ0FBVjtBQUdELEtBTFMsQ0FBVjtBQU1BLG9DQUFhLGlDQUFiO0FBRUFDLElBQUFBLEVBQUUsQ0FBQyx5REFBRCxFQUE0RCxZQUFNO0FBQ2xFLFVBQU1DLEdBQUcsR0FBRztBQUNWQyxRQUFBQSxRQUFRLEVBQUU7QUFBQ0MsVUFBQUEsTUFBTSxFQUFFO0FBQVQ7QUFEQSxPQUFaOztBQUdBLFVBQU1DLFdBQVcsR0FBR0MsZUFBTUMsWUFBTixDQUFtQkosUUFBbkIsQ0FBNEJLLFFBQTVCLENBQXFDLENBQXJDLEVBQXdDQyxRQUF4QyxDQUFpRFAsR0FBakQsQ0FBcEI7O0FBS0FRLE1BQUFBLE1BQU0sQ0FBQ0wsV0FBRCxDQUFOLENBQW9CTSxPQUFwQixDQUE0QkMsYUFBNUIsQ0FBMENWLEdBQTFDO0FBVUQsS0FuQkMsQ0FBRjtBQWdDRCxHQTFDTyxDQUFSO0FBMkNELENBNUNPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3Nob3dNZXNzYWdlfSBmcm9tICdyZWFjdC1uYXRpdmUtZmxhc2gtbWVzc2FnZSc7XG5pbXBvcnQgJ2plc3QnO1xuaW1wb3J0IGF4aW9zLCB7Y3JlYXRlQXhpb3NJbnN0YW5jZX0gZnJvbSAnLi4vLi4vYXhpb3MnO1xuaW1wb3J0IHtpbnRlcmNlcHRvcnMsIHN1bX0gZnJvbSAnLi4vaW50ZXJjZXB0b3JzJztcbmltcG9ydCB7bW91bnR9IGZyb20gJ2VuenltZSc7XG5pbXBvcnQge1RleHR9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlci9saWIvdHlwZXNjcmlwdC9jb21wb25lbnRzL0F2YXRhci9BdmF0YXInO1xuY29uc3QgbW9ja09uU3RhcnRDaGVja01lID0gamVzdC5mbigpO1xuXG5kZXNjcmliZSgnSW50ZXJjZXB0b3JzJywgKCkgPT4ge1xuICBkZXNjcmliZSgnTm90Rm91bmRSZXNwb25zZUludGVyY2VwdG9yJywgKCkgPT4ge1xuICAgIGxldCBzdW1Nb2NrOiBqZXN0Lk1vY2s7XG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgICAvLyAoc2hvd01lc3NhZ2UgYXMgamVzdC5Nb2NrKS5tb2NrUmVzZXQoKTtcbiAgICAgIHN1bU1vY2sgPSBqZXN0LmZuKHN1bSk7XG4gICAgICAvLyBtb2NrRm4ubW9ja1Jlc2V0KCk7XG4gICAgICAvLyBqZXN0LnVzZUZha2VUaW1lcnMoKTtcbiAgICB9KTtcbiAgICBpbnRlcmNlcHRvcnMoY3JlYXRlQXhpb3NJbnN0YW5jZSgpKTtcblxuICAgIGl0KCdzaG91bGQgdGhyb3cgZXJyb3IgaWYgcmVzcG9uc2Ugc3RhdHVzIGlzIG90aGVyIHRoZW4gNDAzJywgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzID0ge1xuICAgICAgICByZXNwb25zZToge3N0YXR1czogNDA0fSxcbiAgICAgIH07XG4gICAgICBjb25zdCByZWplY3RlZFJlcyA9IGF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS5oYW5kbGVyc1swXS5yZWplY3RlZChyZXMpO1xuXG4gICAgICAvLyAnTm90IGZvdW5kJyxcbiAgICAgIC8vICAgICAnT3JnYW5pemF0aW9uIGFuZC9vciByZXBvc2l0b3J5IG5vdCBmb3VuZCEnLFxuXG4gICAgICBleHBlY3QocmVqZWN0ZWRSZXMpLnJlamVjdHMudG9NYXRjaE9iamVjdChyZXMpO1xuICAgICAgLy8gamVzdC51c2VGYWtlVGltZXJzKCk7XG4gICAgICAvLyBzdW1Nb2NrKCk7XG4gICAgICAvLyAgZXhwZWN0KHNob3dNZXNzYWdlKS50b0JlQ2FsbGVkKCk7XG4gICAgICAvLyBpbnRlcmNlcHRvci5zaG93RXJyb3JBbGVydCA9IHNlbmROb3RpZmljYXRpb25Nb2NrO1xuXG4gICAgICAvLyBleHBlY3Qoc2hvd01lc3NhZ2UpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKHtcbiAgICAgIC8vICAgbWVzc2FnZTogJ09yZ2FuaXphdGlvbiBhbmQvb3IgcmVwb3NpdG9yeSBub3QgZm91bmQhJyxcbiAgICAgIC8vICAgdHlwZTogJ2RhbmdlcicsXG4gICAgICAvLyB9KTtcbiAgICB9KTtcblxuICAgIC8vIGl0KCdpdCBzaG91bGQgcmVkaXJlY3QgdG8gbG9naW4gcGFnZSBpZiByZXNwb25zZSBzdGF0dXMgaXMgNDAzJywgKCkgPT4ge1xuICAgIC8vICAgLy8gZ2xvYmFsIGlzIGB3aW5kb3dgIGluIGplc3RcbiAgICAvLyAgIGdsb2JhbC5sb2NhdGlvbi5yZXBsYWNlID0gamVzdC5mbigpO1xuXG4gICAgLy8gICBjb25zdCByZWplY3RlZFJlcyA9IGF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS5oYW5kbGVyc1swXS5yZWplY3RlZCh7XG4gICAgLy8gICAgIHJlc3BvbnNlOiB7c3RhdHVzOiA0MDN9LFxuICAgIC8vICAgfSk7XG5cbiAgICAvLyAgIGV4cGVjdChnbG9iYWwubG9jYXRpb24ucmVwbGFjZSkudG9CZUNhbGxlZFdpdGgoJy9sb2dpbicpO1xuICAgIC8vICAgZXhwZWN0KHJlamVjdGVkUmVzKS50b0JlVW5kZWZpbmVkKCk7XG4gICAgLy8gfSk7XG4gIH0pO1xufSk7XG4iXX0=