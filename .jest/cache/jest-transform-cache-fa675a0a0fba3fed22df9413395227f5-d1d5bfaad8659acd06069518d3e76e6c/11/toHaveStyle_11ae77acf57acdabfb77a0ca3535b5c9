b04fc37765d5796ffd87ce595f39f860
"use strict";function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = void 0;

var _name = _interopRequireDefault(require("../utils/name"));

var _stringify = _interopRequireDefault(require("../utils/stringify"));

var _reduceAssertionObject = _interopRequireDefault(require("../utils/reduceAssertionObject"));

var _html = _interopRequireDefault(require("../utils/html"));

var _single = _interopRequireDefault(require("../utils/single"));

function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}








function flattenStyle(style) {
  if (!style) {
    return undefined;
  }

  if (!Array.isArray(style)) {
    return style;
  }

  return style.reduce(function (computedStyle, currentStyle) {return _objectSpread(_objectSpread({}, computedStyle),
    flattenStyle(currentStyle));},
  undefined);
}

function toHaveStyle(enzymeWrapper, styleKey, styleValue) {
  var style = flattenStyle(enzymeWrapper.prop('style'));
  var wrapperName = (0, _name.default)(enzymeWrapper);

  if (!style) {
    return {
      pass: false,
      message: "Expected <" + wrapperName + "> component to have a style prop but it did not.",
      negatedMessage: "Expected <" + wrapperName + "> component not to have a style prop but it did.",
      contextualInformation: {
        actual: (0, _html.default)(enzymeWrapper) } };


  }




  if (styleKey === undefined && arguments.length === 2 && typeof styleKey !== 'object' && Array.isArray(styleKey) === false) {
    return {
      pass: style.hasOwnProperty(styleKey),
      message: "Expected <" + wrapperName + "> to have any value for the prop \"" + styleKey + "\"",
      negatedMessage: "Expected <" + wrapperName + "> not to receive the prop \"" + styleKey + "\"",
      contextualInformation: {
        actual: "Actual props: " + (0, _stringify.default)(require("@babel/runtime/helpers/defineProperty")({},
        styleKey, style[styleKey])),

        expected: "Expected props: " + (0, _stringify.default)(require("@babel/runtime/helpers/defineProperty")({},
        styleKey, styleValue)) } };



  }

  var results = _reduceAssertionObject.default.call(this, style, styleKey, styleValue);

  var unmatchedKeys = results.unmatchedKeys.join(', ');
  var contextualInformation = {
    actual: "Actual style: " + (0, _stringify.default)(results.actual),
    expected: "Expected style: " + (0, _stringify.default)(results.expected) };


  if (results.missingKeys.length) {
    var missingKeys = results.missingKeys.join(', ');
    return {
      pass: false,
      message: "Expected <" + wrapperName + "> component to have a style keys of \"" + missingKeys + "\" but it did not.",
      negatedMessage: "Expected <" + wrapperName + "> component not to have a style key of \"" + missingKeys + "\" but it did.",
      contextualInformation: {
        actual: (0, _html.default)(enzymeWrapper) } };


  }

  return {
    pass: results.pass,
    message: "Expected <" + wrapperName + "> component style values to match for key \"" + unmatchedKeys + "\", but they didn't",
    negatedMessage: "Expected <" + wrapperName + "> component style values to be different for key \"" + unmatchedKeys + "\", but they weren't",
    contextualInformation: contextualInformation };

}

var _default = (0, _single.default)(toHaveStyle);

exports.default = _default;
module.exports = exports.default;