5ea470e5916b09852d0a241f031ca18d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _name = _interopRequireDefault(require("../utils/name"));

var _single = _interopRequireDefault(require("../utils/single"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function toHaveRef(enzymeWrapper, refName) {
  if (typeof enzymeWrapper.ref !== 'function') {
    throw new Error('EnzymeMatchers::toHaveRef can not be called on a shallow wrapper');
  }

  var node = enzymeWrapper.ref(refName);
  var pass = !!node;
  return {
    pass: pass,
    message: "Expected to find a ref named \"" + refName + "\" on <" + (0, _name.default)(enzymeWrapper) + ">, but didn't.",
    negatedMessage: "Expected not to find a ref named \"" + refName + "\" on <" + (0, _name.default)(enzymeWrapper) + ">, but did.",
    contextualInformation: {}
  };
}

var _default = (0, _single.default)(toHaveRef);

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvSGF2ZVJlZi5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJfbmFtZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3NpbmdsZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJ0b0hhdmVSZWYiLCJlbnp5bWVXcmFwcGVyIiwicmVmTmFtZSIsInJlZiIsIkVycm9yIiwibm9kZSIsInBhc3MiLCJtZXNzYWdlIiwibmVnYXRlZE1lc3NhZ2UiLCJjb250ZXh0dWFsSW5mb3JtYXRpb24iLCJfZGVmYXVsdCIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDM0NDLEVBQUFBLEtBQUssRUFBRTtBQURvQyxDQUE3QztBQUdBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0IsS0FBSyxDQUF2Qjs7QUFFQSxJQUFJQyxLQUFLLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsZUFBRCxDQUFSLENBQWxDOztBQUVBLElBQUlDLE9BQU8sR0FBR0Ysc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxpQkFBRCxDQUFSLENBQXBDOztBQUVBLFNBQVNELHNCQUFULENBQWdDRyxHQUFoQyxFQUFxQztBQUFFLFNBQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QjtBQUFFTCxJQUFBQSxPQUFPLEVBQUVLO0FBQVgsR0FBckM7QUFBd0Q7O0FBUy9GLFNBQVNFLFNBQVQsQ0FBbUJDLGFBQW5CLEVBQWtDQyxPQUFsQyxFQUEyQztBQUN6QyxNQUFJLE9BQU9ELGFBQWEsQ0FBQ0UsR0FBckIsS0FBNkIsVUFBakMsRUFBNkM7QUFDM0MsVUFBTSxJQUFJQyxLQUFKLENBQVUsa0VBQVYsQ0FBTjtBQUNEOztBQUVELE1BQU1DLElBQUksR0FBR0osYUFBYSxDQUFDRSxHQUFkLENBQWtCRCxPQUFsQixDQUFiO0FBQ0EsTUFBTUksSUFBSSxHQUFHLENBQUMsQ0FBQ0QsSUFBZjtBQUNBLFNBQU87QUFDTEMsSUFBQUEsSUFBSSxFQUFKQSxJQURLO0FBRUxDLElBQUFBLE9BQU8sc0NBQW1DTCxPQUFuQyxlQUFtRCxDQUFDLEdBQUdSLEtBQUssQ0FBQ0QsT0FBVixFQUFtQlEsYUFBbkIsQ0FBbkQsbUJBRkY7QUFHTE8sSUFBQUEsY0FBYywwQ0FBdUNOLE9BQXZDLGVBQXVELENBQUMsR0FBR1IsS0FBSyxDQUFDRCxPQUFWLEVBQW1CUSxhQUFuQixDQUF2RCxnQkFIVDtBQUlMUSxJQUFBQSxxQkFBcUIsRUFBRTtBQUpsQixHQUFQO0FBTUQ7O0FBRUQsSUFBSUMsUUFBUSxHQUFHLENBQUMsR0FBR2IsT0FBTyxDQUFDSixPQUFaLEVBQXFCTyxTQUFyQixDQUFmOztBQUVBVCxPQUFPLENBQUNFLE9BQVIsR0FBa0JpQixRQUFsQjtBQUNBQyxNQUFNLENBQUNwQixPQUFQLEdBQWlCQSxPQUFPLENBQUNFLE9BQXpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfbmFtZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3V0aWxzL25hbWVcIikpO1xuXG52YXIgX3NpbmdsZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3V0aWxzL3NpbmdsZVwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8qKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlULXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuICpcbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgdG9IYXZlUmVmQXNzZXJ0aW9uXG4gKiBcbiAqL1xuZnVuY3Rpb24gdG9IYXZlUmVmKGVuenltZVdyYXBwZXIsIHJlZk5hbWUpIHtcbiAgaWYgKHR5cGVvZiBlbnp5bWVXcmFwcGVyLnJlZiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignRW56eW1lTWF0Y2hlcnM6OnRvSGF2ZVJlZiBjYW4gbm90IGJlIGNhbGxlZCBvbiBhIHNoYWxsb3cgd3JhcHBlcicpO1xuICB9XG5cbiAgY29uc3Qgbm9kZSA9IGVuenltZVdyYXBwZXIucmVmKHJlZk5hbWUpO1xuICBjb25zdCBwYXNzID0gISFub2RlO1xuICByZXR1cm4ge1xuICAgIHBhc3MsXG4gICAgbWVzc2FnZTogYEV4cGVjdGVkIHRvIGZpbmQgYSByZWYgbmFtZWQgXCIke3JlZk5hbWV9XCIgb24gPCR7KDAsIF9uYW1lLmRlZmF1bHQpKGVuenltZVdyYXBwZXIpfT4sIGJ1dCBkaWRuJ3QuYCxcbiAgICBuZWdhdGVkTWVzc2FnZTogYEV4cGVjdGVkIG5vdCB0byBmaW5kIGEgcmVmIG5hbWVkIFwiJHtyZWZOYW1lfVwiIG9uIDwkeygwLCBfbmFtZS5kZWZhdWx0KShlbnp5bWVXcmFwcGVyKX0+LCBidXQgZGlkLmAsXG4gICAgY29udGV4dHVhbEluZm9ybWF0aW9uOiB7fVxuICB9O1xufVxuXG52YXIgX2RlZmF1bHQgPSAoMCwgX3NpbmdsZS5kZWZhdWx0KSh0b0hhdmVSZWYpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdfQ==