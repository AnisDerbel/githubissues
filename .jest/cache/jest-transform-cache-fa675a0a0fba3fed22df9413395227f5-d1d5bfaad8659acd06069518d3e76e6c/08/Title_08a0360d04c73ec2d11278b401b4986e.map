{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/components/Title.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKQ;;;;;;;;;;;;;;;;AALR,IAAA,OAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,IAAA,oBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,oBAAA,CAAA,CAAA;AACA,IAAA,0BAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA,CAAA;;;;;AAEA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAA,cAAA,EAA2B;AAAA;AAAA;AAC5C,MAAM,OAAO;AAAA;AAAA,4BAAb,WAAa,CAAb;AACA,MAAM,KAAK;AAAA;AAAA,4BAAG,cAAc,CAAd,KAAA,CAAd,OAAc,CAAH,CAAX;;AAF4C;AAAA;AAG5C,SAAO;AAAA;AAAA,iCAAA,KAAK;AAAA;AAAA,iCAAI,KAAK,CAAL,MAAA,GAAT,CAAK,CAAL;AAAA;AAAA,iCAA4B,KAAK,CAAjC,CAAiC,CAAjC;AAAA;AAAA,iCAAP,cAAO;AAAP;AAHF,CAAA;;;;;AAMA,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAA,IAAA,EAAmC;AAAA;AAAA;AAAA,MAAjC,QAAiC;AAAA;AAAA,6BAAA,IAAA,CAAjC,QAAiC,CAAA;AAC/C,MAAM,KAAK;AAAA;AAAA,6BAAG,oBAAA,CAAd,QAAc,EAAH,CAAX;;AAD+C;AAAA;AAE/C,SACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,0BAAA,CAAD,OAAA,EAAW;AACT,IAAA,KAAK,EAAE,CACL,KAAK,CAAL,QAAA,CADK,IAAA,EAEL;AAAC,MAAA,KAAK,EAAE,KAAK,CAAL,MAAA,CAAR,OAAA;AAA8B,MAAA,WAAW,EAAE,KAAK,CAAL,OAAA,CAAc;AAAzD,KAFK,CADE;AAKT,IAAA,KAAK,EAAE,CACL;AACE,MAAA,OAAO,EADT,WAAA;AAEE,MAAA,KAAK,EAAE;AACL,QAAA,eAAe,EAAE,KAAK,CAAL,MAAA,CADZ,MAAA;AAEL,QAAA,KAAK,EAAE,KAAK,CAAL,MAAA,CAAa;AAFf,OAFT;AAME,MAAA,UAAU,EAAV;AANF,KADK;AALE,GAAX,EADF,QACE,CADF;AAFF,CAAA;;;;AAuBA,OAAA,CAAA,OAAA,GAAA,KAAA","sourcesContent":["import React from 'react';\nimport {useTheme} from 'react-native-paper';\nimport ParsedText from 'react-native-parsed-text';\n\nconst renderText = (matchingString: string) => {\n  const pattern = /`([^`]*)`/;\n  const match = matchingString.match(pattern);\n  return match && match.length > 1 ? match[1] : matchingString;\n};\n\nconst Title = ({children}: {children: string}) => {\n  const theme = useTheme();\n  return (\n    <ParsedText\n      style={[\n        theme.variants.body,\n        {color: theme.colors.primary, marginRight: theme.spacing.m},\n      ]}\n      parse={[\n        {\n          pattern: /`([^`]*)`/,\n          style: {\n            backgroundColor: theme.colors.accent,\n            color: theme.colors.badge,\n          },\n          renderText,\n        },\n      ]}>\n      {children}\n    </ParsedText>\n  );\n};\n\nexport default Title;\n"]}