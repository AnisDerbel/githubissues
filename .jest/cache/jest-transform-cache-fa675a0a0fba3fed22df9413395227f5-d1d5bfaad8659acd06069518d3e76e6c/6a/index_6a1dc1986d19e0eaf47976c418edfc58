fc107db99bd01f282728b11027d5720b
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault2(require("@babel/runtime/helpers/extends"));

var _enzymeMatchers = _interopRequireDefault(require("enzyme-matchers"));

var _serializer = _interopRequireDefault(require("enzyme-to-json/serializer"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

if (global.bootstrapEnzymeEnvironment) {
  var _require = require('jest-environment-enzyme/lib/setup'),
      exposeGlobals = _require.exposeGlobals;

  exposeGlobals();
}

expect.addSnapshotSerializer(_serializer.default);
var matchers = {};
Object.keys(_enzymeMatchers.default).forEach(function (matcherKey) {
  var matcher = (0, _defineProperty2.default)({}, matcherKey, function (wrapper) {
    var _enzymeMatchers$defau;

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var result = (_enzymeMatchers$defau = _enzymeMatchers.default[matcherKey]).call.apply(_enzymeMatchers$defau, [this, wrapper].concat(args));

    var _message = this.isNot ? result.negatedMessage : result.message;

    if (result.contextualInformation.expected) {
      _message += "\n" + this.utils.RECEIVED_COLOR(result.contextualInformation.expected);
    }

    if (result.contextualInformation.actual) {
      _message += "\n" + this.utils.EXPECTED_COLOR(result.contextualInformation.actual);
    }

    return (0, _extends2.default)({}, result, {
      message: function message() {
        return _message;
      }
    });
  })[matcherKey];
  matchers[matcherKey] = matcher;
});
expect.extend(matchers);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIl9lbnp5bWVNYXRjaGVycyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3NlcmlhbGl6ZXIiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImdsb2JhbCIsImJvb3RzdHJhcEVuenltZUVudmlyb25tZW50IiwiZXhwb3NlR2xvYmFscyIsImV4cGVjdCIsImFkZFNuYXBzaG90U2VyaWFsaXplciIsIm1hdGNoZXJzIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJtYXRjaGVyS2V5IiwibWF0Y2hlciIsIndyYXBwZXIiLCJhcmdzIiwicmVzdWx0IiwiY2FsbCIsIm1lc3NhZ2UiLCJpc05vdCIsIm5lZ2F0ZWRNZXNzYWdlIiwiY29udGV4dHVhbEluZm9ybWF0aW9uIiwiZXhwZWN0ZWQiLCJ1dGlscyIsIlJFQ0VJVkVEX0NPTE9SIiwiYWN0dWFsIiwiRVhQRUNURURfQ09MT1IiLCJleHRlbmQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQUVBLElBQUlBLGVBQWUsR0FBR0Msc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxpQkFBRCxDQUFSLENBQTVDOztBQUVBLElBQUlDLFdBQVcsR0FBR0Ysc0JBQXNCLENBQUNDLE9BQU8sQ0FBQywyQkFBRCxDQUFSLENBQXhDOztBQUVBLFNBQVNELHNCQUFULENBQWdDRyxHQUFoQyxFQUFxQztBQUFFLFNBQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFYLEdBQXdCRCxHQUF4QixHQUE4QjtBQUFFRSxJQUFBQSxPQUFPLEVBQUVGO0FBQVgsR0FBckM7QUFBd0Q7O0FBVy9GLElBQUlHLE1BQU0sQ0FBQ0MsMEJBQVgsRUFBdUM7QUFBQSxpQkFHakNOLE9BQU8sQ0FBQyxtQ0FBRCxDQUgwQjtBQUFBLE1BRW5DTyxhQUZtQyxZQUVuQ0EsYUFGbUM7O0FBS3JDQSxFQUFBQSxhQUFhO0FBQ2Q7O0FBR0RDLE1BQU0sQ0FBQ0MscUJBQVAsQ0FBNkJSLFdBQVcsQ0FBQ0csT0FBekM7QUFFQSxJQUFNTSxRQUFRLEdBQUcsRUFBakI7QUFDQUMsTUFBTSxDQUFDQyxJQUFQLENBQVlkLGVBQWUsQ0FBQ00sT0FBNUIsRUFBcUNTLE9BQXJDLENBQTZDLFVBQUFDLFVBQVUsRUFBSTtBQUN6RCxNQUFNQyxPQUFPLEdBQUcsa0NBQ2JELFVBRGEsWUFDREUsT0FEQyxFQUNpQjtBQUFBOztBQUFBLHNDQUFOQyxJQUFNO0FBQU5BLE1BQUFBLElBQU07QUFBQTs7QUFDN0IsUUFBTUMsTUFBTSxHQUFHLHlCQUFBcEIsZUFBZSxDQUFDTSxPQUFoQixDQUF3QlUsVUFBeEIsR0FBb0NLLElBQXBDLCtCQUF5QyxJQUF6QyxFQUErQ0gsT0FBL0MsU0FBMkRDLElBQTNELEVBQWY7O0FBRUEsUUFBSUcsUUFBTyxHQUFHLEtBQUtDLEtBQUwsR0FBYUgsTUFBTSxDQUFDSSxjQUFwQixHQUFxQ0osTUFBTSxDQUFDRSxPQUExRDs7QUFFQSxRQUFJRixNQUFNLENBQUNLLHFCQUFQLENBQTZCQyxRQUFqQyxFQUEyQztBQUN6Q0osTUFBQUEsUUFBTyxXQUFTLEtBQUtLLEtBQUwsQ0FBV0MsY0FBWCxDQUEwQlIsTUFBTSxDQUFDSyxxQkFBUCxDQUE2QkMsUUFBdkQsQ0FBaEI7QUFDRDs7QUFFRCxRQUFJTixNQUFNLENBQUNLLHFCQUFQLENBQTZCSSxNQUFqQyxFQUF5QztBQUN2Q1AsTUFBQUEsUUFBTyxXQUFTLEtBQUtLLEtBQUwsQ0FBV0csY0FBWCxDQUEwQlYsTUFBTSxDQUFDSyxxQkFBUCxDQUE2QkksTUFBdkQsQ0FBaEI7QUFDRDs7QUFFRCxzQ0FBWVQsTUFBWjtBQUNFRSxNQUFBQSxPQUFPLEVBQUU7QUFBQSxlQUFNQSxRQUFOO0FBQUE7QUFEWDtBQUdELEdBakJhLEVBbUJkTixVQW5CYyxDQUFoQjtBQW9CQUosRUFBQUEsUUFBUSxDQUFDSSxVQUFELENBQVIsR0FBdUJDLE9BQXZCO0FBQ0QsQ0F0QkQ7QUF1QkFQLE1BQU0sQ0FBQ3FCLE1BQVAsQ0FBY25CLFFBQWQiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9lbnp5bWVNYXRjaGVycyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImVuenltZS1tYXRjaGVyc1wiKSk7XG5cbnZhciBfc2VyaWFsaXplciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImVuenltZS10by1qc29uL3NlcmlhbGl6ZXJcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBnbG9iYWwtcmVxdWlyZSAqL1xuXG4vKipcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiAqXG4gKlxuICogQHByb3ZpZGVzTW9kdWxlIHNldHVwRmlsZXNBZnRlckVudlxuICogXG4gKi9cbmlmIChnbG9iYWwuYm9vdHN0cmFwRW56eW1lRW52aXJvbm1lbnQpIHtcbiAgY29uc3Qge1xuICAgIGV4cG9zZUdsb2JhbHNcbiAgfSA9IHJlcXVpcmUoJ2plc3QtZW52aXJvbm1lbnQtZW56eW1lL2xpYi9zZXR1cCcpO1xuXG4gIGV4cG9zZUdsb2JhbHMoKTtcbn0gLy8gYWRkIHRoZSBzbmFwc2hvdCBzZXJpYWxpemVyIGZvciBFbnp5bWUgd3JhcHBlcnNcblxuXG5leHBlY3QuYWRkU25hcHNob3RTZXJpYWxpemVyKF9zZXJpYWxpemVyLmRlZmF1bHQpOyAvLyBhZGQgbWV0aG9kcyFcblxuY29uc3QgbWF0Y2hlcnMgPSB7fTtcbk9iamVjdC5rZXlzKF9lbnp5bWVNYXRjaGVycy5kZWZhdWx0KS5mb3JFYWNoKG1hdGNoZXJLZXkgPT4ge1xuICBjb25zdCBtYXRjaGVyID0ge1xuICAgIFttYXRjaGVyS2V5XSh3cmFwcGVyLCAuLi5hcmdzKSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBfZW56eW1lTWF0Y2hlcnMuZGVmYXVsdFttYXRjaGVyS2V5XS5jYWxsKHRoaXMsIHdyYXBwZXIsIC4uLmFyZ3MpO1xuXG4gICAgICBsZXQgbWVzc2FnZSA9IHRoaXMuaXNOb3QgPyByZXN1bHQubmVnYXRlZE1lc3NhZ2UgOiByZXN1bHQubWVzc2FnZTtcblxuICAgICAgaWYgKHJlc3VsdC5jb250ZXh0dWFsSW5mb3JtYXRpb24uZXhwZWN0ZWQpIHtcbiAgICAgICAgbWVzc2FnZSArPSBgXFxuJHt0aGlzLnV0aWxzLlJFQ0VJVkVEX0NPTE9SKHJlc3VsdC5jb250ZXh0dWFsSW5mb3JtYXRpb24uZXhwZWN0ZWQpfWA7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZXN1bHQuY29udGV4dHVhbEluZm9ybWF0aW9uLmFjdHVhbCkge1xuICAgICAgICBtZXNzYWdlICs9IGBcXG4ke3RoaXMudXRpbHMuRVhQRUNURURfQ09MT1IocmVzdWx0LmNvbnRleHR1YWxJbmZvcm1hdGlvbi5hY3R1YWwpfWA7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7IC4uLnJlc3VsdCxcbiAgICAgICAgbWVzc2FnZTogKCkgPT4gbWVzc2FnZVxuICAgICAgfTtcbiAgICB9XG5cbiAgfVttYXRjaGVyS2V5XTtcbiAgbWF0Y2hlcnNbbWF0Y2hlcktleV0gPSBtYXRjaGVyO1xufSk7XG5leHBlY3QuZXh0ZW5kKG1hdGNoZXJzKTsiXX0=