{"version":3,"sources":["toExist.js"],"names":["Object","defineProperty","exports","value","default","toExist","_html","_interopRequireDefault","require","_name","obj","__esModule","enzymeWrapper","pass","exists","contextualInformation","getElements","length","actual","nodeName","message","negatedMessage","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,OAAlB;;AAEA,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAlC;;AAEA,IAAIC,KAAK,GAAGF,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAlC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAS/F,SAASL,OAAT,CAAiBO,aAAjB,EAAgC;AAC9B,MAAMC,IAAI,GAAGD,aAAa,CAACE,MAAd,EAAb;AACA,MAAMC,qBAAqB,GAAG,EAA9B;;AAEA,MAAIH,aAAa,CAACI,WAAd,GAA4BC,MAAhC,EAAwC;AACtCF,IAAAA,qBAAqB,CAACG,MAAtB,qBAA+C,CAAC,GAAGZ,KAAK,CAACF,OAAV,EAAmBQ,aAAnB,CAA/C;AACD;;AAED,MAAMO,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAACL,OAAV,EAAmBQ,aAAnB,CAAjB;AACA,SAAO;AACLC,IAAAA,IAAI,EAAJA,IADK;AAELO,IAAAA,OAAO,kBAAeD,QAAf,iBAFF;AAGLE,IAAAA,cAAc,kBAAeF,QAAf,uCAAwDP,aAAa,CAACI,WAAd,GAA4BC,MAApF,YAHT;AAILF,IAAAA,qBAAqB,EAArBA;AAJK,GAAP;AAMD;;AAEDO,MAAM,CAACpB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toExist;\n\nvar _html = _interopRequireDefault(require(\"../utils/html\"));\n\nvar _name = _interopRequireDefault(require(\"../utils/name\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This source code is licensed under the MIT-style license found in the\n * LICENSE file in the root directory of this source tree. *\n *\n * @providesModule toBePresentAssertion\n * \n */\nfunction toExist(enzymeWrapper) {\n  const pass = enzymeWrapper.exists();\n  const contextualInformation = {};\n\n  if (enzymeWrapper.getElements().length) {\n    contextualInformation.actual = `Found Nodes: ${(0, _html.default)(enzymeWrapper)}`;\n  }\n\n  const nodeName = (0, _name.default)(enzymeWrapper);\n  return {\n    pass,\n    message: `Expected \"${nodeName}\" to exist.`,\n    negatedMessage: `Expected \"${nodeName}\" not to exist. Instead found ${enzymeWrapper.getElements().length} nodes.`,\n    contextualInformation\n  };\n}\n\nmodule.exports = exports.default;"]}