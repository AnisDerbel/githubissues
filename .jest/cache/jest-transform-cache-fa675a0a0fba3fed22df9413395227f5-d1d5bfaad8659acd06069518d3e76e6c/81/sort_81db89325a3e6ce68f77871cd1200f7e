fc8111b8d2db34de5fa4d0f2a49ec33a
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var procedure_1 = require("./procedure");

var attributes = {
  exists: 10,
  equals: 8,
  not: 7,
  start: 6,
  end: 6,
  any: 5,
  hyphen: 4,
  element: 4
};

function sortByProcedure(arr) {
  var procs = arr.map(getProcedure);

  for (var i = 1; i < arr.length; i++) {
    var procNew = procs[i];
    if (procNew < 0) continue;

    for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {
      var token = arr[j + 1];
      arr[j + 1] = arr[j];
      arr[j] = token;
      procs[j + 1] = procs[j];
      procs[j] = procNew;
    }
  }
}

exports.default = sortByProcedure;

function getProcedure(token) {
  var proc = procedure_1.procedure[token.type];

  if (token.type === "attribute") {
    proc = attributes[token.action];

    if (proc === attributes.equals && token.name === "id") {
      proc = 9;
    }

    if (token.ignoreCase) {
      proc >>= 1;
    }
  } else if (token.type === "pseudo") {
    if (!token.data) {
      proc = 3;
    } else if (token.name === "has" || token.name === "contains") {
      proc = 0;
    } else if (Array.isArray(token.data)) {
      proc = 0;

      for (var i = 0; i < token.data.length; i++) {
        if (token.data[i].length !== 1) continue;
        var cur = getProcedure(token.data[i][0]);

        if (cur === 0) {
          proc = 0;
          break;
        }

        if (cur > proc) proc = cur;
      }

      if (token.data.length > 1 && proc > 0) proc -= 1;
    } else {
      proc = 1;
    }
  }

  return proc;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvcnQuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJwcm9jZWR1cmVfMSIsInJlcXVpcmUiLCJhdHRyaWJ1dGVzIiwiZXhpc3RzIiwiZXF1YWxzIiwibm90Iiwic3RhcnQiLCJlbmQiLCJhbnkiLCJoeXBoZW4iLCJlbGVtZW50Iiwic29ydEJ5UHJvY2VkdXJlIiwiYXJyIiwicHJvY3MiLCJtYXAiLCJnZXRQcm9jZWR1cmUiLCJpIiwibGVuZ3RoIiwicHJvY05ldyIsImoiLCJ0b2tlbiIsImRlZmF1bHQiLCJwcm9jIiwicHJvY2VkdXJlIiwidHlwZSIsImFjdGlvbiIsIm5hbWUiLCJpZ25vcmVDYXNlIiwiZGF0YSIsIkFycmF5IiwiaXNBcnJheSIsImN1ciJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFBRUMsRUFBQUEsS0FBSyxFQUFFO0FBQVQsQ0FBN0M7O0FBQ0EsSUFBSUMsV0FBVyxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFDQSxJQUFJQyxVQUFVLEdBQUc7QUFDYkMsRUFBQUEsTUFBTSxFQUFFLEVBREs7QUFFYkMsRUFBQUEsTUFBTSxFQUFFLENBRks7QUFHYkMsRUFBQUEsR0FBRyxFQUFFLENBSFE7QUFJYkMsRUFBQUEsS0FBSyxFQUFFLENBSk07QUFLYkMsRUFBQUEsR0FBRyxFQUFFLENBTFE7QUFNYkMsRUFBQUEsR0FBRyxFQUFFLENBTlE7QUFPYkMsRUFBQUEsTUFBTSxFQUFFLENBUEs7QUFRYkMsRUFBQUEsT0FBTyxFQUFFO0FBUkksQ0FBakI7O0FBaUJBLFNBQVNDLGVBQVQsQ0FBeUJDLEdBQXpCLEVBQThCO0FBQzFCLE1BQUlDLEtBQUssR0FBR0QsR0FBRyxDQUFDRSxHQUFKLENBQVFDLFlBQVIsQ0FBWjs7QUFDQSxPQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFD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QkE7QUFDREEsTUFBQUEsSUFBSSxHQUFHLENBQVA7QUFDSDtBQUNKOztBQUNELFNBQU9BLElBQVA7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHByb2NlZHVyZV8xID0gcmVxdWlyZShcIi4vcHJvY2VkdXJlXCIpO1xudmFyIGF0dHJpYnV0ZXMgPSB7XG4gICAgZXhpc3RzOiAxMCxcbiAgICBlcXVhbHM6IDgsXG4gICAgbm90OiA3LFxuICAgIHN0YXJ0OiA2LFxuICAgIGVuZDogNixcbiAgICBhbnk6IDUsXG4gICAgaHlwaGVuOiA0LFxuICAgIGVsZW1lbnQ6IDQsXG59O1xuLyoqXG4gKiBTb3J0IHRoZSBwYXJ0cyBvZiB0aGUgcGFzc2VkIHNlbGVjdG9yLFxuICogYXMgdGhlcmUgaXMgcG90ZW50aWFsIGZvciBvcHRpbWl6YXRpb25cbiAqIChzb21lIHR5cGVzIG9mIHNlbGVjdG9ycyBhcmUgZmFzdGVyIHRoYW4gb3RoZXJzKVxuICpcbiAqIEBwYXJhbSBhcnIgU2VsZWN0b3IgdG8gc29ydFxuICovXG5mdW5jdGlvbiBzb3J0QnlQcm9jZWR1cmUoYXJyKSB7XG4gICAgdmFyIHByb2NzID0gYXJyLm1hcChnZXRQcm9jZWR1cmUpO1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBwcm9jTmV3ID0gcHJvY3NbaV07XG4gICAgICAgIGlmIChwcm9jTmV3IDwgMClcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBmb3IgKHZhciBqID0gaSAtIDE7IGogPj0gMCAmJiBwcm9jTmV3IDwgcHJvY3Nbal07IGotLSkge1xuICAgICAgICAgICAgdmFyIHRva2VuID0gYXJyW2ogKyAxXTtcbiAgICAgICAgICAgIGFycltqICsgMV0gPSBhcnJbal07XG4gICAgICAgICAgICBhcnJbal0gPSB0b2tlbjtcbiAgICAgICAgICAgIHByb2NzW2ogKyAxXSA9IHByb2NzW2pdO1xuICAgICAgICAgICAgcHJvY3Nbal0gPSBwcm9jTmV3O1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gc29ydEJ5UHJvY2VkdXJlO1xuZnVuY3Rpb24gZ2V0UHJvY2VkdXJlKHRva2VuKSB7XG4gICAgdmFyIHByb2MgPSBwcm9jZWR1cmVfMS5wcm9jZWR1cmVbdG9rZW4udHlwZV07XG4gICAgaWYgKHRva2VuLnR5cGUgPT09IFwiYXR0cmlidXRlXCIpIHtcbiAgICAgICAgcHJvYyA9IGF0dHJpYnV0ZXNbdG9rZW4uYWN0aW9uXTtcbiAgICAgICAgaWYgKHByb2MgPT09IGF0dHJpYnV0ZXMuZXF1YWxzICYmIHRva2VuLm5hbWUgPT09IFwiaWRcIikge1xuICAgICAgICAgICAgLy8gUHJlZmVyIElEIHNlbGVjdG9ycyAoZWcuICNJRClcbiAgICAgICAgICAgIHByb2MgPSA5O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0b2tlbi5pZ25vcmVDYXNlKSB7XG4gICAgICAgICAgICAvKlxuICAgICAgICAgICAgICogSWdub3JlQ2FzZSBhZGRzIHNvbWUgb3ZlcmhlYWQsIHByZWZlciBcIm5vcm1hbFwiIHRva2VuXG4gICAgICAgICAgICAgKiB0aGlzIGlzIGEgYmluYXJ5IG9wZXJhdGlvbiwgdG8gZW5zdXJlIGl0J3Mgc3RpbGwgYW4gaW50XG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHByb2MgPj49IDE7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAodG9rZW4udHlwZSA9PT0gXCJwc2V1ZG9cIikge1xuICAgICAgICBpZiAoIXRva2VuLmRhdGEpIHtcbiAgICAgICAgICAgIHByb2MgPSAzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRva2VuLm5hbWUgPT09IFwiaGFzXCIgfHwgdG9rZW4ubmFtZSA9PT0gXCJjb250YWluc1wiKSB7XG4gICAgICAgICAgICBwcm9jID0gMDsgLy8gRXhwZW5zaXZlIGluIGFueSBjYXNlXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh0b2tlbi5kYXRhKSkge1xuICAgICAgICAgICAgLy8gXCJtYXRjaGVzXCIgYW5kIFwibm90XCJcbiAgICAgICAgICAgIHByb2MgPSAwO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0b2tlbi5kYXRhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgLy8gVE9ETyBiZXR0ZXIgaGFuZGxpbmcgb2YgY29tcGxleCBzZWxlY3RvcnNcbiAgICAgICAgICAgICAgICBpZiAodG9rZW4uZGF0YVtpXS5sZW5ndGggIT09IDEpXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIHZhciBjdXIgPSBnZXRQcm9jZWR1cmUodG9rZW4uZGF0YVtpXVswXSk7XG4gICAgICAgICAgICAgICAgLy8gQXZvaWQgZXhlY3V0aW5nIDpoYXMgb3IgOmNvbnRhaW5zXG4gICAgICAgICAgICAgICAgaWYgKGN1ciA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBwcm9jID0gMDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjdXIgPiBwcm9jKVxuICAgICAgICAgICAgICAgICAgICBwcm9jID0gY3VyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRva2VuLmRhdGEubGVuZ3RoID4gMSAmJiBwcm9jID4gMClcbiAgICAgICAgICAgICAgICBwcm9jIC09IDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwcm9jID0gMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcHJvYztcbn1cbiJdfQ==