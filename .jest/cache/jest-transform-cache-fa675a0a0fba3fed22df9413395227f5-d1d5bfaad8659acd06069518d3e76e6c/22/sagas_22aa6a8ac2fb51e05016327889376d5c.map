{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/redux/sagas.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA;;wCAGU,oB;yCAQA,Q;;AAVV,IAAM,KAAK,GAAG,CAAC,aAAD,CAAd;;AAEA,SAAU,oBAAV,CAA+B,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAM,mBAAK,EAAL,EAAS;AAAC,YAAA,SAAS,EAAE;AAAZ,WAAT,CAAN;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAII,UAAA,OAAO,CAAC,GAAR,CAAY,eAAZ;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAU,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAM,kBAAI,KAAK,CAAC,GAAN,CAAU,UAAA,IAAI;AAAA,mBAAI,mBAAK,oBAAL,EAA2B,IAA3B,CAAJ;AAAA,WAAd,CAAJ,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;eAIe,Q","sourcesContent":["import {all, call, fork} from 'redux-saga/effects';\nimport repo from './repo/saga';\nconst sagas = [repo];\n\nfunction* wrapForErrorHandling(fn: (...args: any[]) => void) {\n  try {\n    yield call(fn, {restarted: false});\n  } catch (e) {\n    console.log('app crashed: ', e);\n  }\n}\n\nfunction* rootSaga() {\n  yield all(sagas.map(saga => fork(wrapForErrorHandling, saga)));\n}\n\nexport default rootSaga;\n"]}