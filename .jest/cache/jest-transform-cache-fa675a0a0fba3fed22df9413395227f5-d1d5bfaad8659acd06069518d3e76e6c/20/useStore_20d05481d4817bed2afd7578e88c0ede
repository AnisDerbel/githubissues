dcca0e397af14f235df0fa3df2b59f00
"use strict";

exports.__esModule = true;
exports.createStoreHook = createStoreHook;
exports.useStore = void 0;

var _react = require("react");

var _Context = require("../components/Context");

var _useReduxContext2 = require("./useReduxContext");

function createStoreHook(context) {
  if (context === void 0) {
    context = _Context.ReactReduxContext;
  }

  var useReduxContext = context === _Context.ReactReduxContext ? _useReduxContext2.useReduxContext : function () {
    return (0, _react.useContext)(context);
  };
  return function useStore() {
    var _useReduxContext = useReduxContext(),
        store = _useReduxContext.store;

    return store;
  };
}

var useStore = createStoreHook();
exports.useStore = useStore;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZVN0b3JlLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiY3JlYXRlU3RvcmVIb29rIiwidXNlU3RvcmUiLCJfcmVhY3QiLCJyZXF1aXJlIiwiX0NvbnRleHQiLCJfdXNlUmVkdXhDb250ZXh0MiIsImNvbnRleHQiLCJSZWFjdFJlZHV4Q29udGV4dCIsInVzZVJlZHV4Q29udGV4dCIsInVzZUNvbnRleHQiLCJfdXNlUmVkdXhDb250ZXh0Iiwic3RvcmUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7QUFDQUQsT0FBTyxDQUFDRSxlQUFSLEdBQTBCQSxlQUExQjtBQUNBRixPQUFPLENBQUNHLFFBQVIsR0FBbUIsS0FBSyxDQUF4Qjs7QUFFQSxJQUFJQyxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXBCOztBQUVBLElBQUlDLFFBQVEsR0FBR0QsT0FBTyxDQUFDLHVCQUFELENBQXRCOztBQUVBLElBQUlFLGlCQUFpQixHQUFHRixPQUFPLENBQUMsbUJBQUQsQ0FBL0I7O0FBUUEsU0FBU0gsZUFBVCxDQUF5Qk0sT0FBekIsRUFBa0M7QUFDaEMsTUFBSUEsT0FBTyxLQUFLLEtBQUssQ0FBckIsRUFBd0I7QUFDdEJBLElBQUFBLE9BQU8sR0FBR0YsUUFBUSxDQUFDRyxpQkFBbkI7QUFDRDs7QUFFRCxNQUFJQyxlQUFlLEdBQUdGLE9BQU8sS0FBS0YsUUFBUSxDQUFDRyxpQkFBckIsR0FBeUNGLGlCQUFpQixDQUFDRyxlQUEzRCxHQUE2RSxZQUFZO0FBQzdHLFdBQU8sQ0FBQyxHQUFHTixNQUFNLENBQUNPLFVBQVgsRUFBdUJILE9BQXZCLENBQVA7QUFDRCxHQUZEO0FBR0EsU0FBTyxTQUFTTCxRQUFULEdBQW9CO0FBQ3pCLFFBQUlTLGdCQUFnQixHQUFHRixlQUFlLEVBQXRDO0FBQUEsUUFDSUcsS0FBSyxHQUFHRCxnQkFBZ0IsQ0FBQ0MsS0FEN0I7O0FBR0EsV0FBT0EsS0FBUDtBQUNELEdBTEQ7QUFNRDs7QUFrQkQsSUFBSVYsUUFBUSxHQUFnQkQsZUFBZSxFQUEzQztBQUNBRixPQUFPLENBQUNHLFFBQVIsR0FBbUJBLFFBQW5CIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmNyZWF0ZVN0b3JlSG9vayA9IGNyZWF0ZVN0b3JlSG9vaztcbmV4cG9ydHMudXNlU3RvcmUgPSB2b2lkIDA7XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKFwicmVhY3RcIik7XG5cbnZhciBfQ29udGV4dCA9IHJlcXVpcmUoXCIuLi9jb21wb25lbnRzL0NvbnRleHRcIik7XG5cbnZhciBfdXNlUmVkdXhDb250ZXh0MiA9IHJlcXVpcmUoXCIuL3VzZVJlZHV4Q29udGV4dFwiKTtcblxuLyoqXHJcbiAqIEhvb2sgZmFjdG9yeSwgd2hpY2ggY3JlYXRlcyBhIGB1c2VTdG9yZWAgaG9vayBib3VuZCB0byBhIGdpdmVuIGNvbnRleHQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7UmVhY3QuQ29udGV4dH0gW2NvbnRleHQ9UmVhY3RSZWR1eENvbnRleHRdIENvbnRleHQgcGFzc2VkIHRvIHlvdXIgYDxQcm92aWRlcj5gLlxyXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgYHVzZVN0b3JlYCBob29rIGJvdW5kIHRvIHRoZSBzcGVjaWZpZWQgY29udGV4dC5cclxuICovXG5mdW5jdGlvbiBjcmVhdGVTdG9yZUhvb2soY29udGV4dCkge1xuICBpZiAoY29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgY29udGV4dCA9IF9Db250ZXh0LlJlYWN0UmVkdXhDb250ZXh0O1xuICB9XG5cbiAgdmFyIHVzZVJlZHV4Q29udGV4dCA9IGNvbnRleHQgPT09IF9Db250ZXh0LlJlYWN0UmVkdXhDb250ZXh0ID8gX3VzZVJlZHV4Q29udGV4dDIudXNlUmVkdXhDb250ZXh0IDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAoMCwgX3JlYWN0LnVzZUNvbnRleHQpKGNvbnRleHQpO1xuICB9O1xuICByZXR1cm4gZnVuY3Rpb24gdXNlU3RvcmUoKSB7XG4gICAgdmFyIF91c2VSZWR1eENvbnRleHQgPSB1c2VSZWR1eENvbnRleHQoKSxcbiAgICAgICAgc3RvcmUgPSBfdXNlUmVkdXhDb250ZXh0LnN0b3JlO1xuXG4gICAgcmV0dXJuIHN0b3JlO1xuICB9O1xufVxuLyoqXHJcbiAqIEEgaG9vayB0byBhY2Nlc3MgdGhlIHJlZHV4IHN0b3JlLlxyXG4gKlxyXG4gKiBAcmV0dXJucyB7YW55fSB0aGUgcmVkdXggc3RvcmVcclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgRXhhbXBsZUNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCBzdG9yZSA9IHVzZVN0b3JlKClcclxuICogICByZXR1cm4gPGRpdj57c3RvcmUuZ2V0U3RhdGUoKX08L2Rpdj5cclxuICogfVxyXG4gKi9cblxuXG52YXIgdXNlU3RvcmUgPSAvKiNfX1BVUkVfXyovY3JlYXRlU3RvcmVIb29rKCk7XG5leHBvcnRzLnVzZVN0b3JlID0gdXNlU3RvcmU7Il19