{"version":3,"sources":["Labels.tsx"],"names":["Labels","items","theme","styles","wrapper","map","item","backgroundColor","color","borderWidth","id","tag","variants","name","StyleSheet","create","flexDirection","flexWrap","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginRight","borderColor","marginBottom"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,MAAM,GAAG,SAATA,MAAS,OAAoC;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA;AACjD,MAAMC,KAAK,6BAAG,iCAAH,CAAX;AADiD;AAGjD,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACGH,KAAK,CAACI,GAAN,CAAU,UAAAC,IAAI,EAAI;AAAA;AACjB,QAAMC,eAAe,mCAAOD,IAAI,CAACE,KAAZ,CAArB;AACA,QAAMC,WAAW,6BAAGH,IAAI,CAACE,KAAL,KAAe,QAAf,gCAA0B,GAA1B,iCAAgC,CAAhC,CAAH,CAAjB;AAFiB;AAGjB,WACE,6BAAC,iBAAD;AACE,MAAA,GAAG,EAAEF,IAAI,CAACI,EADZ;AAEE,MAAA,KAAK,EAAE,CACL;AACEH,QAAAA,eAAe,EAAfA,eADF;AAEEE,QAAAA,WAAW,EAAXA;AAFF,OADK,EAKLN,MAAM,CAACQ,GALF;AAFT,OASE,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAE,CAACT,KAAK,CAACU,QAAN,CAAeD,GAAhB,EAAqB;AAACH,QAAAA,KAAK,EAAE,qBAASF,IAAI,CAACE,KAAd;AAAR,OAArB;AAAb,OACGF,IAAI,CAACO,IADR,CATF,CADF;AAeD,GAlBA,CADH,CADF;AAuBD,CA1BD;;eA4Beb,M;;AAEf,IAAMG,MAAM,6BAAGW,wBAAWC,MAAX,CAAkB;AAC/BX,EAAAA,OAAO,EAAE;AACPY,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,QAAQ,EAAE,MAFH;AAGPC,IAAAA,SAAS,EAAE;AAHJ,GADsB;AAM/BP,EAAAA,GAAG,EAAE;AACHQ,IAAAA,YAAY,EAAE,EADX;AAEHC,IAAAA,iBAAiB,EAAE,CAFhB;AAGHC,IAAAA,eAAe,EAAE,CAHd;AAIHC,IAAAA,WAAW,EAAE,CAJV;AAKHC,IAAAA,WAAW,EAAE,SALV;AAMHC,IAAAA,YAAY,EAAE;AANX;AAN0B,CAAlB,CAAH,CAAZ","sourcesContent":["import React from 'react';\nimport {StyleSheet, View, Text} from 'react-native';\nimport {useTheme} from 'react-native-paper';\nimport {getColor} from '../utils/utils';\nimport {Label} from '../redux/repo/reducer';\n\nconst Labels = ({items}: {items: Array<Label>}) => {\n  const theme = useTheme();\n\n  return (\n    <View style={styles.wrapper}>\n      {items.map(item => {\n        const backgroundColor = `#${item.color}`;\n        const borderWidth = item.color === 'ffffff' ? 0.5 : 0;\n        return (\n          <View\n            key={item.id}\n            style={[\n              {\n                backgroundColor,\n                borderWidth,\n              },\n              styles.tag,\n            ]}>\n            <Text style={[theme.variants.tag, {color: getColor(item.color)}]}>\n              {item.name}\n            </Text>\n          </View>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default Labels;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 10,\n  },\n  tag: {\n    borderRadius: 10,\n    paddingHorizontal: 5,\n    paddingVertical: 2,\n    marginRight: 5,\n    borderColor: '#363636',\n    marginBottom: 5,\n  },\n});\n"]}