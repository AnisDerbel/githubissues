fd840354eb5b5f6d3726c0aecdf0b86b
var submittableSelector = 'input,select,textarea,keygen';
var r20 = /%20/g;
var rCRLF = /\r?\n/g;

exports.serialize = function () {
  var arr = this.serializeArray();
  var retArr = arr.map(function (data) {
    return encodeURIComponent(data.name) + '=' + encodeURIComponent(data.value);
  });
  return retArr.join('&').replace(r20, '+');
};

exports.serializeArray = function () {
  var Cheerio = this.constructor;
  return this.map(function () {
    var elem = this;
    var $elem = Cheerio(elem);

    if (elem.name === 'form') {
      return $elem.find(submittableSelector).toArray();
    }

    return $elem.filter(submittableSelector).toArray();
  }).filter('[name!=""]:not(:disabled)' + ':not(:submit, :button, :image, :reset, :file)' + ':matches([checked], :not(:checkbox, :radio))').map(function (i, elem) {
    var $elem = Cheerio(elem);
    var name = $elem.attr('name');
    var value = $elem.val();

    if (value == null) {
      value = '';
    }

    if (Array.isArray(value)) {
      return value.map(function (val) {
        return {
          name: name,
          value: val.replace(rCRLF, '\r\n')
        };
      });
    }

    return {
      name: name,
      value: value.replace(rCRLF, '\r\n')
    };
  }).get();
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm1zLmpzIl0sIm5hbWVzIjpbInN1Ym1pdHRhYmxlU2VsZWN0b3IiLCJyMjAiLCJyQ1JMRiIsImV4cG9ydHMiLCJzZXJpYWxpemUiLCJhcnIiLCJzZXJpYWxpemVBcnJheSIsInJldEFyciIsIm1hcCIsImRhdGEiLCJlbmNvZGVVUklDb21wb25lbnQiLCJuYW1lIiwidmFsdWUiLCJqb2luIiwicmVwbGFjZSIsIkNoZWVyaW8iLCJjb25zdHJ1Y3RvciIsImVsZW0iLCIkZWxlbSIsImZpbmQiLCJ0b0FycmF5IiwiZmlsdGVyIiwiaSIsImF0dHIiLCJ2YWwiLCJBcnJheSIsImlzQXJyYXkiLCJnZXQiXSwibWFwcGluZ3MiOiJBQU1BLElBQUlBLG1CQUFtQixHQUFHLDhCQUExQjtBQUNBLElBQUlDLEdBQUcsR0FBRyxNQUFWO0FBQ0EsSUFBSUMsS0FBSyxHQUFHLFFBQVo7O0FBT0FDLE9BQU8sQ0FBQ0MsU0FBUixHQUFvQixZQUFZO0FBRTlCLE1BQUlDLEdBQUcsR0FBRyxLQUFLQyxjQUFMLEVBQVY7QUFHQSxNQUFJQyxNQUFNLEdBQUdGLEdBQUcsQ0FBQ0csR0FBSixDQUFRLFVBQVVDLElBQVYsRUFBZ0I7QUFDbkMsV0FBT0Msa0JBQWtCLENBQUNELElBQUksQ0FBQ0UsSUFBTixDQUFsQixHQUFnQyxHQUFoQyxHQUFzQ0Qsa0JBQWtCLENBQUNELElBQUksQ0FBQ0csS0FBTixDQUEvRDtBQUNELEdBRlksQ0FBYjtBQUtBLFNBQU9MLE1BQU0sQ0FBQ00sSUFBUCxDQUFZLEdBQVosRUFBaUJDLE9BQWpCLENBQXlCYixHQUF6QixFQUE4QixHQUE5QixDQUFQO0FBQ0QsQ0FYRDs7QUFzQkFFLE9BQU8sQ0FBQ0csY0FBUixHQUF5QixZQUFZO0FBRW5DLE1BQUlTLE9BQU8sR0FBRyxLQUFLQyxXQUFuQjtBQUNBLFNBQU8sS0FBS1IsR0FBTCxDQUFTLFlBQVk7QUFDMUIsUUFBSVMsSUFBSSxHQUFHLElBQVg7QUFDQSxRQUFJQyxLQUFLLEdBQUdILE9BQU8sQ0FBQ0UsSUFBRCxDQUFuQjs7QUFDQSxRQUFJQSxJQUFJLENBQUNOLElBQUwsS0FBYyxNQUFsQixFQUEwQjtBQUN4QixhQUFPTyxLQUFLLENBQUNDLElBQU4sQ0FBV25CLG1CQUFYLEVBQWdDb0IsT0FBaEMsRUFBUDtBQUNEOztBQUNELFdBQU9GLEtBQUssQ0FBQ0csTUFBTixDQUFhckIsbUJBQWIsRUFBa0NvQixPQUFsQyxFQUFQO0FBQ0QsR0FQTSxFQVFKQyxNQVJJLENBVUgsOEJBRUUsK0NBRkYsR0FJRSw4Q0FkQyxFQWlCSmIsR0FqQkksQ0FpQkEsVUFBVWMsQ0FBVixFQUFhTCxJQUFiLEVBQW1CO0FBQ3RCLFFBQUlDLEtBQUssR0FBR0gsT0FBTyxDQUFDRSxJQUFELENBQW5CO0FBQ0EsUUFBSU4sSUFBSSxHQUFHTyxLQUFLLENBQUNLLElBQU4sQ0FBVyxNQUFYLENBQVg7QUFDQSxRQUFJWCxLQUFLLEdBQUdNLEtBQUssQ0FBQ00sR0FBTixFQUFaOztBQUdBLFFBQUlaLEtBQUssSUFBSSxJQUFiLEVBQW1CO0FBQ2pCQSxNQUFBQSxLQUFLLEdBQUcsRUFBUjtBQUNEOztBQUdELFFBQUlhLEtBQUssQ0FBQ0MsT0FBTixDQUFjZCxLQUFkLENBQUosRUFBMEI7QUFDeEIsYUFBT0EsS0FBSyxDQUFDSixHQUFOLENBQVUsVUFBVWdCLEdBQVYsRUFBZTtBQUc5QixlQUFPO0FBQUViLFVBQUFBLElBQUksRUFBRUEsSUFBUjtBQUFjQyxVQUFBQSxLQUFLLEVBQUVZLEdBQUcsQ0FBQ1YsT0FBSixDQUFZWixLQUFaLEVBQW1CLE1BQW5CO0FBQXJCLFNBQVA7QUFDRCxPQUpNLENBQVA7QUFNRDs7QUFDRCxXQUFPO0FBQUVTLE1BQUFBLElBQUksRUFBRUEsSUFBUjtBQUFjQyxNQUFBQSxLQUFLLEVBQUVBLEtBQUssQ0FBQ0UsT0FBTixDQUFjWixLQUFkLEVBQXFCLE1BQXJCO0FBQXJCLEtBQVA7QUFHRCxHQXZDSSxFQXdDSnlCLEdBeENJLEVBQVA7QUF5Q0QsQ0E1Q0QiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUgY2hlZXJpby9mb3Jtc1xuICovXG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L2Jsb2IvMi4xLjMvc3JjL21hbmlwdWxhdGlvbi92YXIvcmNoZWNrYWJsZVR5cGUuanNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L2Jsb2IvMi4xLjMvc3JjL3NlcmlhbGl6ZS5qc1xudmFyIHN1Ym1pdHRhYmxlU2VsZWN0b3IgPSAnaW5wdXQsc2VsZWN0LHRleHRhcmVhLGtleWdlbic7XG52YXIgcjIwID0gLyUyMC9nO1xudmFyIHJDUkxGID0gL1xccj9cXG4vZztcblxuLyoqXG4gKiBFbmNvZGUgYSBzZXQgb2YgZm9ybSBlbGVtZW50cyBhcyBhIHN0cmluZyBmb3Igc3VibWlzc2lvbi5cbiAqXG4gKiBAc2VlIHtAbGluayBodHRwOi8vYXBpLmpxdWVyeS5jb20vc2VyaWFsaXplL31cbiAqL1xuZXhwb3J0cy5zZXJpYWxpemUgPSBmdW5jdGlvbiAoKSB7XG4gIC8vIENvbnZlcnQgZm9ybSBlbGVtZW50cyBpbnRvIG5hbWUvdmFsdWUgb2JqZWN0c1xuICB2YXIgYXJyID0gdGhpcy5zZXJpYWxpemVBcnJheSgpO1xuXG4gIC8vIFNlcmlhbGl6ZSBlYWNoIGVsZW1lbnQgaW50byBhIGtleS92YWx1ZSBzdHJpbmdcbiAgdmFyIHJldEFyciA9IGFyci5tYXAoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KGRhdGEubmFtZSkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQoZGF0YS52YWx1ZSk7XG4gIH0pO1xuXG4gIC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cbiAgcmV0dXJuIHJldEFyci5qb2luKCcmJykucmVwbGFjZShyMjAsICcrJyk7XG59O1xuXG4vKipcbiAqIEVuY29kZSBhIHNldCBvZiBmb3JtIGVsZW1lbnRzIGFzIGFuIGFycmF5IG9mIG5hbWVzIGFuZCB2YWx1ZXMuXG4gKlxuICogQGV4YW1wbGVcbiAqICQoJzxmb3JtPjxpbnB1dCBuYW1lPVwiZm9vXCIgdmFsdWU9XCJiYXJcIiAvPjwvZm9ybT4nKS5zZXJpYWxpemVBcnJheSgpXG4gKiAvLz0+IFsgeyBuYW1lOiAnZm9vJywgdmFsdWU6ICdiYXInIH0gXVxuICpcbiAqIEBzZWUge0BsaW5rIGh0dHA6Ly9hcGkuanF1ZXJ5LmNvbS9zZXJpYWxpemVBcnJheS99XG4gKi9cbmV4cG9ydHMuc2VyaWFsaXplQXJyYXkgPSBmdW5jdGlvbiAoKSB7XG4gIC8vIFJlc29sdmUgYWxsIGZvcm0gZWxlbWVudHMgZnJvbSBlaXRoZXIgZm9ybXMgb3IgY29sbGVjdGlvbnMgb2YgZm9ybSBlbGVtZW50c1xuICB2YXIgQ2hlZXJpbyA9IHRoaXMuY29uc3RydWN0b3I7XG4gIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGVsZW0gPSB0aGlzO1xuICAgIHZhciAkZWxlbSA9IENoZWVyaW8oZWxlbSk7XG4gICAgaWYgKGVsZW0ubmFtZSA9PT0gJ2Zvcm0nKSB7XG4gICAgICByZXR1cm4gJGVsZW0uZmluZChzdWJtaXR0YWJsZVNlbGVjdG9yKS50b0FycmF5KCk7XG4gICAgfVxuICAgIHJldHVybiAkZWxlbS5maWx0ZXIoc3VibWl0dGFibGVTZWxlY3RvcikudG9BcnJheSgpO1xuICB9KVxuICAgIC5maWx0ZXIoXG4gICAgICAvLyBWZXJpZnkgZWxlbWVudHMgaGF2ZSBhIG5hbWUgKGBhdHRyLm5hbWVgKSBhbmQgYXJlIG5vdCBkaXNhYmxlZCAoYDpkaXNhYmxlZGApXG4gICAgICAnW25hbWUhPVwiXCJdOm5vdCg6ZGlzYWJsZWQpJyArXG4gICAgICAgIC8vIGFuZCBjYW5ub3QgYmUgY2xpY2tlZCAoYFt0eXBlPXN1Ym1pdF1gKSBvciBhcmUgdXNlZCBpbiBgeC13d3ctZm9ybS11cmxlbmNvZGVkYCAoYFt0eXBlPWZpbGVdYClcbiAgICAgICAgJzpub3QoOnN1Ym1pdCwgOmJ1dHRvbiwgOmltYWdlLCA6cmVzZXQsIDpmaWxlKScgK1xuICAgICAgICAvLyBhbmQgYXJlIGVpdGhlciBjaGVja2VkL2Rvbid0IGhhdmUgYSBjaGVja2FibGUgc3RhdGVcbiAgICAgICAgJzptYXRjaGVzKFtjaGVja2VkXSwgOm5vdCg6Y2hlY2tib3gsIDpyYWRpbykpJ1xuICAgICAgLy8gQ29udmVydCBlYWNoIG9mIHRoZSBlbGVtZW50cyB0byBpdHMgdmFsdWUocylcbiAgICApXG4gICAgLm1hcChmdW5jdGlvbiAoaSwgZWxlbSkge1xuICAgICAgdmFyICRlbGVtID0gQ2hlZXJpbyhlbGVtKTtcbiAgICAgIHZhciBuYW1lID0gJGVsZW0uYXR0cignbmFtZScpO1xuICAgICAgdmFyIHZhbHVlID0gJGVsZW0udmFsKCk7XG5cbiAgICAgIC8vIElmIHRoZXJlIGlzIG5vIHZhbHVlIHNldCAoZS5nLiBgdW5kZWZpbmVkYCwgYG51bGxgKSwgdGhlbiBkZWZhdWx0IHZhbHVlIHRvIGVtcHR5XG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICB2YWx1ZSA9ICcnO1xuICAgICAgfVxuXG4gICAgICAvLyBJZiB3ZSBoYXZlIGFuIGFycmF5IG9mIHZhbHVlcyAoZS5nLiBgPHNlbGVjdCBtdWx0aXBsZT5gKSwgcmV0dXJuIGFuIGFycmF5IG9mIGtleS92YWx1ZSBwYWlyc1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZS5tYXAoZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICAgIC8vIFdlIHRyaW0gcmVwbGFjZSBhbnkgbGluZSBlbmRpbmdzIChlLmcuIGBcXHJgIG9yIGBcXHJcXG5gIHdpdGggYFxcclxcbmApIHRvIGd1YXJhbnRlZSBjb25zaXN0ZW5jeSBhY3Jvc3MgcGxhdGZvcm1zXG4gICAgICAgICAgLy8gICBUaGVzZSBjYW4gb2NjdXIgaW5zaWRlIG9mIGA8dGV4dGFyZWE+J3NgXG4gICAgICAgICAgcmV0dXJuIHsgbmFtZTogbmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKHJDUkxGLCAnXFxyXFxuJykgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIE90aGVyd2lzZSAoZS5nLiBgPGlucHV0IHR5cGU9XCJ0ZXh0XCI+YCwgcmV0dXJuIG9ubHkgb25lIGtleS92YWx1ZSBwYWlyXG4gICAgICB9XG4gICAgICByZXR1cm4geyBuYW1lOiBuYW1lLCB2YWx1ZTogdmFsdWUucmVwbGFjZShyQ1JMRiwgJ1xcclxcbicpIH07XG5cbiAgICAgIC8vIENvbnZlcnQgb3VyIHJlc3VsdCB0byBhbiBhcnJheVxuICAgIH0pXG4gICAgLmdldCgpO1xufTtcbiJdfQ==