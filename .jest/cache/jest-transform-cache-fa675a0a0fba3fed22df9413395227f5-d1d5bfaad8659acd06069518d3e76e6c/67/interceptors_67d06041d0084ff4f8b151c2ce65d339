0e26a7b4a90cb41f495f438d01e6f112
"use strict";

/* istanbul ignore next */
function cov_1c3r4pj5oc() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/redux/interceptors/interceptors.ts";
  var hash = "71175fec617d865a8f5a401524dde96a2bdafe2e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/redux/interceptors/interceptors.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 5,
          column: 80
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "4": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 12,
          column: 75
        }
      },
      "5": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "6": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "8": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 27,
          column: 7
        }
      },
      "9": {
        start: {
          line: 21,
          column: 10
        },
        end: {
          line: 21,
          column: 258
        }
      },
      "10": {
        start: {
          line: 21,
          column: 133
        },
        end: {
          line: 21,
          column: 206
        }
      },
      "11": {
        start: {
          line: 21,
          column: 211
        },
        end: {
          line: 21,
          column: 258
        }
      },
      "12": {
        start: {
          line: 22,
          column: 10
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "13": {
        start: {
          line: 26,
          column: 10
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "14": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "15": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 15
        }
      },
      "17": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 36,
          column: 16
        }
      },
      "18": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "19": {
        start: {
          line: 42,
          column: 14
        },
        end: {
          line: 42,
          column: 52
        }
      },
      "20": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "22": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 48,
          column: 54
        }
      },
      "23": {
        start: {
          line: 51,
          column: 0
        },
        end: {
          line: 51,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "errorInterceptor",
        decl: {
          start: {
            line: 14,
            column: 32
          },
          end: {
            line: 14,
            column: 48
          }
        },
        loc: {
          start: {
            line: 14,
            column: 56
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "errorInterceptor$",
        decl: {
          start: {
            line: 17,
            column: 45
          },
          end: {
            line: 17,
            column: 62
          }
        },
        loc: {
          start: {
            line: 17,
            column: 73
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "interceptors",
        decl: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 40
          }
        },
        loc: {
          start: {
            line: 32,
            column: 49
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 36
          }
        },
        loc: {
          start: {
            line: 33,
            column: 50
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 33
      },
      "4": {
        name: "showErrorAlert",
        decl: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 23
          }
        },
        loc: {
          start: {
            line: 41,
            column: 40
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 22,
            column: 66
          }
        }, {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 15
          }
        }, {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 26,
            column: 33
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 10
          },
          end: {
            line: 21,
            column: 258
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 10
          },
          end: {
            line: 21,
            column: 258
          }
        }, {
          start: {
            line: 21,
            column: 10
          },
          end: {
            line: 21,
            column: 258
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 91
          },
          end: {
            line: 21,
            column: 97
          }
        }, {
          start: {
            line: 21,
            column: 100
          },
          end: {
            line: 21,
            column: 122
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 58
          }
        }, {
          start: {
            line: 21,
            column: 62
          },
          end: {
            line: 21,
            column: 88
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        }, {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        }],
        line: 44
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/anisderbel/Documents/apcgithubissues/src/redux/interceptors/interceptors.ts"],
      names: [],
      mappings: ";;;;;;;;;;;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,sCAAA,CAAA;;AAEA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAO,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvB,cAAI,oBAAA,KAAK,CAAC,QAAN,oEAAgB,MAAhB,MAA2B,GAA/B,EACE,cAAc,CAAC,WAAD,EAAc,2CAAd,CAAd,CADF,KAEK,cAAc,CAAC,MAAD,EAAS,sBAAT,CAAd;AAHkB,2CAKhB,OAAO,CAAC,MAAR,CAAe,KAAf,CALgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAQO,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,MAAD,EAA0B;AACpD,EAAA,MAAM,CAAC,YAAP,CAAoB,QAApB,CAA6B,GAA7B,CAAiC,UAAC,GAAD;AAAA,WAAS,GAAT;AAAA,GAAjC,EAA+C,gBAA/C;AAEA,SAAO,MAAP;AACD,CAJM;;AAAM,OAAA,CAAA,YAAA,GAAY,YAAZ;;AAMb,SAAgB,cAAhB,CAA+B,KAA/B,EAA8C,OAA9C,EAA6D;AAAA,MAC1C,KAD0C,GAChC,qBAAA,CAAA,QADgC,CACnD,OADmD;;AAG3D,MAAI,CAAC,KAAL,EAAY;AACV;AACD;;AAED,SAAO,KAAK,CAAC,aAAN,CAAoB,OAApB,EAA6B,KAA7B,EAAoC,OAApC,CAAP;AACD;;AARD,OAAA,CAAA,cAAA,GAAA,cAAA",
      sourcesContent: ["import { AxiosInstance, AxiosError } from 'axios';\nimport { alertRef } from '../../components/CustomDropdownAlert';\n\nconst errorInterceptor = async (error: AxiosError) => {\n  if (error.response?.status === 404)\n    showErrorAlert('Not found', 'Organization and/or repository not found!');\n  else showErrorAlert('Oops', 'Something went wrong');\n\n  return Promise.reject(error);\n};\n\nexport const interceptors = (client: AxiosInstance) => {\n  client.interceptors.response.use((res) => res, errorInterceptor);\n\n  return client;\n};\n\nexport function showErrorAlert(title: string, message: string) {\n  const { current: alert } = alertRef;\n\n  if (!alert) {\n    return;\n  }\n\n  return alert.alertWithType('error', title, message);\n}\n"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "71175fec617d865a8f5a401524dde96a2bdafe2e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1c3r4pj5oc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1c3r4pj5oc();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1c3r4pj5oc().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

var _regenerator =
/* istanbul ignore next */
(cov_1c3r4pj5oc().s[1]++, _interopRequireDefault(require("@babel/runtime/regenerator")));

/* istanbul ignore next */
cov_1c3r4pj5oc().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1c3r4pj5oc().s[3]++;
exports.showErrorAlert = exports.interceptors = void 0;
var CustomDropdownAlert_1 =
/* istanbul ignore next */
(cov_1c3r4pj5oc().s[4]++, require("../../components/CustomDropdownAlert"));

/* istanbul ignore next */
cov_1c3r4pj5oc().s[5]++;

var errorInterceptor = function errorInterceptor(error) {
  /* istanbul ignore next */
  cov_1c3r4pj5oc().f[0]++;

  var _error$response;

  /* istanbul ignore next */
  cov_1c3r4pj5oc().s[6]++;
  return _regenerator.default.async(function errorInterceptor$(_context) {
    /* istanbul ignore next */
    cov_1c3r4pj5oc().f[1]++;
    cov_1c3r4pj5oc().s[7]++;

    while (1) {
      /* istanbul ignore next */
      cov_1c3r4pj5oc().s[8]++;

      switch (_context.prev = _context.next) {
        case 0:
          /* istanbul ignore next */
          cov_1c3r4pj5oc().b[0][0]++;
          cov_1c3r4pj5oc().s[9]++;

          if ((
          /* istanbul ignore next */
          (cov_1c3r4pj5oc().b[3][0]++, (_error$response = error.response) === null) ||
          /* istanbul ignore next */
          (cov_1c3r4pj5oc().b[3][1]++, _error$response === void 0) ?
          /* istanbul ignore next */
          (cov_1c3r4pj5oc().b[2][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1c3r4pj5oc().b[2][1]++, _error$response.status)) === 404) {
            /* istanbul ignore next */
            cov_1c3r4pj5oc().b[1][0]++;
            cov_1c3r4pj5oc().s[10]++;
            showErrorAlert('Not found', 'Organization and/or repository not found!');
          } else {
            /* istanbul ignore next */
            cov_1c3r4pj5oc().b[1][1]++;
            cov_1c3r4pj5oc().s[11]++;
            showErrorAlert('Oops', 'Something went wrong');
          }

          /* istanbul ignore next */
          cov_1c3r4pj5oc().s[12]++;
          return _context.abrupt("return", Promise.reject(error));

        case 2:
          /* istanbul ignore next */
          cov_1c3r4pj5oc().b[0][1]++;

        case "end":
          /* istanbul ignore next */
          cov_1c3r4pj5oc().b[0][2]++;
          cov_1c3r4pj5oc().s[13]++;
          return _context.stop();
      }
    }
  }, null, null, null, Promise);
};

/* istanbul ignore next */
cov_1c3r4pj5oc().s[14]++;

var interceptors = function interceptors(client) {
  /* istanbul ignore next */
  cov_1c3r4pj5oc().f[2]++;
  cov_1c3r4pj5oc().s[15]++;
  client.interceptors.response.use(function (res) {
    /* istanbul ignore next */
    cov_1c3r4pj5oc().f[3]++;
    cov_1c3r4pj5oc().s[16]++;
    return res;
  }, errorInterceptor);

  /* istanbul ignore next */
  cov_1c3r4pj5oc().s[17]++;
  return client;
};

/* istanbul ignore next */
cov_1c3r4pj5oc().s[18]++;
exports.interceptors = interceptors;

function showErrorAlert(title, message) {
  /* istanbul ignore next */
  cov_1c3r4pj5oc().f[4]++;
  var alert =
  /* istanbul ignore next */
  (cov_1c3r4pj5oc().s[19]++, CustomDropdownAlert_1.alertRef.current);

  /* istanbul ignore next */
  cov_1c3r4pj5oc().s[20]++;

  if (!alert) {
    /* istanbul ignore next */
    cov_1c3r4pj5oc().b[4][0]++;
    cov_1c3r4pj5oc().s[21]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1c3r4pj5oc().b[4][1]++;
  }

  cov_1c3r4pj5oc().s[22]++;
  return alert.alertWithType('error', title, message);
}

/* istanbul ignore next */
cov_1c3r4pj5oc().s[23]++;
exports.showErrorAlert = showErrorAlert;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmlzZGVyYmVsL0RvY3VtZW50cy9hcGNnaXRodWJpc3N1ZXMvc3JjL3JlZHV4L2ludGVyY2VwdG9ycy9pbnRlcmNlcHRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxJQUFBLHFCQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsc0NBQUEsQ0FBQSxDQUFBOzs7OztBQUVBLElBQU0sZ0JBQWdCLEdBQUcsU0FBbkIsZ0JBQW1CLENBQUEsS0FBQSxFQUFBO0FBQUE7QUFBQTs7QUFBQSxNQUFBLGVBQUE7O0FBQUE7QUFBQTtBQUFBLFNBQUEsWUFBQSxDQUFBLE9BQUEsQ0FBQSxLQUFBLENBQUEsU0FBQSxpQkFBQSxDQUFBLFFBQUEsRUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxXQUFBLENBQUEsRUFBQTtBQUFBO0FBQUE7O0FBQUEsY0FBQSxRQUFBLENBQUEsSUFBQSxHQUFBLFFBQUEsQ0FBQSxJQUFBO0FBQUEsYUFBQSxDQUFBO0FBQUE7QUFBQTtBQUFBOztBQUN2QixjQUFJO0FBQUE7QUFBQSx3Q0FBQSxlQUFBLEdBQUEsS0FBSyxDQUFMLFFBQUEsTUFBQSxJQUFBO0FBQUE7QUFBQSx1Q0FBQSxlQUFBLEtBQUEsS0FBQSxDQUFBO0FBQUE7QUFBQSx1Q0FBQSxLQUFBLENBQUE7QUFBQTtBQUFBLHVDQUFBLGVBQUEsQ0FBQSxNQUFBLENBQUEsTUFBSixHQUFBLEVBQ0U7QUFBQTtBQUFBO0FBQUE7QUFBQSxZQUFBLGNBQWMsQ0FBQSxXQUFBLEVBQWQsMkNBQWMsQ0FBZDtBQURGLFdBQUEsTUFFSztBQUFBO0FBQUE7QUFBQTtBQUFBLFlBQUEsY0FBYyxDQUFBLE1BQUEsRUFBZCxzQkFBYyxDQUFkO0FBQUE7O0FBSGtCO0FBQUE7QUFBQSxpQkFBQSxRQUFBLENBQUEsTUFBQSxDQUFBLFFBQUEsRUFLaEIsT0FBTyxDQUFQLE1BQUEsQ0FMZ0IsS0FLaEIsQ0FMZ0IsQ0FBQTs7QUFBQSxhQUFBLENBQUE7QUFBQTtBQUFBOztBQUFBLGFBQUEsS0FBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUFBLFFBQUEsQ0FBQSxJQUFBLEVBQUE7QUFBQTtBQUFBO0FBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLE9BQUEsQ0FBQTtBQUF6QixDQUFBOzs7OztBQVFPLElBQU0sWUFBWSxHQUFHLFNBQWYsWUFBZSxDQUFBLE1BQUEsRUFBMEI7QUFBQTtBQUFBO0FBQUE7QUFDcEQsRUFBQSxNQUFNLENBQU4sWUFBQSxDQUFBLFFBQUEsQ0FBQSxHQUFBLENBQWlDLFVBQUEsR0FBQSxFQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsV0FBQSxHQUFBO0FBQWpDLEdBQUEsRUFBQSxnQkFBQTs7QUFEb0Q7QUFBQTtBQUdwRCxTQUFBLE1BQUE7QUFISyxDQUFBOzs7O0FBQU0sT0FBQSxDQUFBLFlBQUEsR0FBQSxZQUFBOztBQU1iLFNBQUEsY0FBQSxDQUFBLEtBQUEsRUFBQSxPQUFBLEVBQTZEO0FBQUE7QUFBQTtBQUFBLE1BQzFDLEtBRDBDO0FBQUE7QUFBQSw2QkFDaEMscUJBQUEsQ0FEZ0MsUUFDaEMsQ0FEZ0MsT0FBQSxDQUFBOztBQUFBO0FBQUE7O0FBRzNELE1BQUksQ0FBSixLQUFBLEVBQVk7QUFBQTtBQUFBO0FBQUE7QUFDVjtBQUNELEdBRkQ7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFIMkQ7QUFPM0QsU0FBTyxLQUFLLENBQUwsYUFBQSxDQUFBLE9BQUEsRUFBQSxLQUFBLEVBQVAsT0FBTyxDQUFQO0FBQ0Q7Ozs7QUFSRCxPQUFBLENBQUEsY0FBQSxHQUFBLGNBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBeGlvc0luc3RhbmNlLCBBeGlvc0Vycm9yIH0gZnJvbSAnYXhpb3MnO1xuaW1wb3J0IHsgYWxlcnRSZWYgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL0N1c3RvbURyb3Bkb3duQWxlcnQnO1xuXG5jb25zdCBlcnJvckludGVyY2VwdG9yID0gYXN5bmMgKGVycm9yOiBBeGlvc0Vycm9yKSA9PiB7XG4gIGlmIChlcnJvci5yZXNwb25zZT8uc3RhdHVzID09PSA0MDQpXG4gICAgc2hvd0Vycm9yQWxlcnQoJ05vdCBmb3VuZCcsICdPcmdhbml6YXRpb24gYW5kL29yIHJlcG9zaXRvcnkgbm90IGZvdW5kIScpO1xuICBlbHNlIHNob3dFcnJvckFsZXJ0KCdPb3BzJywgJ1NvbWV0aGluZyB3ZW50IHdyb25nJyk7XG5cbiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbn07XG5cbmV4cG9ydCBjb25zdCBpbnRlcmNlcHRvcnMgPSAoY2xpZW50OiBBeGlvc0luc3RhbmNlKSA9PiB7XG4gIGNsaWVudC5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKChyZXMpID0+IHJlcywgZXJyb3JJbnRlcmNlcHRvcik7XG5cbiAgcmV0dXJuIGNsaWVudDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93RXJyb3JBbGVydCh0aXRsZTogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcpIHtcbiAgY29uc3QgeyBjdXJyZW50OiBhbGVydCB9ID0gYWxlcnRSZWY7XG5cbiAgaWYgKCFhbGVydCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHJldHVybiBhbGVydC5hbGVydFdpdGhUeXBlKCdlcnJvcicsIHRpdGxlLCBtZXNzYWdlKTtcbn1cbiJdfQ==