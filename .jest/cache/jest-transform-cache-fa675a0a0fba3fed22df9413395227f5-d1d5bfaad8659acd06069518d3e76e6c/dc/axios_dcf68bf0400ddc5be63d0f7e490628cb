d4849cf095ae5ce82cab3c0455fbd65d
/* istanbul ignore next */
function cov_2i9qrl4wks() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/redux/axios.ts";
  var hash = "91e06df027058b900037c80d083cac6801bf4e22";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/redux/axios.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "3": {
        start: {
          line: 8,
          column: 13
        },
        end: {
          line: 8,
          column: 53
        }
      },
      "4": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 58
        }
      },
      "5": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "6": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "7": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 26,
          column: 1
        }
      },
      "8": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "9": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "10": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 69
        }
      },
      "11": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "createAxiosInstance",
        decl: {
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 54
          }
        },
        loc: {
          start: {
            line: 15,
            column: 57
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "validateStatus",
        decl: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 19,
            column: 43
          }
        },
        loc: {
          start: {
            line: 19,
            column: 52
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 20,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 20,
            column: 26
          }
        }, {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 20,
            column: 42
          }
        }],
        line: 20
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/anisderbel/Documents/apcgithubissues/src/redux/axios.ts"],
      names: [],
      mappings: ";;;;;;;AAAA;;AACA;;AACO,IAAM,QAAQ,GAAG,wBAAjB;;;AAEP,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB;AAAA,SAC1B,eAAM,MAAN,CAAa;AACX,IAAA,OAAO,EAAE,QADE;AAEX,IAAA,YAAY,EAAE,MAFH;AAGX,IAAA,cAAc,EAAE,wBAAC,MAAD;AAAA,aAAoB,MAAM,IAAI,GAAV,IAAiB,MAAM,GAAG,GAA9C;AAAA,KAHL;AAIX,IAAA,OAAO,EAAE;AACP,MAAA,MAAM,EAAE;AADD;AAJE,GAAb,CAD0B;AAAA,CAA5B;;eAUe,gCAAa,mBAAmB,EAAhC,C",
      sourcesContent: ["import axios from 'axios';\nimport {interceptors} from './interceptors/interceptors';\nexport const BASE_URL = 'https://api.github.com';\n\nconst createAxiosInstance = () =>\n  axios.create({\n    baseURL: BASE_URL,\n    responseType: 'json',\n    validateStatus: (status: number) => status >= 200 && status < 400,\n    headers: {\n      Accept: 'application/vnd.github.v3+json',\n    },\n  });\n\nexport default interceptors(createAxiosInstance());\n"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "91e06df027058b900037c80d083cac6801bf4e22"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2i9qrl4wks = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2i9qrl4wks();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2i9qrl4wks().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_2i9qrl4wks().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2i9qrl4wks().s[2]++;
exports.default = exports.BASE_URL = void 0;

var _axios =
/* istanbul ignore next */
(cov_2i9qrl4wks().s[3]++, _interopRequireDefault(require("axios")));

var _interceptors =
/* istanbul ignore next */
(cov_2i9qrl4wks().s[4]++, require("./interceptors/interceptors"));

var BASE_URL =
/* istanbul ignore next */
(cov_2i9qrl4wks().s[5]++, 'https://api.github.com');

/* istanbul ignore next */
cov_2i9qrl4wks().s[6]++;
exports.BASE_URL = BASE_URL;

/* istanbul ignore next */
cov_2i9qrl4wks().s[7]++;

var createAxiosInstance = function createAxiosInstance() {
  /* istanbul ignore next */
  cov_2i9qrl4wks().f[0]++;
  cov_2i9qrl4wks().s[8]++;
  return _axios.default.create({
    baseURL: BASE_URL,
    responseType: 'json',
    validateStatus: function validateStatus(status) {
      /* istanbul ignore next */
      cov_2i9qrl4wks().f[1]++;
      cov_2i9qrl4wks().s[9]++;
      return (
        /* istanbul ignore next */
        (cov_2i9qrl4wks().b[0][0]++, status >= 200) &&
        /* istanbul ignore next */
        (cov_2i9qrl4wks().b[0][1]++, status < 400)
      );
    },
    headers: {
      Accept: 'application/vnd.github.v3+json'
    }
  });
};

var _default =
/* istanbul ignore next */
(cov_2i9qrl4wks().s[10]++, (0, _interceptors.interceptors)(createAxiosInstance()));

/* istanbul ignore next */
cov_2i9qrl4wks().s[11]++;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmlzZGVyYmVsL0RvY3VtZW50cy9hcGNnaXRodWJpc3N1ZXMvc3JjL3JlZHV4L2F4aW9zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0U7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUxGLElBQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLGFBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSw2QkFBQSxDQUFBLENBQUE7O0FBQ08sSUFBTSxRQUFRO0FBQUE7QUFBQSwwQkFBZCx3QkFBYyxDQUFkOzs7Ozs7Ozs7QUFFUCxJQUFNLG1CQUFtQixHQUFHLFNBQXRCLG1CQUFzQixHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsU0FDMUIsTUFBQSxDQUFBLE9BQUEsQ0FBQSxNQUFBLENBQWE7QUFDWCxJQUFBLE9BQU8sRUFESSxRQUFBO0FBRVgsSUFBQSxZQUFZLEVBRkQsTUFBQTtBQUdYLElBQUEsY0FBYyxFQUFFLFNBQUEsY0FBQSxDQUFBLE1BQUEsRUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGFBQW9CO0FBQUE7QUFBQSxxQ0FBQSxNQUFNLElBQU4sR0FBQTtBQUFBO0FBQUEscUNBQWlCLE1BQU0sR0FBM0MsR0FBb0I7QUFBcEI7QUFITCxLQUFBO0FBSVgsSUFBQSxPQUFPLEVBQUU7QUFDUCxNQUFBLE1BQU0sRUFBRTtBQUREO0FBSkUsR0FBYixDQUQwQjtBQUE1QixDQUFBOzs7OzJCQVVlLENBQUEsR0FBQSxhQUFBLENBQUEsWUFBQSxFQUFhLG1CQUFiLEVBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQge2ludGVyY2VwdG9yc30gZnJvbSAnLi9pbnRlcmNlcHRvcnMvaW50ZXJjZXB0b3JzJztcbmV4cG9ydCBjb25zdCBCQVNFX1VSTCA9ICdodHRwczovL2FwaS5naXRodWIuY29tJztcblxuY29uc3QgY3JlYXRlQXhpb3NJbnN0YW5jZSA9ICgpID0+XG4gIGF4aW9zLmNyZWF0ZSh7XG4gICAgYmFzZVVSTDogQkFTRV9VUkwsXG4gICAgcmVzcG9uc2VUeXBlOiAnanNvbicsXG4gICAgdmFsaWRhdGVTdGF0dXM6IChzdGF0dXM6IG51bWJlcikgPT4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCA0MDAsXG4gICAgaGVhZGVyczoge1xuICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vdm5kLmdpdGh1Yi52Mytqc29uJyxcbiAgICB9LFxuICB9KTtcblxuZXhwb3J0IGRlZmF1bHQgaW50ZXJjZXB0b3JzKGNyZWF0ZUF4aW9zSW5zdGFuY2UoKSk7XG4iXX0=