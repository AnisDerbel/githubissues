7065d1f29ebfb986085d8cd607dfabd5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _effects = require("redux-saga/effects");

var _saga = _interopRequireDefault(require("./repo/saga"));

function cov_1lozuverrm() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/redux/sagas.ts";
  var hash = "a4b2714c763889166419d3fb6021ab05a340413a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/redux/sagas.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 14
        },
        end: {
          line: 3,
          column: 20
        }
      },
      "1": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 39
        }
      },
      "3": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "4": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 14,
          column: 65
        }
      },
      "5": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "wrapForErrorHandling",
        decl: {
          start: {
            line: 5,
            column: 10
          },
          end: {
            line: 5,
            column: 30
          }
        },
        loc: {
          start: {
            line: 5,
            column: 61
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "rootSaga",
        decl: {
          start: {
            line: 13,
            column: 10
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 23
          }
        },
        loc: {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 14,
            column: 62
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a4b2714c763889166419d3fb6021ab05a340413a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_1lozuverrm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1lozuverrm();

var _marked = _regenerator.default.mark(wrapForErrorHandling),
    _marked2 = _regenerator.default.mark(rootSaga);

var sagas = (cov_1lozuverrm().s[0]++, [_saga.default]);

function wrapForErrorHandling(fn) {
  return _regenerator.default.wrap(function wrapForErrorHandling$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          cov_1lozuverrm().f[0]++;
          cov_1lozuverrm().s[1]++;
          _context.prev = 2;
          cov_1lozuverrm().s[2]++;
          _context.next = 6;
          return (0, _effects.call)(fn, {
            restarted: false
          });

        case 6:
          _context.next = 12;
          break;

        case 8:
          _context.prev = 8;
          _context.t0 = _context["catch"](2);
          cov_1lozuverrm().s[3]++;
          console.log('app crashed: ', _context.t0);

        case 12:
        case "end":
          return _context.stop();
      }
    }
  }, _marked, null, [[2, 8]]);
}

function rootSaga() {
  return _regenerator.default.wrap(function rootSaga$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          cov_1lozuverrm().f[1]++;
          cov_1lozuverrm().s[4]++;
          _context2.next = 4;
          return (0, _effects.all)(sagas.map(function (saga) {
            cov_1lozuverrm().f[2]++;
            cov_1lozuverrm().s[5]++;
            return (0, _effects.fork)(wrapForErrorHandling, saga);
          }));

        case 4:
        case "end":
          return _context2.stop();
      }
    }
  }, _marked2);
}

var _default = rootSaga;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhZ2FzLnRzIl0sIm5hbWVzIjpbIndyYXBGb3JFcnJvckhhbmRsaW5nIiwicm9vdFNhZ2EiLCJzYWdhcyIsInJlcG8iLCJmbiIsInJlc3RhcnRlZCIsImNvbnNvbGUiLCJsb2ciLCJtYXAiLCJzYWdhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dDQUdVQSxvQjt5Q0FRQUMsUTs7QUFWVixJQUFNQyxLQUFLLDZCQUFHLENBQUNDLGFBQUQsQ0FBSCxDQUFYOztBQUVBLFNBQVVILG9CQUFWLENBQStCSSxFQUEvQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVJLGlCQUFNLG1CQUFLQSxFQUFMLEVBQVM7QUFBQ0MsWUFBQUEsU0FBUyxFQUFFO0FBQVosV0FBVCxDQUFOOztBQUZKO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUlJQyxVQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaOztBQUpKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQVFBLFNBQVVOLFFBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNFLGlCQUFNLGtCQUFJQyxLQUFLLENBQUNNLEdBQU4sQ0FBVSxVQUFBQyxJQUFJLEVBQUk7QUFBQTtBQUFBO0FBQUEsc0NBQUtULG9CQUFMLEVBQTJCUyxJQUEzQjtBQUFnQyxXQUFsRCxDQUFKLENBQU47O0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O2VBSWVSLFEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2FsbCwgY2FsbCwgZm9ya30gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcbmltcG9ydCByZXBvIGZyb20gJy4vcmVwby9zYWdhJztcbmNvbnN0IHNhZ2FzID0gW3JlcG9dO1xuXG5mdW5jdGlvbiogd3JhcEZvckVycm9ySGFuZGxpbmcoZm46ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCkge1xuICB0cnkge1xuICAgIHlpZWxkIGNhbGwoZm4sIHtyZXN0YXJ0ZWQ6IGZhbHNlfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmxvZygnYXBwIGNyYXNoZWQ6ICcsIGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uKiByb290U2FnYSgpIHtcbiAgeWllbGQgYWxsKHNhZ2FzLm1hcChzYWdhID0+IGZvcmsod3JhcEZvckVycm9ySGFuZGxpbmcsIHNhZ2EpKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJvb3RTYWdhO1xuIl19