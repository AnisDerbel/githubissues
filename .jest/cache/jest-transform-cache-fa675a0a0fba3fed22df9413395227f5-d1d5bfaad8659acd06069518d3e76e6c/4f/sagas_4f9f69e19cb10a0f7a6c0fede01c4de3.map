{"version":3,"sources":["sagas.ts"],"names":["wrapForErrorHandling","rootSaga","sagas","repo","fn","restarted","console","log","map","saga"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAGUA,oB;yCAQAC,Q;;AAVV,IAAMC,KAAK,6BAAG,CAACC,aAAD,CAAH,CAAX;;AAEA,SAAUH,oBAAV,CAA+BI,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAM,mBAAKA,EAAL,EAAS;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAAT,CAAN;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIIC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAUN,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAM,kBAAIC,KAAK,CAACM,GAAN,CAAU,UAAAC,IAAI,EAAI;AAAA;AAAA;AAAA,sCAAKT,oBAAL,EAA2BS,IAA3B;AAAgC,WAAlD,CAAJ,CAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;eAIeR,Q","sourcesContent":["import {all, call, fork} from 'redux-saga/effects';\nimport repo from './repo/saga';\nconst sagas = [repo];\n\nfunction* wrapForErrorHandling(fn: (...args: any[]) => void) {\n  try {\n    yield call(fn, {restarted: false});\n  } catch (e) {\n    console.log('app crashed: ', e);\n  }\n}\n\nfunction* rootSaga() {\n  yield all(sagas.map(saga => fork(wrapForErrorHandling, saga)));\n}\n\nexport default rootSaga;\n"]}