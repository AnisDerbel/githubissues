9fbab4bf20e33339cc4b32ceb09bd301
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findDispatchableActionIndex;

var _array = require("../utils/array");

function findDispatchableActionIndex(actions, pattern) {
  if (pattern == null || actions.length <= 0) {
    return -1;
  }

  if (pattern === '*') {
    return 0;
  }

  if (typeof pattern === 'function' && hasOwn(pattern, 'toString')) {
    return findDispatchableActionIndex(actions, String(pattern));
  }

  if (typeof pattern === 'function') {
    return (0, _array.findIndex)(actions, function (a) {
      return pattern(a);
    });
  }

  if (Array.isArray(pattern)) {
    for (var i = 0, l = pattern.length; i < l; i++) {
      var index = findDispatchableActionIndex(actions, pattern[i]);

      if (index > -1) {
        return index;
      }
    }

    return -1;
  }

  return (0, _array.findIndex)(actions, function (a) {
    return a.type === pattern;
  });
}

function hasOwn(object, key) {
  return {}.hasOwnProperty.call(object, key);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmREaXNwYXRjaGFibGVBY3Rpb25JbmRleC5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJmaW5kRGlzcGF0Y2hhYmxlQWN0aW9uSW5kZXgiLCJfYXJyYXkiLCJyZXF1aXJlIiwiYWN0aW9ucyIsInBhdHRlcm4iLCJsZW5ndGgiLCJoYXNPd24iLCJTdHJpbmciLCJmaW5kSW5kZXgiLCJhIiwiQXJyYXkiLCJpc0FycmF5IiwiaSIsImwiLCJpbmRleCIsInR5cGUiLCJvYmplY3QiLCJrZXkiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQzNDQyxFQUFBQSxLQUFLLEVBQUU7QUFEb0MsQ0FBN0M7QUFHQUQsT0FBTyxDQUFDRSxPQUFSLEdBQWtCQywyQkFBbEI7O0FBRUEsSUFBSUMsTUFBTSxHQUFHQyxPQUFPLENBQUMsZ0JBQUQsQ0FBcEI7O0FBRUEsU0FBU0YsMkJBQVQsQ0FBcUNHLE9BQXJDLEVBQThDQyxPQUE5QyxFQUF1RDtBQUNyRCxNQUFJQSxPQUFPLElBQUksSUFBWCxJQUFtQkQsT0FBTyxDQUFDRSxNQUFSLElBQWtCLENBQXpDLEVBQTRDO0FBQzFDLFdBQU8sQ0FBQyxDQUFSO0FBQ0Q7O0FBRUQsTUFBSUQsT0FBTyxLQUFLLEdBQWhCLEVBQXFCO0FBQ25CLFdBQU8sQ0FBUDtBQUNEOztBQUVELE1BQUksT0FBT0EsT0FBUCxLQUFtQixVQUFuQixJQUFpQ0UsTUFBTSxDQUFDRixPQUFELEVBQVUsVUFBVixDQUEzQyxFQUFrRTtBQUNoRSxXQUFPSiwyQkFBMkIsQ0FBQ0csT0FBRCxFQUFVSSxNQUFNLENBQUNILE9BQUQsQ0FBaEIsQ0FBbEM7QUFDRDs7QUFFRCxNQUFJLE9BQU9BLE9BQVAsS0FBbUIsVUFBdkIsRUFBbUM7QUFHakMsV0FBTyxDQUFDLEdBQUdILE1BQU0sQ0FBQ08sU0FBWCxFQUFzQkwsT0FBdEIsRUFBK0IsVUFBQU0sQ0FBQztBQUFBLGFBQUlMLE9BQU8sQ0FBQ0ssQ0FBRCxDQUFYO0FBQUEsS0FBaEMsQ0FBUDtBQUNEOztBQUVELE1BQUlDLEtBQUssQ0FBQ0MsT0FBTixDQUFjUCxPQUFkLENBQUosRUFBNEI7QUFDMUIsU0FBSyxJQUFJUSxDQUFDLEdBQUcsQ0FBUixFQUFXQyxDQUFDLEdBQUdULE9BQU8sQ0FBQ0MsTUFBNUIsRUFBb0NPLENBQUMsR0FBR0MsQ0FBeEMsRUFBMkNELENBQUMsRUFBNUMsRUFBZ0Q7QUFDOUMsVUFBTUUsS0FBSyxHQUFHZCwyQkFBMkIsQ0FBQ0csT0FBRCxFQUFVQyxPQUFPLENBQUNRLENBQUQsQ0FBakIsQ0FBekM7O0FBRUEsVUFBSUUsS0FBSyxHQUFHLENBQUMsQ0FBYixFQUFnQjtBQUNkLGVBQU9BLEtBQVA7QUFDRDtBQUNGOztBQUVELFdBQU8sQ0FBQyxDQUFSO0FBQ0Q7O0FBRUQsU0FBTyxDQUFDLEdBQUdiLE1BQU0sQ0FBQ08sU0FBWCxFQUFzQkwsT0FBdEIsRUFBK0IsVUFBQU0sQ0FBQztBQUFBLFdBQUlBLENBQUMsQ0FBQ00sSUFBRixLQUFXWCxPQUFmO0FBQUEsR0FBaEMsQ0FBUDtBQUNEOztBQUVELFNBQVNFLE1BQVQsQ0FBZ0JVLE1BQWhCLEVBQXdCQyxHQUF4QixFQUE2QjtBQUMzQixTQUFPLEdBQUdDLGNBQUgsQ0FBa0JDLElBQWxCLENBQXVCSCxNQUF2QixFQUErQkMsR0FBL0IsQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmaW5kRGlzcGF0Y2hhYmxlQWN0aW9uSW5kZXg7XG5cbnZhciBfYXJyYXkgPSByZXF1aXJlKFwiLi4vdXRpbHMvYXJyYXlcIik7XG5cbmZ1bmN0aW9uIGZpbmREaXNwYXRjaGFibGVBY3Rpb25JbmRleChhY3Rpb25zLCBwYXR0ZXJuKSB7XG4gIGlmIChwYXR0ZXJuID09IG51bGwgfHwgYWN0aW9ucy5sZW5ndGggPD0gMCkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuXG4gIGlmIChwYXR0ZXJuID09PSAnKicpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgcGF0dGVybiA9PT0gJ2Z1bmN0aW9uJyAmJiBoYXNPd24ocGF0dGVybiwgJ3RvU3RyaW5nJykpIHtcbiAgICByZXR1cm4gZmluZERpc3BhdGNoYWJsZUFjdGlvbkluZGV4KGFjdGlvbnMsIFN0cmluZyhwYXR0ZXJuKSk7XG4gIH1cblxuICBpZiAodHlwZW9mIHBhdHRlcm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBSZWZpbmVtZW50cyBub3QgY2F0Y2hpbmcgdGhhdCBgcGF0dGVybmAgaXMgYSBmdW5jdGlvblxuICAgIC8vICRGbG93Rml4TWVcbiAgICByZXR1cm4gKDAsIF9hcnJheS5maW5kSW5kZXgpKGFjdGlvbnMsIGEgPT4gcGF0dGVybihhKSk7XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheShwYXR0ZXJuKSkge1xuICAgIGZvciAobGV0IGkgPSAwLCBsID0gcGF0dGVybi5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGNvbnN0IGluZGV4ID0gZmluZERpc3BhdGNoYWJsZUFjdGlvbkluZGV4KGFjdGlvbnMsIHBhdHRlcm5baV0pO1xuXG4gICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIC0xO1xuICB9XG5cbiAgcmV0dXJuICgwLCBfYXJyYXkuZmluZEluZGV4KShhY3Rpb25zLCBhID0+IGEudHlwZSA9PT0gcGF0dGVybik7XG59XG5cbmZ1bmN0aW9uIGhhc093bihvYmplY3QsIGtleSkge1xuICByZXR1cm4ge30uaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSk7XG59Il19