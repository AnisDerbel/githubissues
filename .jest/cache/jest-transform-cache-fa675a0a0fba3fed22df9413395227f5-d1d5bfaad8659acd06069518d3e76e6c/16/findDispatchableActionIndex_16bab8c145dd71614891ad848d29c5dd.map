{"version":3,"sources":["findDispatchableActionIndex.js"],"names":["Object","defineProperty","exports","value","default","findDispatchableActionIndex","_array","require","actions","pattern","length","hasOwn","String","findIndex","a","Array","isArray","i","l","index","type","object","key","hasOwnProperty","call"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,2BAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AAEA,SAASF,2BAAT,CAAqCG,OAArC,EAA8CC,OAA9C,EAAuD;AACrD,MAAIA,OAAO,IAAI,IAAX,IAAmBD,OAAO,CAACE,MAAR,IAAkB,CAAzC,EAA4C;AAC1C,WAAO,CAAC,CAAR;AACD;;AAED,MAAID,OAAO,KAAK,GAAhB,EAAqB;AACnB,WAAO,CAAP;AACD;;AAED,MAAI,OAAOA,OAAP,KAAmB,UAAnB,IAAiCE,MAAM,CAACF,OAAD,EAAU,UAAV,CAA3C,EAAkE;AAChE,WAAOJ,2BAA2B,CAACG,OAAD,EAAUI,MAAM,CAACH,OAAD,CAAhB,CAAlC;AACD;;AAED,MAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AAGjC,WAAO,CAAC,GAAGH,MAAM,CAACO,SAAX,EAAsBL,OAAtB,EAA+B,UAAAM,CAAC;AAAA,aAAIL,OAAO,CAACK,CAAD,CAAX;AAAA,KAAhC,CAAP;AACD;;AAED,MAAIC,KAAK,CAACC,OAAN,CAAcP,OAAd,CAAJ,EAA4B;AAC1B,SAAK,IAAIQ,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGT,OAAO,CAACC,MAA5B,EAAoCO,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAgD;AAC9C,UAAME,KAAK,GAAGd,2BAA2B,CAACG,OAAD,EAAUC,OAAO,CAACQ,CAAD,CAAjB,CAAzC;;AAEA,UAAIE,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,eAAOA,KAAP;AACD;AACF;;AAED,WAAO,CAAC,CAAR;AACD;;AAED,SAAO,CAAC,GAAGb,MAAM,CAACO,SAAX,EAAsBL,OAAtB,EAA+B,UAAAM,CAAC;AAAA,WAAIA,CAAC,CAACM,IAAF,KAAWX,OAAf;AAAA,GAAhC,CAAP;AACD;;AAED,SAASE,MAAT,CAAgBU,MAAhB,EAAwBC,GAAxB,EAA6B;AAC3B,SAAO,GAAGC,cAAH,CAAkBC,IAAlB,CAAuBH,MAAvB,EAA+BC,GAA/B,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findDispatchableActionIndex;\n\nvar _array = require(\"../utils/array\");\n\nfunction findDispatchableActionIndex(actions, pattern) {\n  if (pattern == null || actions.length <= 0) {\n    return -1;\n  }\n\n  if (pattern === '*') {\n    return 0;\n  }\n\n  if (typeof pattern === 'function' && hasOwn(pattern, 'toString')) {\n    return findDispatchableActionIndex(actions, String(pattern));\n  }\n\n  if (typeof pattern === 'function') {\n    // Refinements not catching that `pattern` is a function\n    // $FlowFixMe\n    return (0, _array.findIndex)(actions, a => pattern(a));\n  }\n\n  if (Array.isArray(pattern)) {\n    for (let i = 0, l = pattern.length; i < l; i++) {\n      const index = findDispatchableActionIndex(actions, pattern[i]);\n\n      if (index > -1) {\n        return index;\n      }\n    }\n\n    return -1;\n  }\n\n  return (0, _array.findIndex)(actions, a => a.type === pattern);\n}\n\nfunction hasOwn(object, key) {\n  return {}.hasOwnProperty.call(object, key);\n}"]}