{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/redux/repo/reducer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAA,SAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;;;AA8Ba,OAAA,CAAA,YAAA,GAA2B;AACtC,EAAA,MAAM,EAAE,EAD8B;AAEtC,EAAA,SAAS,EAAE,KAF2B;AAGtC,EAAA,aAAa,EAAE,KAHuB;AAItC,EAAA,KAAK,EAAE,IAJ+B;AAKtC,EAAA,IAAI,EAAE;AALgC,CAA3B;;;;;AAQb,MAAM,WAAW,GAAwB,CACvC,KAAA;AAAA;AAAA,6BAAoB,OAAA,CAAA,YAApB,CADuC,EAEvC,MAFuC,KAGzB;AAAA;AAAA;AAAA;;AACd,UAAQ,MAAM,CAAC,IAAf;AACE,SAAK,SAAA,CAAA,gBAAA,CAAiB,eAAtB;AAAA;AAAA;AAAuC;AAAA;AAAA;AACrC,eAAO,EACL,GAAG,KADE;AAEL,UAAA,SAAS,EAAE,IAFN;AAGL,UAAA,MAAM,EAAE,MAAM,CAAC,OAAP,CAAe,KAAf,KAAyB,IAAzB;AAAA;AAAA,uCAAgC,EAAhC;AAAA;AAAA,uCAAqC,KAAK,CAAC,MAA3C,CAHH;AAIL,UAAA,KAAK,EAAE;AAJF,SAAP;AAMD;;AACD,SAAK,SAAA,CAAA,gBAAA,CAAiB,uBAAtB;AAAA;AAAA;AAA+C;AAAA;AAAA;AAC7C,eAAO,EACL,GAAG,KADE;AAEL,UAAA,SAAS,EAAE,KAFN;AAGL,UAAA,KAAK,EAAE,KAHF;AAIL,UAAA,aAAa,EAAE,MAAM,CAAC,OAAP,CAAe,aAJzB;AAKL,UAAA,IAAI,EAAE,MAAM,CAAC,OAAP,CAAe,IALhB;AAML,UAAA,MAAM,EAAE,EACN,GAAG,KAAK,CAAC,MADH;AAEN,aAAC,MAAM,CAAC,OAAP,CAAe,IAAhB,GAAuB,MAAM,CAAC,OAAP,CAAe;AAFhC;AANH,SAAP;AAWD;;AACD,SAAK,SAAA,CAAA,gBAAA,CAAiB,gBAAtB;AAAA;AAAA;AAAwC;AAAA;AAAA;AACtC,eAAO,EACL,GAAG,KADE;AAEL,UAAA,SAAS,EAAE,KAFN;AAGL,UAAA,KAAK,EAAE,KAHF;AAIL,UAAA,aAAa,EAAE,MAAM,CAAC,OAAP,CAAe,aAJzB;AAKL,UAAA,IAAI,EAAE,MAAM,CAAC,OAAP,CAAe;AALhB,SAAP;AAOD;;AACD,SAAK,SAAA,CAAA,gBAAA,CAAiB,sBAAtB;AAAA;AAAA;AAA8C;AAAA;AAAA;AAC5C,eAAO,EACL,GAAG,KADE;AAEL,UAAA,SAAS,EAAE,KAFN;AAGL,UAAA,KAAK,EAAE,MAAM,CAAC;AAHT,SAAP;AAKD;;AACD;AAAA;AAAA;AAAA;AACE,aAAO,KAAP;AAvCJ;AAyCD,CA7CD;;;;AA+CA,OAAA,CAAA,OAAA,GAAe,WAAf","sourcesContent":["import {AnyAction, Reducer} from 'redux';\nimport {ERepoActionTypes} from './actions';\n\ninterface PaginatedIssue {\n  [key: number]: Array<Issue>;\n}\nexport type IRepoState = {\n  issues: PaginatedIssue;\n  isLoading: boolean;\n  error: string | boolean | null;\n  hasMoreIssues: boolean;\n  page: number;\n};\nexport interface Label {\n  id: number;\n  name: string;\n  color: string;\n}\n\nexport interface Issue {\n  node_id: string;\n  title: string;\n  labels: Array<Label>;\n  user: {login: string};\n  number: number;\n  created_at: string;\n  state: 'open' | 'closed';\n  html_url: string;\n  comments: number;\n}\n\nexport const initialState: IRepoState = {\n  issues: {},\n  isLoading: false,\n  hasMoreIssues: false,\n  error: null,\n  page: 0,\n};\n\nconst formReducer: Reducer<IRepoState> = (\n  state: IRepoState = initialState,\n  action: AnyAction,\n): IRepoState => {\n  switch (action.type) {\n    case ERepoActionTypes.GET_REPO_ISSUES: {\n      return {\n        ...state,\n        isLoading: true,\n        issues: action.payload.reset === true ? {} : state.issues,\n        error: null,\n      };\n    }\n    case ERepoActionTypes.GET_REPO_ISSUES_SUCCESS: {\n      return {\n        ...state,\n        isLoading: false,\n        error: false,\n        hasMoreIssues: action.payload.hasMoreIssues,\n        page: action.payload.page,\n        issues: {\n          ...state.issues,\n          [action.payload.page]: action.payload.issues,\n        },\n      };\n    }\n    case ERepoActionTypes.SET_CURRENT_PAGE: {\n      return {\n        ...state,\n        isLoading: false,\n        error: false,\n        hasMoreIssues: action.payload.hasMoreIssues,\n        page: action.payload.page,\n      };\n    }\n    case ERepoActionTypes.GET_REPO_ISSUES_FAILED: {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default formReducer;\n"]}