9f77b018b61583e8d32d781adfb1403f
"use strict";function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}

Object.defineProperty(exports, "__esModule", {
  value: true });

exports.default = createNativeWrapper;

var React = _interopRequireWildcard(require("react"));



function _getRequireWildcardCache() {if (typeof WeakMap !== "function") return null;var cache = new WeakMap();_getRequireWildcardCache = function _getRequireWildcardCache() {return cache;};return cache;}

function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;}if (obj === null || typeof obj !== "object" && typeof obj !== "function") {return { default: obj };}var cache = _getRequireWildcardCache();if (cache && cache.has(obj)) {return cache.get(obj);}var newObj = {};var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) {var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;if (desc && (desc.get || desc.set)) {Object.defineProperty(newObj, key, desc);} else {newObj[key] = obj[key];}}}newObj.default = obj;if (cache) {cache.set(obj, newObj);}return newObj;}

function _extends() {_extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};return _extends.apply(this, arguments);}








var NATIVE_WRAPPER_PROPS_FILTER = [].concat(require("@babel/runtime/helpers/toConsumableArray")(require("./NativeViewGestureHandler").nativeViewProps), ['onGestureHandlerEvent', 'onGestureHandlerStateChange']);

function createNativeWrapper(Component) {var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var ComponentWrapper = React.forwardRef(function (props, ref) {

    var gestureHandlerProps = Object.keys(props).reduce(function (res, key) {

      var allowedKeys = NATIVE_WRAPPER_PROPS_FILTER;

      if (allowedKeys.includes(key)) {

        res[key] = props[key];
      }

      return res;
    }, _objectSpread({}, config));



    var _ref = (0, React.useRef)();

    var _gestureHandlerRef = (0, React.useRef)();

    (0, React.useImperativeHandle)(ref,
    function () {
      var node = _gestureHandlerRef.current;

      if (_ref.current && node) {

        _ref.current.handlerTag = node.handlerTag;
        return _ref.current;
      }

      return null;
    }, [_ref, _gestureHandlerRef]);
    return React.createElement(require("./NativeViewGestureHandler").NativeViewGestureHandler, _extends({}, gestureHandlerProps, {

      ref: _gestureHandlerRef }),
    React.createElement(Component, _extends({}, props, {
      ref: _ref })));

  });
  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';
  return ComponentWrapper;
}