718c934699151737f892bcc80bb1606a
'use strict';

var GetIntrinsic = require('get-intrinsic');

var has = require('has');

var $TypeError = GetIntrinsic('%TypeError%');

module.exports = function IsPropertyDescriptor(ES, Desc) {
  if (ES.Type(Desc) !== 'Object') {
    return false;
  }

  var allowed = {
    '[[Configurable]]': true,
    '[[Enumerable]]': true,
    '[[Get]]': true,
    '[[Set]]': true,
    '[[Value]]': true,
    '[[Writable]]': true
  };

  for (var key in Desc) {
    if (has(Desc, key) && !allowed[key]) {
      return false;
    }
  }

  if (ES.IsDataDescriptor(Desc) && ES.IsAccessorDescriptor(Desc)) {
    throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
  }

  return true;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzUHJvcGVydHlEZXNjcmlwdG9yLmpzIl0sIm5hbWVzIjpbIkdldEludHJpbnNpYyIsInJlcXVpcmUiLCJoYXMiLCIkVHlwZUVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsIklzUHJvcGVydHlEZXNjcmlwdG9yIiwiRVMiLCJEZXNjIiwiVHlwZSIsImFsbG93ZWQiLCJrZXkiLCJJc0RhdGFEZXNjcmlwdG9yIiwiSXNBY2Nlc3NvckRlc2NyaXB0b3IiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLFlBQVksR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBMUI7O0FBRUEsSUFBSUMsR0FBRyxHQUFHRCxPQUFPLENBQUMsS0FBRCxDQUFqQjs7QUFDQSxJQUFJRSxVQUFVLEdBQUdILFlBQVksQ0FBQyxhQUFELENBQTdCOztBQUVBSSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0Msb0JBQVQsQ0FBOEJDLEVBQTlCLEVBQWtDQyxJQUFsQyxFQUF3QztBQUN4RCxNQUFJRCxFQUFFLENBQUNFLElBQUgsQ0FBUUQsSUFBUixNQUFrQixRQUF0QixFQUFnQztBQUMvQixXQUFPLEtBQVA7QUFDQTs7QUFDRCxNQUFJRSxPQUFPLEdBQUc7QUFDYix3QkFBb0IsSUFEUDtBQUViLHNCQUFrQixJQUZMO0FBR2IsZUFBVyxJQUhFO0FBSWIsZUFBVyxJQUpFO0FBS2IsaUJBQWEsSUFMQTtBQU1iLG9CQUFnQjtBQU5ILEdBQWQ7O0FBU0EsT0FBSyxJQUFJQyxHQUFULElBQWdCSCxJQUFoQixFQUFzQjtBQUNyQixRQUFJTixHQUFHLENBQUNNLElBQUQsRUFBT0csR0FBUCxDQUFILElBQWtCLENBQUNELE9BQU8sQ0FBQ0MsR0FBRCxDQUE5QixFQUFxQztBQUNwQyxhQUFPLEtBQVA7QUFDQTtBQUNEOztBQUVELE1BQUlKLEVBQUUsQ0FBQ0ssZ0JBQUgsQ0FBb0JKLElBQXBCLEtBQTZCRCxFQUFFLENBQUNNLG9CQUFILENBQXdCTCxJQUF4QixDQUFqQyxFQUFnRTtBQUMvRCxVQUFNLElBQUlMLFVBQUosQ0FBZSxvRUFBZixDQUFOO0FBQ0E7O0FBQ0QsU0FBTyxJQUFQO0FBQ0EsQ0F2QkQiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBHZXRJbnRyaW5zaWMgPSByZXF1aXJlKCdnZXQtaW50cmluc2ljJyk7XG5cbnZhciBoYXMgPSByZXF1aXJlKCdoYXMnKTtcbnZhciAkVHlwZUVycm9yID0gR2V0SW50cmluc2ljKCclVHlwZUVycm9yJScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIElzUHJvcGVydHlEZXNjcmlwdG9yKEVTLCBEZXNjKSB7XG5cdGlmIChFUy5UeXBlKERlc2MpICE9PSAnT2JqZWN0Jykge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXHR2YXIgYWxsb3dlZCA9IHtcblx0XHQnW1tDb25maWd1cmFibGVdXSc6IHRydWUsXG5cdFx0J1tbRW51bWVyYWJsZV1dJzogdHJ1ZSxcblx0XHQnW1tHZXRdXSc6IHRydWUsXG5cdFx0J1tbU2V0XV0nOiB0cnVlLFxuXHRcdCdbW1ZhbHVlXV0nOiB0cnVlLFxuXHRcdCdbW1dyaXRhYmxlXV0nOiB0cnVlXG5cdH07XG5cblx0Zm9yICh2YXIga2V5IGluIERlc2MpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheFxuXHRcdGlmIChoYXMoRGVzYywga2V5KSAmJiAhYWxsb3dlZFtrZXldKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHR9XG5cblx0aWYgKEVTLklzRGF0YURlc2NyaXB0b3IoRGVzYykgJiYgRVMuSXNBY2Nlc3NvckRlc2NyaXB0b3IoRGVzYykpIHtcblx0XHR0aHJvdyBuZXcgJFR5cGVFcnJvcignUHJvcGVydHkgRGVzY3JpcHRvcnMgbWF5IG5vdCBiZSBib3RoIGFjY2Vzc29yIGFuZCBkYXRhIGRlc2NyaXB0b3JzJyk7XG5cdH1cblx0cmV0dXJuIHRydWU7XG59O1xuIl19