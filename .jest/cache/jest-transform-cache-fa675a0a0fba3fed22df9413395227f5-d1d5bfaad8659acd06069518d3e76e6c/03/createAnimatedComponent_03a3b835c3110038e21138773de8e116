f4102264d24868eefe90a17385f964ae










'use strict';var _jsxFileName = "/Users/anisderbel/Documents/apcgithubissues/node_modules/react-native/Libraries/Animated/createAnimatedComponent.js";function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {require("@babel/runtime/helpers/defineProperty")(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = require("@babel/runtime/helpers/getPrototypeOf")(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = require("@babel/runtime/helpers/getPrototypeOf")(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return require("@babel/runtime/helpers/possibleConstructorReturn")(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));return true;} catch (e) {return false;}}










var animatedComponentNextId = 1;

















function createAnimatedComponent(
Component)
{
  require('invariant')(
  typeof Component !== 'function' ||
  Component.prototype && Component.prototype.isReactComponent,
  '`createAnimatedComponent` does not support stateless functional components; ' +
  'use a class component instead.');var


  AnimatedComponent = function (_React$Component) {require("@babel/runtime/helpers/inherits")(AnimatedComponent, _React$Component);var _super = _createSuper(AnimatedComponent);function AnimatedComponent() {var _this;require("@babel/runtime/helpers/classCallCheck")(this, AnimatedComponent);for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}_this = _super.call.apply(_super, [this].concat(args));_this.

      _invokeAnimatedPropsCallbackOnMount = false;_this.


      _eventDetachers = [];_this.


      _animatedComponentId = animatedComponentNextId++ + ":animatedComponent";_this.






















      _isFabric = function () {var _this$_component$_int, _this$_component$_int2, _this$_component$getN, _this$_component$getN2, _this$_component$getS, _this$_component$getS2;
        if (_this._component == null) {
          return false;
        }
        return (

          ((_this$_component$_int = _this._component['_internalInstanceHandle']) == null ? void 0 : (_this$_component$_int2 = _this$_component$_int.stateNode) == null ? void 0 : _this$_component$_int2.canonical) !=
          null ||








          _this._component.getNativeScrollRef != null &&
          _this._component.getNativeScrollRef() != null &&

          ((_this$_component$getN = _this._component.getNativeScrollRef()['_internalInstanceHandle']) == null ? void 0 : (_this$_component$getN2 = _this$_component$getN.
          stateNode) == null ? void 0 : _this$_component$getN2.canonical) != null ||
          _this._component.getScrollResponder != null &&
          _this._component.getScrollResponder() != null &&
          _this._component.getScrollResponder().getNativeScrollRef != null &&
          _this._component.getScrollResponder().getNativeScrollRef() != null &&
          ((_this$_component$getS = _this._component.getScrollResponder().getNativeScrollRef()[

          '_internalInstanceHandle']) == null ? void 0 : (_this$_component$getS2 = _this$_component$getS.
          stateNode) == null ? void 0 : _this$_component$getS2.canonical) != null);

      };_this.

      _waitForUpdate = function () {
        if (_this._isFabric()) {
          require('./NativeAnimatedHelper').API.setWaitingForIdentifier(
          _this._animatedComponentId);

        }
      };_this.

      _markUpdateComplete = function () {
        if (_this._isFabric()) {
          require('./NativeAnimatedHelper').API.unsetWaitingForIdentifier(
          _this._animatedComponentId);

        }
      };_this.







      _animatedPropsCallback = function () {
        if (_this._component == null) {





          _this._invokeAnimatedPropsCallbackOnMount = true;
        } else if (
        process.env.NODE_ENV === 'test' ||

        typeof _this._component.setNativeProps !== 'function' ||

        _this._isFabric())
        {
          _this.forceUpdate();
        } else if (!_this._propsAnimated.__isNative) {
          _this._component.setNativeProps(
          _this._propsAnimated.__getAnimatedValue());

        } else {
          throw new Error(
          'Attempting to run JS driven animation on animated ' +
          'node that has been moved to "native" earlier by starting an ' +
          'animation with `useNativeDriver: true`');

        }
      };_this.



























      _setComponentRef = require('../Utilities/setAndForwardRef')({
        getForwardedRef: function getForwardedRef() {return _this.props.forwardedRef;},
        setLocalRef: function setLocalRef(ref) {
          _this._prevComponent = _this._component;
          _this._component = ref;


          if (ref != null && ref.getNode == null) {
            ref.getNode = function () {var _ref$constructor$name;
              console.warn(
              '%s: Calling `getNode()` on the ref of an Animated component ' +
              'is no longer necessary. You can now directly use the ref ' +
              'instead. This method will be removed in a future release.', (_ref$constructor$name =
              ref.constructor.name) != null ? _ref$constructor$name : '<<anonymous>>');

              return ref;
            };
          }
        } });return _this;}require("@babel/runtime/helpers/createClass")(AnimatedComponent, [{ key: "_attachNativeEvents", value: function _attachNativeEvents() {var _this$_component,_this2 = this;var scrollableNode = (_this$_component = this._component) != null && _this$_component.getScrollableNode ? this._component.getScrollableNode() : this._component;var _loop = function _loop(key) {var prop = _this2.props[key];if (prop instanceof require('./AnimatedEvent').AnimatedEvent && prop.__isNative) {prop.__attach(scrollableNode, key);_this2._eventDetachers.push(function () {return prop.__detach(scrollableNode, key);});}};for (var key in this.props) {_loop(key);}} }, { key: "_detachNativeEvents", value: function _detachNativeEvents() {this._eventDetachers.forEach(function (remove) {return remove();});this._eventDetachers = [];} }, { key: "_attachProps", value: function _attachProps(nextProps) {var oldPropsAnimated = this._propsAnimated;if (nextProps === oldPropsAnimated) {return;}this._propsAnimated = new (require('./nodes/AnimatedProps'))(nextProps, this._animatedPropsCallback);if (oldPropsAnimated) {oldPropsAnimated.__restoreDefaultValues();oldPropsAnimated.__detach();}} }, { key: "render", value:


      function render() {var _props$nativeID;var _ref =
        this._propsAnimated.__getValue() || {},_ref$style = _ref.style,style = _ref$style === void 0 ? {} : _ref$style,props = require("@babel/runtime/helpers/objectWithoutProperties")(_ref, ["style"]);var _ref2 =

        this.props.passthroughAnimatedPropExplicitValues || {},_ref2$style = _ref2.style,passthruStyle = _ref2$style === void 0 ? {} : _ref2$style,passthruProps = require("@babel/runtime/helpers/objectWithoutProperties")(_ref2, ["style"]);
        var mergedStyle = _objectSpread(_objectSpread({}, style), passthruStyle);
        return (
          require('react').createElement(Component, require("@babel/runtime/helpers/extends")({},
          props,
          passthruProps, {
            style: mergedStyle,
            ref: this._setComponentRef,
            nativeID: (_props$nativeID =
            props.nativeID) != null ? _props$nativeID :
            this._isFabric() ? 'animatedComponent' : undefined,





            collapsable:
            this._propsAnimated.__isNative ? false : props.collapsable, __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 217, columnNumber: 9 } })));



      } }, { key: "UNSAFE_componentWillMount", value:

      function UNSAFE_componentWillMount() {
        this._waitForUpdate();
        this._attachProps(this.props);
      } }, { key: "componentDidMount", value:

      function componentDidMount() {
        if (this._invokeAnimatedPropsCallbackOnMount) {
          this._invokeAnimatedPropsCallbackOnMount = false;
          this._animatedPropsCallback();
        }

        this._propsAnimated.setNativeView(this._component);
        this._attachNativeEvents();
        this._markUpdateComplete();
      } }, { key: "UNSAFE_componentWillReceiveProps", value:

      function UNSAFE_componentWillReceiveProps(newProps) {
        this._waitForUpdate();
        this._attachProps(newProps);
      } }, { key: "componentDidUpdate", value:

      function componentDidUpdate(prevProps) {
        if (this._component !== this._prevComponent) {
          this._propsAnimated.setNativeView(this._component);
        }
        if (this._component !== this._prevComponent || prevProps !== this.props) {
          this._detachNativeEvents();
          this._attachNativeEvents();
        }
        this._markUpdateComplete();
      } }, { key: "componentWillUnmount", value:

      function componentWillUnmount() {
        this._propsAnimated && this._propsAnimated.__detach();
        this._detachNativeEvents();
        this._markUpdateComplete();
      } }]);return AnimatedComponent;}(require('react').Component);


  return require('react').forwardRef(function AnimatedComponentWrapper(props, ref) {
    return (
      require('react').createElement(AnimatedComponent, require("@babel/runtime/helpers/extends")({},
      props,
      ref == null ? null : { forwardedRef: ref }, { __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 278, columnNumber: 7 } })));


  });
}

module.exports = createAnimatedComponent;