{"version":3,"sources":["toHaveHTML.js"],"names":["Object","defineProperty","exports","value","default","_name","_interopRequireDefault","require","_single","obj","__esModule","toHaveHTML","enzymeWrapper","html","wrapperHTML","useSingleQuotes","search","actualHTML","replace","expectedHTML","pass","message","negatedMessage","contextualInformation","actual","expected","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAlC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAS/F,SAASE,UAAT,CAAoBC,aAApB,EAAmCC,IAAnC,EAAyC;AACvC,MAAMC,WAAW,GAAGF,aAAa,CAACC,IAAd,EAApB;AAEA,MAAME,eAAe,GAAGF,IAAI,CAACG,MAAL,CAAY,GAAZ,MAAqB,CAAC,CAA9C;AACA,MAAMC,UAAU,GAAGH,WAAW,CAACI,OAAZ,CAAoB,QAApB,EAA8BH,eAAe,GAAG,GAAH,GAAS,GAAtD,CAAnB;AACA,MAAMI,YAAY,GAAGN,IAAI,CAACK,OAAL,CAAa,QAAb,EAAuBH,eAAe,GAAG,GAAH,GAAS,GAA/C,EAAoDG,OAApD,CAA4D,aAA5D,EAA2E,IAA3E,CAArB;AACA,MAAME,IAAI,GAAGH,UAAU,KAAKE,YAA5B;AACA,SAAO;AACLC,IAAAA,IAAI,EAAJA,IADK;AAELC,IAAAA,OAAO,iBAAe,CAAC,GAAGhB,KAAK,CAACD,OAAV,EAAmBQ,aAAnB,CAAf,iDAFF;AAGLU,IAAAA,cAAc,iBAAe,CAAC,GAAGjB,KAAK,CAACD,OAAV,EAAmBQ,aAAnB,CAAf,kDAHT;AAILW,IAAAA,qBAAqB,EAAE;AACrBC,MAAAA,MAAM,oBAAkBP,UADH;AAErBQ,MAAAA,QAAQ,sBAAoBN;AAFP;AAJlB,GAAP;AASD;;AAED,IAAIO,QAAQ,GAAG,CAAC,GAAGlB,OAAO,CAACJ,OAAZ,EAAqBO,UAArB,CAAf;;AAEAT,OAAO,CAACE,OAAR,GAAkBsB,QAAlB;AACAC,MAAM,CAACzB,OAAP,GAAiBA,OAAO,CAACE,OAAzB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _name = _interopRequireDefault(require(\"../utils/name\"));\n\nvar _single = _interopRequireDefault(require(\"../utils/single\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * This source code is licensed under the MIT-style license found in the\n * LICENSE file in the root directory of this source tree. *\n *\n * @providesModule toHaveHTMLAssertion\n * \n */\nfunction toHaveHTML(enzymeWrapper, html) {\n  const wrapperHTML = enzymeWrapper.html(); // normalize quotes\n\n  const useSingleQuotes = html.search(\"'\") !== -1;\n  const actualHTML = wrapperHTML.replace(/(\"|')/g, useSingleQuotes ? \"'\" : '\"');\n  const expectedHTML = html.replace(/(\"|')/g, useSingleQuotes ? \"'\" : '\"').replace(/>[\\n\\t ]+</g, '><');\n  const pass = actualHTML === expectedHTML;\n  return {\n    pass,\n    message: `Expected <${(0, _name.default)(enzymeWrapper)}> html to match the expected, but it didn't.`,\n    negatedMessage: `Expected <${(0, _name.default)(enzymeWrapper)}> html not to match the expected, but it did.`,\n    contextualInformation: {\n      actual: `Actual HTML: ${actualHTML}`,\n      expected: `Expected HTML: ${expectedHTML}`\n    }\n  };\n}\n\nvar _default = (0, _single.default)(toHaveHTML);\n\nexports.default = _default;\nmodule.exports = exports.default;"]}