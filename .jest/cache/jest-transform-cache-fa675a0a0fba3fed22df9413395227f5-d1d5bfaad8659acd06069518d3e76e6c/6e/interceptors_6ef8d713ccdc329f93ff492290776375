3915dc4321564846f3cd472d5241a1f7
/* istanbul ignore next */
function cov_1c3r4pj5oc() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/redux/interceptors/interceptors.ts";
  var hash = "4a8d31df968a1e2231fb556bfebb93400bf721ff";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/redux/interceptors/interceptors.ts",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 29
        },
        end: {
          line: 1,
          column: 84
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 40
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 30
        }
      },
      "4": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 9,
          column: 80
        }
      },
      "5": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 74
        }
      },
      "6": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "7": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "9": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 27,
          column: 7
        }
      },
      "10": {
        start: {
          line: 20,
          column: 10
        },
        end: {
          line: 20,
          column: 302
        }
      },
      "11": {
        start: {
          line: 20,
          column: 94
        },
        end: {
          line: 20,
          column: 302
        }
      },
      "12": {
        start: {
          line: 20,
          column: 178
        },
        end: {
          line: 20,
          column: 251
        }
      },
      "13": {
        start: {
          line: 20,
          column: 256
        },
        end: {
          line: 20,
          column: 302
        }
      },
      "14": {
        start: {
          line: 21,
          column: 10
        },
        end: {
          line: 21,
          column: 38
        }
      },
      "15": {
        start: {
          line: 22,
          column: 10
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "16": {
        start: {
          line: 26,
          column: 10
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "17": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "18": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "19": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 15
        }
      },
      "20": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 36,
          column: 16
        }
      },
      "21": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "22": {
        start: {
          line: 42,
          column: 14
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "23": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "24": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "25": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 48,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "errorInterceptor",
        decl: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 13,
            column: 48
          }
        },
        loc: {
          start: {
            line: 13,
            column: 56
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "errorInterceptor$",
        decl: {
          start: {
            line: 16,
            column: 45
          },
          end: {
            line: 16,
            column: 62
          }
        },
        loc: {
          start: {
            line: 16,
            column: 73
          },
          end: {
            line: 29,
            column: 3
          }
        },
        line: 16
      },
      "2": {
        name: "interceptors",
        decl: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 40
          }
        },
        loc: {
          start: {
            line: 32,
            column: 49
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 36
          }
        },
        loc: {
          start: {
            line: 33,
            column: 50
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 33
      },
      "4": {
        name: "showErrorAlert",
        decl: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 23
          }
        },
        loc: {
          start: {
            line: 41,
            column: 40
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 6
          },
          end: {
            line: 27,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 22,
            column: 66
          }
        }, {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 15
          }
        }, {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 26,
            column: 33
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 10
          },
          end: {
            line: 20,
            column: 302
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 10
          },
          end: {
            line: 20,
            column: 302
          }
        }, {
          start: {
            line: 20,
            column: 10
          },
          end: {
            line: 20,
            column: 302
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 65
          },
          end: {
            line: 20,
            column: 71
          }
        }, {
          start: {
            line: 20,
            column: 74
          },
          end: {
            line: 20,
            column: 83
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 20,
            column: 62
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 94
          },
          end: {
            line: 20,
            column: 302
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 94
          },
          end: {
            line: 20,
            column: 302
          }
        }, {
          start: {
            line: 20,
            column: 94
          },
          end: {
            line: 20,
            column: 302
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 99
          },
          end: {
            line: 20,
            column: 167
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 149
          },
          end: {
            line: 20,
            column: 155
          }
        }, {
          start: {
            line: 20,
            column: 158
          },
          end: {
            line: 20,
            column: 167
          }
        }],
        line: 20
      },
      "6": {
        loc: {
          start: {
            line: 20,
            column: 99
          },
          end: {
            line: 20,
            column: 146
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 99
          },
          end: {
            line: 20,
            column: 129
          }
        }, {
          start: {
            line: 20,
            column: 133
          },
          end: {
            line: 20,
            column: 146
          }
        }],
        line: 20
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        }, {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        }],
        line: 44
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/anisderbel/Documents/apcgithubissues/src/redux/interceptors/interceptors.ts"],
      names: [],
      mappings: ";;;;;;;;;;AAEA;;AAEA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAO,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACvB,cAAI,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,QAAN,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,MAAhB,MAA2B,GAA/B,EACE,IAAI,CAAA,CAAA,EAAA,GAAA,KAAK,CAAC,QAAN,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,MAAhB,MAA2B,GAA/B,EAUE,cAAc,CAAC,WAAD,EAAc,2CAAd,CAAd,CAVF,KAWK,cAAc,CAAC,KAAD,EAAQ,sBAAR,CAAd;AACP,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAC,QAAlB;AAduB,2CAgBhB,OAAO,CAAC,MAAR,CAAe,KAAf,CAhBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAmBO,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,MAAD,EAA0B;AACpD,EAAA,MAAM,CAAC,YAAP,CAAoB,QAApB,CAA6B,GAA7B,CAAiC,UAAA,GAAG;AAAA,WAAI,GAAJ;AAAA,GAApC,EAA6C,gBAA7C;AAEA,SAAO,MAAP;AACD,CAJM;;;;AAMD,SAAU,cAAV,CAAyB,KAAzB,EAAwC,OAAxC,EAAuD;AAAA,MAC3C,KAD2C,GAClC,6BADkC,CACpD,OADoD;;AAG3D,MAAI,CAAC,KAAL,EAAY;AACV;AACD;;AAED,SAAO,KAAK,CAAC,aAAN,CAAoB,OAApB,EAA6B,KAA7B,EAAoC,OAApC,CAAP;AACD",
      sourcesContent: ["import {AxiosInstance, AxiosError} from 'axios';\nimport {showMessage} from 'react-native-flash-message';\nimport {alertRef} from '../../components/CustomDropdownAlert';\n\nconst errorInterceptor = async (error: AxiosError) => {\n  if (error.response?.status === 404)\n    if (error.response?.status === 404)\n      //   showMessage({\n      //     message: 'Organization and/or repository not found!',\n      //     type: 'danger',\n      //   });\n      // else\n      //   showMessage({\n      //     message: 'Something went wrong',\n      //     type: 'danger',\n      //   });\n      showErrorAlert('Not found', 'Organization and/or repository not found!');\n    else showErrorAlert('Not', 'Something went wrong');\n  console.log(error.response);\n\n  return Promise.reject(error);\n};\n\nexport const interceptors = (client: AxiosInstance) => {\n  client.interceptors.response.use(res => res, errorInterceptor);\n\n  return client;\n};\n\nexport function showErrorAlert(title: string, message: string) {\n  const {current: alert} = alertRef;\n\n  if (!alert) {\n    return;\n  }\n\n  return alert.alertWithType('error', title, message);\n}\n"]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4a8d31df968a1e2231fb556bfebb93400bf721ff"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1c3r4pj5oc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1c3r4pj5oc();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_1c3r4pj5oc().s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

/* istanbul ignore next */
cov_1c3r4pj5oc().s[1]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1c3r4pj5oc().s[2]++;
exports.showErrorAlert = showErrorAlert;

/* istanbul ignore next */
cov_1c3r4pj5oc().s[3]++;
exports.interceptors = void 0;

var _regenerator =
/* istanbul ignore next */
(cov_1c3r4pj5oc().s[4]++, _interopRequireDefault(require("@babel/runtime/regenerator")));

var _CustomDropdownAlert =
/* istanbul ignore next */
(cov_1c3r4pj5oc().s[5]++, require("../../components/CustomDropdownAlert"));

/* istanbul ignore next */
cov_1c3r4pj5oc().s[6]++;

var errorInterceptor = function errorInterceptor(error) {
  /* istanbul ignore next */
  cov_1c3r4pj5oc().f[0]++;

  var _a, _b;

  /* istanbul ignore next */
  cov_1c3r4pj5oc().s[7]++;
  return _regenerator.default.async(function errorInterceptor$(_context) {
    /* istanbul ignore next */
    cov_1c3r4pj5oc().f[1]++;
    cov_1c3r4pj5oc().s[8]++;

    while (1) {
      /* istanbul ignore next */
      cov_1c3r4pj5oc().s[9]++;

      switch (_context.prev = _context.next) {
        case 0:
          /* istanbul ignore next */
          cov_1c3r4pj5oc().b[0][0]++;
          cov_1c3r4pj5oc().s[10]++;

          if ((
          /* istanbul ignore next */
          (cov_1c3r4pj5oc().b[3][0]++, (_a = error.response) === null) ||
          /* istanbul ignore next */
          (cov_1c3r4pj5oc().b[3][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1c3r4pj5oc().b[2][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1c3r4pj5oc().b[2][1]++, _a.status)) === 404) {
            /* istanbul ignore next */
            cov_1c3r4pj5oc().b[1][0]++;
            cov_1c3r4pj5oc().s[11]++;

            if ((
            /* istanbul ignore next */
            (cov_1c3r4pj5oc().b[6][0]++, (_b = error.response) === null) ||
            /* istanbul ignore next */
            (cov_1c3r4pj5oc().b[6][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_1c3r4pj5oc().b[5][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1c3r4pj5oc().b[5][1]++, _b.status)) === 404) {
              /* istanbul ignore next */
              cov_1c3r4pj5oc().b[4][0]++;
              cov_1c3r4pj5oc().s[12]++;
              showErrorAlert('Not found', 'Organization and/or repository not found!');
            } else {
              /* istanbul ignore next */
              cov_1c3r4pj5oc().b[4][1]++;
              cov_1c3r4pj5oc().s[13]++;
              showErrorAlert('Not', 'Something went wrong');
            }
          } else
          /* istanbul ignore next */
          {
            cov_1c3r4pj5oc().b[1][1]++;
          }

          cov_1c3r4pj5oc().s[14]++;
          console.log(error.response);

          /* istanbul ignore next */
          cov_1c3r4pj5oc().s[15]++;
          return _context.abrupt("return", Promise.reject(error));

        case 3:
          /* istanbul ignore next */
          cov_1c3r4pj5oc().b[0][1]++;

        case "end":
          /* istanbul ignore next */
          cov_1c3r4pj5oc().b[0][2]++;
          cov_1c3r4pj5oc().s[16]++;
          return _context.stop();
      }
    }
  }, null, null, null, Promise);
};

/* istanbul ignore next */
cov_1c3r4pj5oc().s[17]++;

var interceptors = function interceptors(client) {
  /* istanbul ignore next */
  cov_1c3r4pj5oc().f[2]++;
  cov_1c3r4pj5oc().s[18]++;
  client.interceptors.response.use(function (res) {
    /* istanbul ignore next */
    cov_1c3r4pj5oc().f[3]++;
    cov_1c3r4pj5oc().s[19]++;
    return res;
  }, errorInterceptor);

  /* istanbul ignore next */
  cov_1c3r4pj5oc().s[20]++;
  return client;
};

/* istanbul ignore next */
cov_1c3r4pj5oc().s[21]++;
exports.interceptors = interceptors;

function showErrorAlert(title, message) {
  /* istanbul ignore next */
  cov_1c3r4pj5oc().f[4]++;
  var alert =
  /* istanbul ignore next */
  (cov_1c3r4pj5oc().s[22]++, _CustomDropdownAlert.alertRef.current);

  /* istanbul ignore next */
  cov_1c3r4pj5oc().s[23]++;

  if (!alert) {
    /* istanbul ignore next */
    cov_1c3r4pj5oc().b[7][0]++;
    cov_1c3r4pj5oc().s[24]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1c3r4pj5oc().b[7][1]++;
  }

  cov_1c3r4pj5oc().s[25]++;
  return alert.alertWithType('error', title, message);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmlzZGVyYmVsL0RvY3VtZW50cy9hcGNnaXRodWJpc3N1ZXMvc3JjL3JlZHV4L2ludGVyY2VwdG9ycy9pbnRlcmNlcHRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUl5Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFGekIsSUFBQSxvQkFBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLHNDQUFBLENBQUEsQ0FBQTs7Ozs7QUFFQSxJQUFNLGdCQUFnQixHQUFHLFNBQW5CLGdCQUFtQixDQUFBLEtBQUEsRUFBQTtBQUFBO0FBQUE7O0FBQUEsTUFBQSxFQUFBLEVBQUEsRUFBQTs7QUFBQTtBQUFBO0FBQUEsU0FBQSxZQUFBLENBQUEsT0FBQSxDQUFBLEtBQUEsQ0FBQSxTQUFBLGlCQUFBLENBQUEsUUFBQSxFQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBLFdBQUEsQ0FBQSxFQUFBO0FBQUE7QUFBQTs7QUFBQSxjQUFBLFFBQUEsQ0FBQSxJQUFBLEdBQUEsUUFBQSxDQUFBLElBQUE7QUFBQSxhQUFBLENBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ3ZCLGNBQUk7QUFBQTtBQUFBLHdDQUFBLEVBQUEsR0FBQSxLQUFLLENBQUwsUUFBQSxNQUFBLElBQUE7QUFBQTtBQUFBLHVDQUFjLEVBQUEsS0FBQSxLQUFkLENBQUE7QUFBQTtBQUFBLHVDQUFjLEtBQWQsQ0FBQTtBQUFBO0FBQUEsdUNBQWMsRUFBQSxDQUFkLE1BQUEsQ0FBQSxNQUFKLEdBQUEsRUFDRTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxnQkFBSTtBQUFBO0FBQUEsMENBQUEsRUFBQSxHQUFBLEtBQUssQ0FBTCxRQUFBLE1BQUEsSUFBQTtBQUFBO0FBQUEseUNBQWMsRUFBQSxLQUFBLEtBQWQsQ0FBQTtBQUFBO0FBQUEseUNBQWMsS0FBZCxDQUFBO0FBQUE7QUFBQSx5Q0FBYyxFQUFBLENBQWQsTUFBQSxDQUFBLE1BQUosR0FBQSxFQVVFO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FBQSxjQUFjLENBQUEsV0FBQSxFQUFkLDJDQUFjLENBQWQ7QUFWRixhQUFBLE1BV0s7QUFBQTtBQUFBO0FBQUE7QUFBQSxjQUFBLGNBQWMsQ0FBQSxLQUFBLEVBQWQsc0JBQWMsQ0FBZDtBQUFBO0FBQUEsV0FaUDtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUR1QjtBQWN2QixVQUFBLE9BQU8sQ0FBUCxHQUFBLENBQVksS0FBSyxDQUFqQixRQUFBOztBQWR1QjtBQUFBO0FBQUEsaUJBQUEsUUFBQSxDQUFBLE1BQUEsQ0FBQSxRQUFBLEVBZ0JoQixPQUFPLENBQVAsTUFBQSxDQWhCZ0IsS0FnQmhCLENBaEJnQixDQUFBOztBQUFBLGFBQUEsQ0FBQTtBQUFBO0FBQUE7O0FBQUEsYUFBQSxLQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQUEsUUFBQSxDQUFBLElBQUEsRUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsT0FBQSxDQUFBO0FBQXpCLENBQUE7Ozs7O0FBbUJPLElBQU0sWUFBWSxHQUFHLFNBQWYsWUFBZSxDQUFBLE1BQUEsRUFBMEI7QUFBQTtBQUFBO0FBQUE7QUFDcEQsRUFBQSxNQUFNLENBQU4sWUFBQSxDQUFBLFFBQUEsQ0FBQSxHQUFBLENBQWlDLFVBQUEsR0FBQSxFQUFHO0FBQUE7QUFBQTtBQUFBO0FBQUEsV0FBQSxHQUFBO0FBQXBDLEdBQUEsRUFBQSxnQkFBQTs7QUFEb0Q7QUFBQTtBQUdwRCxTQUFBLE1BQUE7QUFISyxDQUFBOzs7Ozs7QUFNRCxTQUFBLGNBQUEsQ0FBQSxLQUFBLEVBQUEsT0FBQSxFQUF1RDtBQUFBO0FBQUE7QUFBQSxNQUMzQyxLQUQyQztBQUFBO0FBQUEsNkJBQ2xDLG9CQUFBLENBRGtDLFFBQ2xDLENBRGtDLE9BQUEsQ0FBQTs7QUFBQTtBQUFBOztBQUczRCxNQUFJLENBQUosS0FBQSxFQUFZO0FBQUE7QUFBQTtBQUFBO0FBQ1Y7QUFDRCxHQUZEO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBSDJEO0FBTzNELFNBQU8sS0FBSyxDQUFMLGFBQUEsQ0FBQSxPQUFBLEVBQUEsS0FBQSxFQUFQLE9BQU8sQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBeGlvc0luc3RhbmNlLCBBeGlvc0Vycm9yfSBmcm9tICdheGlvcyc7XG5pbXBvcnQge3Nob3dNZXNzYWdlfSBmcm9tICdyZWFjdC1uYXRpdmUtZmxhc2gtbWVzc2FnZSc7XG5pbXBvcnQge2FsZXJ0UmVmfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL0N1c3RvbURyb3Bkb3duQWxlcnQnO1xuXG5jb25zdCBlcnJvckludGVyY2VwdG9yID0gYXN5bmMgKGVycm9yOiBBeGlvc0Vycm9yKSA9PiB7XG4gIGlmIChlcnJvci5yZXNwb25zZT8uc3RhdHVzID09PSA0MDQpXG4gICAgaWYgKGVycm9yLnJlc3BvbnNlPy5zdGF0dXMgPT09IDQwNClcbiAgICAgIC8vICAgc2hvd01lc3NhZ2Uoe1xuICAgICAgLy8gICAgIG1lc3NhZ2U6ICdPcmdhbml6YXRpb24gYW5kL29yIHJlcG9zaXRvcnkgbm90IGZvdW5kIScsXG4gICAgICAvLyAgICAgdHlwZTogJ2RhbmdlcicsXG4gICAgICAvLyAgIH0pO1xuICAgICAgLy8gZWxzZVxuICAgICAgLy8gICBzaG93TWVzc2FnZSh7XG4gICAgICAvLyAgICAgbWVzc2FnZTogJ1NvbWV0aGluZyB3ZW50IHdyb25nJyxcbiAgICAgIC8vICAgICB0eXBlOiAnZGFuZ2VyJyxcbiAgICAgIC8vICAgfSk7XG4gICAgICBzaG93RXJyb3JBbGVydCgnTm90IGZvdW5kJywgJ09yZ2FuaXphdGlvbiBhbmQvb3IgcmVwb3NpdG9yeSBub3QgZm91bmQhJyk7XG4gICAgZWxzZSBzaG93RXJyb3JBbGVydCgnTm90JywgJ1NvbWV0aGluZyB3ZW50IHdyb25nJyk7XG4gIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlKTtcblxuICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xufTtcblxuZXhwb3J0IGNvbnN0IGludGVyY2VwdG9ycyA9IChjbGllbnQ6IEF4aW9zSW5zdGFuY2UpID0+IHtcbiAgY2xpZW50LmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UocmVzID0+IHJlcywgZXJyb3JJbnRlcmNlcHRvcik7XG5cbiAgcmV0dXJuIGNsaWVudDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93RXJyb3JBbGVydCh0aXRsZTogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcpIHtcbiAgY29uc3Qge2N1cnJlbnQ6IGFsZXJ0fSA9IGFsZXJ0UmVmO1xuXG4gIGlmICghYWxlcnQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICByZXR1cm4gYWxlcnQuYWxlcnRXaXRoVHlwZSgnZXJyb3InLCB0aXRsZSwgbWVzc2FnZSk7XG59XG4iXX0=