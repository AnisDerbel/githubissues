{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/components/IssueItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport moment from 'moment';\nimport Labels from '../components/Labels';\nimport Title from '../components/Title';\nimport Open from '../assets/svgs/open.svg';\nimport Closed from '../assets/svgs/closed.svg';\nimport { Issue } from '../redux/repo/reducer';\n\nexport interface IssueItemProps {\n  item: Issue;\n  onPress: (url: string) => void;\n}\nconst IssueItem = ({ item, onPress }: IssueItemProps) => {\n  const theme = useTheme();\n\n  const onPressIssue = () => {\n    onPress(item.html_url);\n  };\n  return (\n    <TouchableOpacity onPress={onPressIssue}>\n      <View style={[{ marginHorizontal: theme.spacing.m }, styles.row]}>\n        <View style={{ top: theme.spacing.xs }}>\n          {item.state === 'open' ? <Open /> : <Closed />}\n        </View>\n        <View style={{ marginLeft: theme.spacing.m }}>\n          <Title>{item.title}</Title>\n          {item.labels && item.labels.length > 0 && <Labels items={item.labels} />}\n          <Text\n            style={[theme.variants.info, { color: theme.colors.text, marginTop: theme.spacing.s }]}\n          >\n            #{item.number} opened {moment(item.created_at).fromNow()} by {item.user.login}\n          </Text>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(IssueItem);\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n  },\n});\n"]}