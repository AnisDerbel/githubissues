ec47c713d98a5c3557cc1037de95f02b
"use strict";var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactNative = require("react-native");var _jsxFileName = "/Users/anisderbel/Documents/apcgithubissues/node_modules/react-native-dropdownalert/TextView.js";function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = (0, _getPrototypeOf2.default)(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return (0, _possibleConstructorReturn2.default)(this, result);};}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));return true;} catch (e) {return false;}}var

TextView = function (_Component) {(0, _inherits2.default)(TextView, _Component);var _super = _createSuper(TextView);function TextView() {(0, _classCallCheck2.default)(this, TextView);return _super.apply(this, arguments);}(0, _createClass2.default)(TextView, [{ key: "render", value:















    function render() {var
      text = this.props.text;
      if (!text || text.length == 0) {
        return null;
      }
      return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({}, this.props, { __self: this, __self: this, __source: { fileName: _jsxFileName, lineNumber: 26, columnNumber: 12 } }), text);
    } }]);return TextView;}(_react.Component);exports.default = TextView;TextView.propTypes = { text: _propTypes.default.string.isRequired, style: _propTypes.default.object, numberOfLines: _propTypes.default.number };TextView.defaultProps = { numberOfLines: 1, style: { fontSize: 16, textAlign: 'left', fontWeight: 'normal', color: 'white', backgroundColor: 'transparent' } };