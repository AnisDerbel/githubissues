381e8bd55991d3cdb3a004f0b0be1860
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var react_1 = tslib_1.__importDefault(require("react"));

var enzyme_1 = require("enzyme");

var IssueItem_1 = tslib_1.__importDefault(require("../IssueItem"));

var enzyme_adapter_react_17_1 = tslib_1.__importDefault(require("@wojtekmaj/enzyme-adapter-react-17"));

var react_native_paper_1 = require("react-native-paper");

var repo_1 = require("../../__mocks__/repo");

var theme_1 = tslib_1.__importDefault(require("../../theme"));

var Labels_1 = tslib_1.__importDefault(require("../Labels"));

var open_svg_1 = tslib_1.__importDefault(require("../../assets/svgs/open.svg"));

var closed_svg_1 = tslib_1.__importDefault(require("../../assets/svgs/closed.svg"));

enzyme_1.configure({
  adapter: new enzyme_adapter_react_17_1.default()
});
var component;
var onPress = jest.fn();

var getOpenIcon = function getOpenIcon() {
  return component.find(open_svg_1.default);
};

var getCloseIcon = function getCloseIcon() {
  return component.find(closed_svg_1.default);
};

var getLabels = function getLabels() {
  return component.find(Labels_1.default);
};

describe('IssueItem', function () {
  var renderComponent = function renderComponent(item) {
    return enzyme_1.mount(react_1.default.createElement(react_native_paper_1.Provider, {
      theme: theme_1.default
    }, react_1.default.createElement(IssueItem_1.default, {
      item: item,
      onPress: onPress
    })));
  };

  beforeEach(function () {
    component = renderComponent(repo_1.repoIssuesMock.data[0]).find(IssueItem_1.default);
  });
  it('should be pressable', function () {
    component.props().onPress(repo_1.repoIssuesMock.data[0].html_url);
    expect(onPress).toHaveBeenCalledTimes(1);
    expect(onPress).toHaveBeenCalledWith(repo_1.repoIssuesMock.data[0].html_url);
  });
  it('should render Labels correctly', function () {
    expect(getLabels().exists()).toBeTruthy();
  });
  describe('no labels available', function () {
    beforeEach(function () {
      component = renderComponent((0, _extends2.default)({}, repo_1.repoIssuesMock.data[0], {
        labels: []
      })).find(IssueItem_1.default);
    });
    it('should not render Labels', function () {
      expect(getLabels().exists()).toBeFalsy();
    });
  });
  describe('open issue', function () {
    beforeEach(function () {
      component = renderComponent((0, _extends2.default)({}, repo_1.repoIssuesMock.data[0], {
        state: 'open'
      })).find(IssueItem_1.default);
      console.log(component.props());
    });
    it('should show open icon when state is open', function () {
      expect(getOpenIcon().exists()).toBeTruthy();
    });
  });
  describe('close issue', function () {
    beforeEach(function () {
      component = renderComponent((0, _extends2.default)({}, repo_1.repoIssuesMock.data[0], {
        state: 'closed'
      })).find(IssueItem_1.default);
    });
    it('should show close icon when state is closed', function () {
      expect(getCloseIcon().exists()).toBeTruthy();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbmlzZGVyYmVsL0RvY3VtZW50cy9hcGNnaXRodWJpc3N1ZXMvc3JjL2NvbXBvbmVudHMvX190ZXN0c19fL2lzc3VlaXRlbS5zcGVjLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLE9BQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFFBQUEsR0FBQSxPQUFBLENBQUEsUUFBQSxDQUFBOztBQUNBLElBQUEsV0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLGNBQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEseUJBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxvQ0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxvQkFBQSxHQUFBLE9BQUEsQ0FBQSxvQkFBQSxDQUFBOztBQUVBLElBQUEsTUFBQSxHQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBOztBQUNBLElBQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsUUFBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLFdBQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsVUFBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLDRCQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSw4QkFBQSxDQUFBLENBQUE7O0FBRUEsUUFBQSxDQUFBLFNBQUEsQ0FBVTtBQUFFLEVBQUEsT0FBTyxFQUFFLElBQUkseUJBQUEsQ0FBQSxPQUFKO0FBQVgsQ0FBVjtBQUdBLElBQUksU0FBSjtBQUNBLElBQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxFQUFMLEVBQWhCOztBQUVBLElBQU0sV0FBVyxHQUFHLFNBQWQs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QUNsRCxNQUFBLE1BQU0sQ0FBQyxXQUFXLEdBQUcsTUFBZCxFQUFELENBQU4sQ0FBK0IsVUFBL0I7QUFDRCxLQUZDLENBQUY7QUFHRCxHQWJPLENBQVI7QUFjQSxFQUFBLFFBQVEsQ0FBQyxhQUFELEVBQWdCLFlBQUs7QUFDM0IsSUFBQSxVQUFVLENBQUMsWUFBSztBQUNkLE1BQUEsU0FBUyxHQUFHLGVBQWUsNEJBQ3RCLE1BQUEsQ0FBQSxjQUFBLENBQWUsSUFBZixDQUFvQixDQUFwQixDQURzQjtBQUV6QixRQUFBLEtBQUssRUFBRTtBQUZrQixTQUFmLENBR1QsSUFIUyxDQUdKLFdBQUEsQ0FBQSxPQUhJLENBQVo7QUFJRCxLQUxTLENBQVY7QUFPQSxJQUFBLEVBQUUsQ0FBQyw2Q0FBRCxFQUFnRCxZQUFLO0FBQ3JELE1BQUEsTUFBTSxDQUFDLFlBQVksR0FBRyxNQUFmLEVBQUQsQ0FBTixDQUFnQyxVQUFoQztBQUNELEtBRkMsQ0FBRjtBQUdELEdBWE8sQ0FBUjtBQVlELENBM0RPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbW91bnQsIFJlYWN0V3JhcHBlciwgY29uZmlndXJlIH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCBJc3N1ZUl0ZW0sIHsgSXNzdWVJdGVtUHJvcHMgfSBmcm9tICcuLi9Jc3N1ZUl0ZW0nO1xuaW1wb3J0IEFkYXB0ZXIgZnJvbSAnQHdvanRla21hai9lbnp5bWUtYWRhcHRlci1yZWFjdC0xNyc7XG5pbXBvcnQgeyBQcm92aWRlciBhcyBQYXBlclByb3ZpZGVyIH0gZnJvbSAncmVhY3QtbmF0aXZlLXBhcGVyJztcbmltcG9ydCB7IElzc3VlIH0gZnJvbSAnLi4vLi4vcmVkdXgvcmVwby9yZWR1Y2VyJztcbmltcG9ydCB7IHJlcG9Jc3N1ZXNNb2NrIH0gZnJvbSAnLi4vLi4vX19tb2Nrc19fL3JlcG8nO1xuaW1wb3J0IHRoZW1lIGZyb20gJy4uLy4uL3RoZW1lJztcbmltcG9ydCBMYWJlbHMgZnJvbSAnLi4vTGFiZWxzJztcbmltcG9ydCBPcGVuIGZyb20gJy4uLy4uL2Fzc2V0cy9zdmdzL29wZW4uc3ZnJztcbmltcG9ydCBDbG9zZSBmcm9tICcuLi8uLi9hc3NldHMvc3Zncy9jbG9zZWQuc3ZnJztcblxuY29uZmlndXJlKHsgYWRhcHRlcjogbmV3IEFkYXB0ZXIoKSB9KTtcbnR5cGUgQ29tcG9uZW50V3JhcHBlciA9IFJlYWN0V3JhcHBlcjxJc3N1ZUl0ZW1Qcm9wcywgdm9pZCwgUmVhY3QuQ29tcG9uZW50PjtcblxubGV0IGNvbXBvbmVudDogQ29tcG9uZW50V3JhcHBlcjtcbmNvbnN0IG9uUHJlc3MgPSBqZXN0LmZuKCk7XG5cbmNvbnN0IGdldE9wZW5JY29uID0gKCkgPT4gY29tcG9uZW50LmZpbmQoT3Blbik7XG5jb25zdCBnZXRDbG9zZUljb24gPSAoKSA9PiBjb21wb25lbnQuZmluZChDbG9zZSk7XG5jb25zdCBnZXRMYWJlbHMgPSAoKSA9PiBjb21wb25lbnQuZmluZChMYWJlbHMpO1xuZGVzY3JpYmUoJ0lzc3VlSXRlbScsICgpID0+IHtcbiAgY29uc3QgcmVuZGVyQ29tcG9uZW50ID0gKGl0ZW06IElzc3VlKTogQ29tcG9uZW50V3JhcHBlciA9PlxuICAgIG1vdW50KFxuICAgICAgPFBhcGVyUHJvdmlkZXIgdGhlbWU9e3RoZW1lfT5cbiAgICAgICAgPElzc3VlSXRlbSBpdGVtPXtpdGVtfSBvblByZXNzPXtvblByZXNzfSAvPlxuICAgICAgPC9QYXBlclByb3ZpZGVyPixcbiAgICApO1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBjb21wb25lbnQgPSByZW5kZXJDb21wb25lbnQocmVwb0lzc3Vlc01vY2suZGF0YVswXSkuZmluZChJc3N1ZUl0ZW0pO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGJlIHByZXNzYWJsZScsICgpID0+IHtcbiAgICBjb21wb25lbnQucHJvcHMoKS5vblByZXNzKHJlcG9Jc3N1ZXNNb2NrLmRhdGFbMF0uaHRtbF91cmwpO1xuICAgIGV4cGVjdChvblByZXNzKS50b0hhdmVCZWVuQ2FsbGVkVGltZXMoMSk7XG4gICAgZXhwZWN0KG9uUHJlc3MpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKHJlcG9Jc3N1ZXNNb2NrLmRhdGFbMF0uaHRtbF91cmwpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIHJlbmRlciBMYWJlbHMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGV4cGVjdChnZXRMYWJlbHMoKS5leGlzdHMoKSkudG9CZVRydXRoeSgpO1xuICB9KTtcblxuICBkZXNjcmliZSgnbm8gbGFiZWxzIGF2YWlsYWJsZScsICgpID0+IHtcbiAgICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICAgIGNvbXBvbmVudCA9IHJlbmRlckNvbXBvbmVudCh7XG4gICAgICAgIC4uLnJlcG9Jc3N1ZXNNb2NrLmRhdGFbMF0sXG4gICAgICAgIGxhYmVsczogW10sXG4gICAgICB9KS5maW5kKElzc3VlSXRlbSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIG5vdCByZW5kZXIgTGFiZWxzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KGdldExhYmVscygpLmV4aXN0cygpKS50b0JlRmFsc3koKTtcbiAgICB9KTtcbiAgfSk7XG4gIGRlc2NyaWJlKCdvcGVuIGlzc3VlJywgKCkgPT4ge1xuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgY29tcG9uZW50ID0gcmVuZGVyQ29tcG9uZW50KHtcbiAgICAgICAgLi4ucmVwb0lzc3Vlc01vY2suZGF0YVswXSxcbiAgICAgICAgc3RhdGU6ICdvcGVuJyxcbiAgICAgIH0pLmZpbmQoSXNzdWVJdGVtKTtcblxuICAgICAgY29uc29sZS5sb2coY29tcG9uZW50LnByb3BzKCkpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBzaG93IG9wZW4gaWNvbiB3aGVuIHN0YXRlIGlzIG9wZW4nLCAoKSA9PiB7XG4gICAgICBleHBlY3QoZ2V0T3Blbkljb24oKS5leGlzdHMoKSkudG9CZVRydXRoeSgpO1xuICAgIH0pO1xuICB9KTtcbiAgZGVzY3JpYmUoJ2Nsb3NlIGlzc3VlJywgKCkgPT4ge1xuICAgIGJlZm9yZUVhY2goKCkgPT4ge1xuICAgICAgY29tcG9uZW50ID0gcmVuZGVyQ29tcG9uZW50KHtcbiAgICAgICAgLi4ucmVwb0lzc3Vlc01vY2suZGF0YVswXSxcbiAgICAgICAgc3RhdGU6ICdjbG9zZWQnLFxuICAgICAgfSkuZmluZChJc3N1ZUl0ZW0pO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBzaG93IGNsb3NlIGljb24gd2hlbiBzdGF0ZSBpcyBjbG9zZWQnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoZ2V0Q2xvc2VJY29uKCkuZXhpc3RzKCkpLnRvQmVUcnV0aHkoKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==