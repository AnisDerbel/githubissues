{"version":3,"sources":["store.ts"],"names":["sagaMiddleware","middleWares","__DEV__","createFlipperMiddleware","require","default","push","store","rootReducer","applyMiddleware","run","rootSaga"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,cAAc,4BAAG,yBAAH,CAApB;AAEA,IAAMC,WAAW,4BAAG,CAACD,cAAD,CAAH,CAAjB;;;AACA,IAAIE,OAAJ,EAAa;AAAA;AAEX,MAAMC,uBAAuB,4BAAGC,OAAO,CAAC,6BAAD,CAAP,CAC7BC,OAD0B,CAA7B;AAFW;AAIXJ,EAAAA,WAAW,CAACK,IAAZ,CAAiBH,uBAAuB,EAAxC;AACD,CALD;AAAA;AAAA;;AAOA,IAAMI,KAAK,4BAAG,wBACZC,mBADY,EAEZ,iDAAoBC,qCAAmBR,WAAnB,CAApB,CAFY,CAAH,CAAX;;AAIAD,cAAc,CAACU,GAAf,CAAmBC,cAAnB;eAEeJ,K","sourcesContent":["import {applyMiddleware, createStore} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport rootReducer from './appReducer';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleWares = [sagaMiddleware];\nif (__DEV__) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const createFlipperMiddleware = require('rn-redux-middleware-flipper')\n    .default;\n  middleWares.push(createFlipperMiddleware());\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleWares)),\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"]}