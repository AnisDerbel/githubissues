{"version":3,"sources":["/Users/anisderbel/Documents/apcgithubissues/src/components/__tests__/pagination.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import 'jest';\nimport React from 'react';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { mount, ReactWrapper, configure } from 'enzyme';\nimport Adapter from '@wojtekmaj/enzyme-adapter-react-17';\nconfigure({ adapter: new Adapter() });\nimport Pagination from '../Pagination';\nimport { Provider } from 'react-redux';\nimport configureMockStore, { MockStoreEnhanced } from 'redux-mock-store';\n\nimport { initialState } from '../../redux/repo/reducer';\nimport theme from '../../theme';\nimport { repoActions } from '../../redux/repo/actions';\nimport { Store } from 'redux';\n\nconst getRepoIssuesMock = jest.spyOn(repoActions, 'getRepoIssues');\n\nconst mockStore = configureMockStore();\nlet mockedStore: MockStoreEnhanced;\ntype ComponentWrapper = ReactWrapper<void, void, React.Component>;\n\nlet component: ComponentWrapper;\nconst onPress = jest.fn();\nconst getPreviousButton = () => component.find({ testID: 'previous__button' }).first();\nconst getNextButton = () => component.find({ testID: 'next__button' }).first();\n\ndescribe('Pagination', () => {\n  const renderComponent = (store: Store): ComponentWrapper =>\n    mount(\n      <PaperProvider theme={theme}>\n        <Pagination />\n      </PaperProvider>,\n      {\n        wrappingComponent: Provider,\n        wrappingComponentProps: { store },\n      },\n    );\n\n  describe('initial state', () => {\n    const repoState = {\n      ...initialState,\n      page: 1,\n    };\n    beforeEach(() => {\n      Pagination.prototype.onPressNext = onPress;\n      mockedStore = mockStore({ repo: repoState }) as MockStoreEnhanced;\n      component = renderComponent(mockedStore);\n    });\n\n    it('should show disabled previous button', () => {\n      expect(getPreviousButton().props()).toMatchObject({\n        children: expect.anything(),\n        disabled: true,\n        mode: 'contained',\n        onPress: expect.any(Function),\n      });\n    });\n    describe('on press next button', () => {\n      beforeEach(() => {\n        getNextButton().props().onPress();\n        mockedStore = mockStore({\n          repo: {\n            ...initialState,\n            isLoading: true,\n          },\n        }) as MockStoreEnhanced;\n        component = renderComponent(mockedStore);\n      });\n      it('should dispatch getRepoIssues action with incremented page number ', async () => {\n        expect(getRepoIssuesMock).toHaveBeenCalledTimes(1);\n        expect(getRepoIssuesMock).toHaveBeenCalledWith({ page: repoState.page + 1 });\n      });\n      it('should be disabled + loading', () => {\n        expect(getNextButton().props()).toMatchObject({\n          children: expect.anything(),\n          disabled: true,\n          loading: true,\n          mode: 'contained',\n          onPress: expect.any(Function),\n        });\n        expect(getPreviousButton().props()).toMatchObject({\n          children: expect.anything(),\n          disabled: true,\n          mode: 'contained',\n          onPress: expect.any(Function),\n        });\n      });\n    });\n    describe('on press previous button', () => {\n      beforeEach(() => {\n        getPreviousButton().props().onPress();\n      });\n      it('should dispatch getRepoIssues action with decremented page number ', () => {\n        expect(getRepoIssuesMock).toHaveBeenCalled();\n        expect(getRepoIssuesMock).toHaveBeenCalledWith({ page: repoState.page - 1 });\n      });\n    });\n  });\n});\n"]}