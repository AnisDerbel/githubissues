e7288a68332dada832e4ec731ecbb19e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNativePaper = require("react-native-paper");

var _reactNativeParsedText = _interopRequireDefault(require("react-native-parsed-text"));

function cov_13bxqes2hp() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/components/Title.tsx";
  var hash = "3bb4dd5cc4712d0da7b4e710d4432ca312c16cdf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/components/Title.tsx",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 19
        },
        end: {
          line: 9,
          column: 1
        }
      },
      "1": {
        start: {
          line: 6,
          column: 18
        },
        end: {
          line: 6,
          column: 29
        }
      },
      "2": {
        start: {
          line: 7,
          column: 16
        },
        end: {
          line: 7,
          column: 45
        }
      },
      "3": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 8,
          column: 63
        }
      },
      "4": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "5": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 26
        }
      },
      "6": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 31,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 19
          },
          end: {
            line: 5,
            column: 20
          }
        },
        loc: {
          start: {
            line: 5,
            column: 47
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 14
          },
          end: {
            line: 11,
            column: 15
          }
        },
        loc: {
          start: {
            line: 11,
            column: 50
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 11
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 8,
            column: 37
          },
          end: {
            line: 8,
            column: 45
          }
        }, {
          start: {
            line: 8,
            column: 48
          },
          end: {
            line: 8,
            column: 62
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 14
          }
        }, {
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 34
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3bb4dd5cc4712d0da7b4e710d4432ca312c16cdf"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_13bxqes2hp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_13bxqes2hp();
cov_13bxqes2hp().s[0]++;

var renderText = function renderText(matchingString) {
  cov_13bxqes2hp().f[0]++;
  var pattern = (cov_13bxqes2hp().s[1]++, /`([^`]*)`/);
  var match = (cov_13bxqes2hp().s[2]++, matchingString.match(pattern));
  cov_13bxqes2hp().s[3]++;
  return (cov_13bxqes2hp().b[1][0]++, match) && (cov_13bxqes2hp().b[1][1]++, match.length > 1) ? (cov_13bxqes2hp().b[0][0]++, match[1]) : (cov_13bxqes2hp().b[0][1]++, matchingString);
};

cov_13bxqes2hp().s[4]++;

var Title = function Title(_ref) {
  var children = _ref.children;
  cov_13bxqes2hp().f[1]++;
  var theme = (cov_13bxqes2hp().s[5]++, (0, _reactNativePaper.useTheme)());
  cov_13bxqes2hp().s[6]++;
  return _react.default.createElement(_reactNativeParsedText.default, {
    style: [theme.variants.body, {
      color: theme.colors.primary,
      marginRight: theme.spacing.m
    }],
    parse: [{
      pattern: /`([^`]*)`/,
      style: {
        backgroundColor: theme.colors.accent,
        color: theme.colors.badge
      },
      renderText: renderText
    }]
  }, children);
};

var _default = Title;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRpdGxlLnRzeCJdLCJuYW1lcyI6WyJyZW5kZXJUZXh0IiwibWF0Y2hpbmdTdHJpbmciLCJwYXR0ZXJuIiwibWF0Y2giLCJsZW5ndGgiLCJUaXRsZSIsImNoaWxkcmVuIiwidGhlbWUiLCJ2YXJpYW50cyIsImJvZHkiLCJjb2xvciIsImNvbG9ycyIsInByaW1hcnkiLCJtYXJnaW5SaWdodCIsInNwYWNpbmciLCJtIiwic3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJhY2NlbnQiLCJiYWRnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFDQyxjQUFELEVBQTRCO0FBQUE7QUFDN0MsTUFBTUMsT0FBTyw2QkFBRyxXQUFILENBQWI7QUFDQSxNQUFNQyxLQUFLLDZCQUFHRixjQUFjLENBQUNFLEtBQWYsQ0FBcUJELE9BQXJCLENBQUgsQ0FBWDtBQUY2QztBQUc3QyxTQUFPLDZCQUFBQyxLQUFLLGtDQUFJQSxLQUFLLENBQUNDLE1BQU4sR0FBZSxDQUFuQixDQUFMLGdDQUE0QkQsS0FBSyxDQUFDLENBQUQsQ0FBakMsaUNBQXVDRixjQUF2QyxDQUFQO0FBQ0QsQ0FKRDs7OztBQU1BLElBQU1JLEtBQUssR0FBRyxTQUFSQSxLQUFRLE9BQW9DO0FBQUEsTUFBbENDLFFBQWtDLFFBQWxDQSxRQUFrQztBQUFBO0FBQ2hELE1BQU1DLEtBQUssNkJBQUcsaUNBQUgsQ0FBWDtBQURnRDtBQUVoRCxTQUNFLDZCQUFDLDhCQUFEO0FBQ0UsSUFBQSxLQUFLLEVBQUUsQ0FDTEEsS0FBSyxDQUFDQyxRQUFOLENBQWVDLElBRFYsRUFFTDtBQUFDQyxNQUFBQSxLQUFLLEVBQUVILEtBQUssQ0FBQ0ksTUFBTixDQUFhQyxPQUFyQjtBQUE4QkMsTUFBQUEsV0FBVyxFQUFFTixLQUFLLENBQUNPLE9BQU4sQ0FBY0M7QUFBekQsS0FGSyxDQURUO0FBS0UsSUFBQSxLQUFLLEVBQUUsQ0FDTDtBQUNFYixNQUFBQSxPQUFPLEVBQUUsV0FEWDtBQUVFYyxNQUFBQSxLQUFLLEVBQUU7QUFDTEMsUUFBQUEsZUFBZSxFQUFFVixLQUFLLENBQUNJLE1BQU4sQ0FBYU8sTUFEekI7QUFFTFIsUUFBQUEsS0FBSyxFQUFFSCxLQUFLLENBQUNJLE1BQU4sQ0FBYVE7QUFGZixPQUZUO0FBTUVuQixNQUFBQSxVQUFVLEVBQVZBO0FBTkYsS0FESztBQUxULEtBZUdNLFFBZkgsQ0FERjtBQW1CRCxDQXJCRDs7ZUF1QmVELEsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHt1c2VUaGVtZX0gZnJvbSAncmVhY3QtbmF0aXZlLXBhcGVyJztcbmltcG9ydCBQYXJzZWRUZXh0IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXJzZWQtdGV4dCc7XG5cbmNvbnN0IHJlbmRlclRleHQgPSAobWF0Y2hpbmdTdHJpbmc6IHN0cmluZykgPT4ge1xuICBjb25zdCBwYXR0ZXJuID0gL2AoW15gXSopYC87XG4gIGNvbnN0IG1hdGNoID0gbWF0Y2hpbmdTdHJpbmcubWF0Y2gocGF0dGVybik7XG4gIHJldHVybiBtYXRjaCAmJiBtYXRjaC5sZW5ndGggPiAxID8gbWF0Y2hbMV0gOiBtYXRjaGluZ1N0cmluZztcbn07XG5cbmNvbnN0IFRpdGxlID0gKHtjaGlsZHJlbn06IHtjaGlsZHJlbjogc3RyaW5nfSkgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIHJldHVybiAoXG4gICAgPFBhcnNlZFRleHRcbiAgICAgIHN0eWxlPXtbXG4gICAgICAgIHRoZW1lLnZhcmlhbnRzLmJvZHksXG4gICAgICAgIHtjb2xvcjogdGhlbWUuY29sb3JzLnByaW1hcnksIG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLm19LFxuICAgICAgXX1cbiAgICAgIHBhcnNlPXtbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvYChbXmBdKilgLyxcbiAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMuYWNjZW50LFxuICAgICAgICAgICAgY29sb3I6IHRoZW1lLmNvbG9ycy5iYWRnZSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHJlbmRlclRleHQsXG4gICAgICAgIH0sXG4gICAgICBdfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1BhcnNlZFRleHQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBUaXRsZTtcbiJdfQ==