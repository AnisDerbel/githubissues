c824dc44e81f50374317a1df8c50423f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.showErrorAlert = showErrorAlert;
exports.sum = exports.interceptors = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _reactNativeFlashMessage = require("react-native-flash-message");

var _CustomDropdownAlert = require("../../components/CustomDropdownAlert");

function cov_1c3r4pj5oc() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/redux/interceptors/interceptors.ts";
  var hash = "d42a476f5b459eed6387c266324b59de9c977b0a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/redux/interceptors/interceptors.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 25,
          column: 1
        }
      },
      "1": {
        start: {
          line: 11,
          column: 2
        },
        end: {
          line: 22,
          column: 7
        }
      },
      "2": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 39
        }
      },
      "3": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 17,
          column: 7
        }
      },
      "4": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 22,
          column: 7
        }
      },
      "5": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "6": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "7": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "8": {
        start: {
          line: 28,
          column: 42
        },
        end: {
          line: 28,
          column: 45
        }
      },
      "9": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 30,
          column: 16
        }
      },
      "10": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "11": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 34,
          column: 22
        }
      },
      "12": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 35
        }
      },
      "13": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "14": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "15": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 44,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 25
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 54
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 27,
            column: 29
          }
        },
        loc: {
          start: {
            line: 27,
            column: 55
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 36
          }
        },
        loc: {
          start: {
            line: 28,
            column: 42
          },
          end: {
            line: 28,
            column: 45
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 19
          },
          end: {
            line: 33,
            column: 20
          }
        },
        loc: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 33
      },
      "4": {
        name: "showErrorAlert",
        decl: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 30
          }
        },
        loc: {
          start: {
            line: 37,
            column: 63
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 22,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 22,
            column: 7
          }
        }, {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 22,
            column: 7
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        }, {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 42,
            column: 3
          }
        }],
        line: 40
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d42a476f5b459eed6387c266324b59de9c977b0a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_1c3r4pj5oc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1c3r4pj5oc();
cov_1c3r4pj5oc().s[0]++;

var errorInterceptor = function errorInterceptor(error) {
  var _error$response;

  return _regenerator.default.async(function errorInterceptor$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          cov_1c3r4pj5oc().f[0]++;
          cov_1c3r4pj5oc().s[1]++;

          if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {
            cov_1c3r4pj5oc().b[0][0]++;
            cov_1c3r4pj5oc().s[2]++;
            console.log('show message please');
            cov_1c3r4pj5oc().s[3]++;
            (0, _reactNativeFlashMessage.showMessage)({
              message: 'Organization and/or repository not found!',
              type: 'danger'
            });
          } else {
            cov_1c3r4pj5oc().b[0][1]++;
            cov_1c3r4pj5oc().s[4]++;
            (0, _reactNativeFlashMessage.showMessage)({
              message: 'Something went wrong',
              type: 'danger'
            });
          }

          cov_1c3r4pj5oc().s[5]++;
          return _context.abrupt("return", Promise.reject(error));

        case 5:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, null, Promise);
};

cov_1c3r4pj5oc().s[6]++;

var interceptors = function interceptors(client) {
  cov_1c3r4pj5oc().f[1]++;
  cov_1c3r4pj5oc().s[7]++;
  client.interceptors.response.use(function (res) {
    cov_1c3r4pj5oc().f[2]++;
    cov_1c3r4pj5oc().s[8]++;
    return res;
  }, errorInterceptor);
  cov_1c3r4pj5oc().s[9]++;
  return client;
};

exports.interceptors = interceptors;
cov_1c3r4pj5oc().s[10]++;

var sum = function sum() {
  cov_1c3r4pj5oc().f[3]++;
  cov_1c3r4pj5oc().s[11]++;
  console.log('blah');
};

exports.sum = sum;

function showErrorAlert(title, message) {
  cov_1c3r4pj5oc().f[4]++;

  var _ref = (cov_1c3r4pj5oc().s[12]++, _CustomDropdownAlert.alertRef),
      alert = _ref.current;

  cov_1c3r4pj5oc().s[13]++;

  if (!alert) {
    cov_1c3r4pj5oc().b[1][0]++;
    cov_1c3r4pj5oc().s[14]++;
    return;
  } else {
    cov_1c3r4pj5oc().b[1][1]++;
  }

  cov_1c3r4pj5oc().s[15]++;
  return alert.alertWithType('error', title, message);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludGVyY2VwdG9ycy50cyJdLCJuYW1lcyI6WyJlcnJvckludGVyY2VwdG9yIiwiZXJyb3IiLCJyZXNwb25zZSIsInN0YXR1cyIsImNvbnNvbGUiLCJsb2ciLCJtZXNzYWdlIiwidHlwZSIsIlByb21pc2UiLCJyZWplY3QiLCJpbnRlcmNlcHRvcnMiLCJjbGllbnQiLCJ1c2UiLCJyZXMiLCJzdW0iLCJzaG93RXJyb3JBbGVydCIsInRpdGxlIiwiYWxlcnRSZWYiLCJhbGVydCIsImN1cnJlbnQiLCJhbGVydFdpdGhUeXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBT0MsS0FBUDtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFNdkIsY0FBSSxvQkFBQUEsS0FBSyxDQUFDQyxRQUFOLG9FQUFnQkMsTUFBaEIsTUFBMkIsR0FBL0IsRUFBb0M7QUFBQTtBQUFBO0FBQ2xDQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWjtBQURrQztBQUdsQyxzREFBWTtBQUNWQyxjQUFBQSxPQUFPLEVBQUUsMkNBREM7QUFFVkMsY0FBQUEsSUFBSSxFQUFFO0FBRkksYUFBWjtBQUlELFdBUEQsTUFRRTtBQUFBO0FBQUE7QUFBQSxzREFBWTtBQUNWRCxjQUFBQSxPQUFPLEVBQUUsc0JBREM7QUFFVkMsY0FBQUEsSUFBSSxFQUFFO0FBRkksYUFBWjtBQUdHOztBQWpCa0I7QUFBQSwyQ0FtQmhCQyxPQUFPLENBQUNDLE1BQVIsQ0FBZVIsS0FBZixDQW5CZ0I7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBekI7Ozs7QUFzQk8sSUFBTVMsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsTUFBRCxFQUEyQjtBQUFBO0FBQUE7QUFDckRBLEVBQUFBLE1BQU0sQ0FBQ0QsWUFBUCxDQUFvQlIsUUFBcEIsQ0FBNkJVLEdBQTdCLENBQWlDLFVBQUFDLEdBQUcsRUFBSUE7QUFBQUE7QUFBQUE7QUFBQUEsV0FBQUEsR0FBRztBQUFBLEdBQTNDLEVBQTZDYixnQkFBN0M7QUFEcUQ7QUFHckQsU0FBT1csTUFBUDtBQUNELENBSk07Ozs7O0FBTUEsSUFBTUcsR0FBRyxHQUFHLFNBQU5BLEdBQU0sR0FBTTtBQUFBO0FBQUE7QUFDdkJWLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE1BQVo7QUFDRCxDQUZNOzs7O0FBSUEsU0FBU1UsY0FBVCxDQUF3QkMsS0FBeEIsRUFBdUNWLE9BQXZDLEVBQXdEO0FBQUE7O0FBQUEsd0NBQ3BDVyw2QkFEb0M7QUFBQSxNQUM3Q0MsS0FENkMsUUFDdERDLE9BRHNEOztBQUFBOztBQUc3RCxNQUFJLENBQUNELEtBQUwsRUFBWTtBQUFBO0FBQUE7QUFDVjtBQUNELEdBRkQ7QUFBQTtBQUFBOztBQUg2RDtBQU83RCxTQUFPQSxLQUFLLENBQUNFLGFBQU4sQ0FBb0IsT0FBcEIsRUFBNkJKLEtBQTdCLEVBQW9DVixPQUFwQyxDQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0F4aW9zSW5zdGFuY2UsIEF4aW9zRXJyb3J9IGZyb20gJ2F4aW9zJztcbmltcG9ydCB7c2hvd01lc3NhZ2V9IGZyb20gJ3JlYWN0LW5hdGl2ZS1mbGFzaC1tZXNzYWdlJztcbmltcG9ydCB7YWxlcnRSZWZ9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQ3VzdG9tRHJvcGRvd25BbGVydCc7XG5cbmNvbnN0IGVycm9ySW50ZXJjZXB0b3IgPSBhc3luYyAoZXJyb3I6IEF4aW9zRXJyb3IpID0+IHtcbiAgLy8gc3VtKCk7XG4gIC8vIGlmIChlcnJvci5yZXNwb25zZT8uc3RhdHVzID09PSA0MDQpXG4gIC8vICAgc2hvd0Vycm9yQWxlcnQoJ05vdCBmb3VuZCcsICdPcmdhbml6YXRpb24gYW5kL29yIHJlcG9zaXRvcnkgbm90IGZvdW5kIScpO1xuICAvLyBlbHNlIHNob3dFcnJvckFsZXJ0KCdOb3QnLCAnU29tZXRoaW5nIHdlbnQgd3JvbmcnKTtcblxuICBpZiAoZXJyb3IucmVzcG9uc2U/LnN0YXR1cyA9PT0gNDA0KSB7XG4gICAgY29uc29sZS5sb2coJ3Nob3cgbWVzc2FnZSBwbGVhc2UnKTtcblxuICAgIHNob3dNZXNzYWdlKHtcbiAgICAgIG1lc3NhZ2U6ICdPcmdhbml6YXRpb24gYW5kL29yIHJlcG9zaXRvcnkgbm90IGZvdW5kIScsXG4gICAgICB0eXBlOiAnZGFuZ2VyJyxcbiAgICB9KTtcbiAgfSBlbHNlXG4gICAgc2hvd01lc3NhZ2Uoe1xuICAgICAgbWVzc2FnZTogJ1NvbWV0aGluZyB3ZW50IHdyb25nJyxcbiAgICAgIHR5cGU6ICdkYW5nZXInLFxuICAgIH0pO1xuXG4gIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG59O1xuXG5leHBvcnQgY29uc3QgaW50ZXJjZXB0b3JzID0gKGNsaWVudDogQXhpb3NJbnN0YW5jZSkgPT4ge1xuICBjbGllbnQuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShyZXMgPT4gcmVzLCBlcnJvckludGVyY2VwdG9yKTtcblxuICByZXR1cm4gY2xpZW50O1xufTtcblxuZXhwb3J0IGNvbnN0IHN1bSA9ICgpID0+IHtcbiAgY29uc29sZS5sb2coJ2JsYWgnKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93RXJyb3JBbGVydCh0aXRsZTogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcpIHtcbiAgY29uc3Qge2N1cnJlbnQ6IGFsZXJ0fSA9IGFsZXJ0UmVmO1xuXG4gIGlmICghYWxlcnQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICByZXR1cm4gYWxlcnQuYWxlcnRXaXRoVHlwZSgnZXJyb3InLCB0aXRsZSwgbWVzc2FnZSk7XG59XG4iXX0=