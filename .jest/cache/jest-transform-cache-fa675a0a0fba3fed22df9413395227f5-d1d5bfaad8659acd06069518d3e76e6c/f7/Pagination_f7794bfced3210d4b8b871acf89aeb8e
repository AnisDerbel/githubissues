6b86589e1e33847a7a6b288eb9ec88a7
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _reactNativePaper = require("react-native-paper");

var _reactRedux = require("react-redux");

var _actions = require("../redux/repo/actions");

function cov_1pdrel4fdb() {
  var path = "/Users/anisderbel/Documents/apcgithubissues/src/components/Pagination.tsx";
  var hash = "5be63d20ea93dc070bb85f92958b6b16a09370c6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/anisderbel/Documents/apcgithubissues/src/components/Pagination.tsx",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 19
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "1": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 32
        }
      },
      "2": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 26
        }
      },
      "3": {
        start: {
          line: 12,
          column: 43
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 13,
          column: 44
        }
      },
      "5": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "6": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "7": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 33,
          column: 4
        }
      },
      "8": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 76
        }
      },
      "9": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 76
        }
      },
      "10": {
        start: {
          line: 38,
          column: 15
        },
        end: {
          line: 46,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 19
          },
          end: {
            line: 9,
            column: 20
          }
        },
        loc: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 44
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 17
          },
          end: {
            line: 21,
            column: 18
          }
        },
        loc: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 76
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 17
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 76
          }
        },
        line: 28
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 27
          }
        }, {
          start: {
            line: 20,
            column: 31
          },
          end: {
            line: 20,
            column: 49
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 27
          }
        }, {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 45
          }
        }],
        line: 26
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5be63d20ea93dc070bb85f92958b6b16a09370c6"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    cov_1pdrel4fdb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1pdrel4fdb();
cov_1pdrel4fdb().s[0]++;

var Pagination = function Pagination() {
  cov_1pdrel4fdb().f[0]++;
  var dispatch = (cov_1pdrel4fdb().s[1]++, (0, _reactRedux.useDispatch)());
  var theme = (cov_1pdrel4fdb().s[2]++, (0, _reactNativePaper.useTheme)());

  var _ref = (cov_1pdrel4fdb().s[3]++, (0, _reactRedux.useSelector)(function (state) {
    cov_1pdrel4fdb().f[1]++;
    cov_1pdrel4fdb().s[4]++;
    return state.repo;
  })),
      page = _ref.page,
      hasMoreIssues = _ref.hasMoreIssues,
      isLoading = _ref.isLoading;

  var isPreviousDisabled = (cov_1pdrel4fdb().s[5]++, page === 1);
  var isNextDisabled = (cov_1pdrel4fdb().s[6]++, hasMoreIssues === false);
  cov_1pdrel4fdb().s[7]++;
  return _react.default.createElement(_reactNative.View, {
    style: [styles.row, {
      margin: theme.spacing.l
    }]
  }, _react.default.createElement(_reactNativePaper.Button, {
    disabled: (cov_1pdrel4fdb().b[0][0]++, isLoading) || (cov_1pdrel4fdb().b[0][1]++, isPreviousDisabled),
    onPress: function onPress() {
      cov_1pdrel4fdb().f[2]++;
      cov_1pdrel4fdb().s[8]++;
      return dispatch(_actions.repoActions.getRepoIssues({
        page: page - 1
      }));
    },
    mode: "contained"
  }, "Previous"), _react.default.createElement(_reactNativePaper.Button, {
    disabled: (cov_1pdrel4fdb().b[1][0]++, isLoading) || (cov_1pdrel4fdb().b[1][1]++, isNextDisabled),
    loading: isLoading,
    onPress: function onPress() {
      cov_1pdrel4fdb().f[3]++;
      cov_1pdrel4fdb().s[9]++;
      return dispatch(_actions.repoActions.getRepoIssues({
        page: page + 1
      }));
    },
    mode: "contained"
  }, "Next"));
};

var _default = Pagination;
exports.default = _default;
var styles = (cov_1pdrel4fdb().s[10]++, _reactNative.StyleSheet.create({
  container: {},
  row: {
    flexDirection: 'row',
    justifyContent: 'space-between'
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhZ2luYXRpb24udHN4Il0sIm5hbWVzIjpbIlBhZ2luYXRpb24iLCJkaXNwYXRjaCIsInRoZW1lIiwic3RhdGUiLCJyZXBvIiwicGFnZSIsImhhc01vcmVJc3N1ZXMiLCJpc0xvYWRpbmciLCJpc1ByZXZpb3VzRGlzYWJsZWQiLCJpc05leHREaXNhYmxlZCIsInN0eWxlcyIsInJvdyIsIm1hcmdpbiIsInNwYWNpbmciLCJsIiwicmVwb0FjdGlvbnMiLCJnZXRSZXBvSXNzdWVzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImNvbnRhaW5lciIsImZsZXhEaXJlY3Rpb24iLCJqdXN0aWZ5Q29udGVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0EsSUFBTUEsVUFBVSxHQUFHLFNBQWJBLFVBQWEsR0FBTTtBQUFBO0FBQ3ZCLE1BQU1DLFFBQVEsNkJBQUcsOEJBQUgsQ0FBZDtBQUNBLE1BQU1DLEtBQUssNkJBQUcsaUNBQUgsQ0FBWDs7QUFGdUIsdUNBR2tCLDZCQUN2QyxVQUFDQyxLQUFELEVBQThCO0FBQUE7QUFBQTtBQUFBLFdBQUFBLEtBQUssQ0FBQ0MsSUFBTjtBQUFVLEdBREQsQ0FIbEI7QUFBQSxNQUdoQkMsSUFIZ0IsUUFHaEJBLElBSGdCO0FBQUEsTUFHVkMsYUFIVSxRQUdWQSxhQUhVO0FBQUEsTUFHS0MsU0FITCxRQUdLQSxTQUhMOztBQU12QixNQUFNQyxrQkFBa0IsNkJBQUdILElBQUksS0FBSyxDQUFaLENBQXhCO0FBQ0EsTUFBTUksY0FBYyw2QkFBR0gsYUFBYSxLQUFLLEtBQXJCLENBQXBCO0FBUHVCO0FBUXZCLFNBQ0UsNkJBQUMsaUJBQUQ7QUFBTSxJQUFBLEtBQUssRUFBRSxDQUFDSSxNQUFNLENBQUNDLEdBQVIsRUFBYTtBQUFDQyxNQUFBQSxNQUFNLEVBQUVWLEtBQUssQ0FBQ1csT0FBTixDQUFjQztBQUF2QixLQUFiO0FBQWIsS0FDRSw2QkFBQyx3QkFBRDtBQUNFLElBQUEsUUFBUSxFQUFFLDZCQUFBUCxTQUFTLGtDQUFJQyxrQkFBSixDQURyQjtBQUVFLElBQUEsT0FBTyxFQUFFLG1CQUFNO0FBQUE7QUFBQTtBQUFBLGFBQUFQLFFBQVEsQ0FBQ2MscUJBQVlDLGFBQVosQ0FBMEI7QUFBQ1gsUUFBQUEsSUFBSSxFQUFFQSxJQUFJLEdBQUc7QUFBZCxPQUExQixDQUFELENBQVI7QUFBcUQsS0FGdEU7QUFHRSxJQUFBLElBQUksRUFBQztBQUhQLGdCQURGLEVBT0UsNkJBQUMsd0JBQUQ7QUFDRSxJQUFBLFFBQVEsRUFBRSw2QkFBQUUsU0FBUyxrQ0FBSUUsY0FBSixDQURyQjtBQUVFLElBQUEsT0FBTyxFQUFFRixTQUZYO0FBR0UsSUFBQSxPQUFPLEVBQUUsbUJBQU07QUFBQTtBQUFBO0FBQUEsYUFBQU4sUUFBUSxDQUFDYyxxQkFBWUMsYUFBWixDQUEwQjtBQUFDWCxRQUFBQSxJQUFJLEVBQUVBLElBQUksR0FBRztBQUFkLE9BQTFCLENBQUQsQ0FBUjtBQUFxRCxLQUh0RTtBQUlFLElBQUEsSUFBSSxFQUFDO0FBSlAsWUFQRixDQURGO0FBaUJELENBekJEOztlQTJCZUwsVTs7QUFFZixJQUFNVSxNQUFNLDhCQUFHTyx3QkFBV0MsTUFBWCxDQUFrQjtBQUMvQkMsRUFBQUEsU0FBUyxFQUFFLEVBRG9CO0FBSS9CUixFQUFBQSxHQUFHLEVBQUU7QUFDSFMsSUFBQUEsYUFBYSxFQUFFLEtBRFo7QUFFSEMsSUFBQUEsY0FBYyxFQUFFO0FBRmI7QUFKMEIsQ0FBbEIsQ0FBSCxDQUFaIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7VmlldywgU3R5bGVTaGVldH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7dXNlVGhlbWV9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG5pbXBvcnQge3VzZURpc3BhdGNoLCB1c2VTZWxlY3Rvcn0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IHtJQXBwbGljYXRpb25TdGF0ZX0gZnJvbSAnLi4vcmVkdXgvYXBwUmVkdWNlcic7XG5pbXBvcnQge3JlcG9BY3Rpb25zfSBmcm9tICcuLi9yZWR1eC9yZXBvL2FjdGlvbnMnO1xuaW1wb3J0IHtCdXR0b259IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG5cbmNvbnN0IFBhZ2luYXRpb24gPSAoKSA9PiB7XG4gIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcbiAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICBjb25zdCB7cGFnZSwgaGFzTW9yZUlzc3VlcywgaXNMb2FkaW5nfSA9IHVzZVNlbGVjdG9yKFxuICAgIChzdGF0ZTogSUFwcGxpY2F0aW9uU3RhdGUpID0+IHN0YXRlLnJlcG8sXG4gICk7XG4gIGNvbnN0IGlzUHJldmlvdXNEaXNhYmxlZCA9IHBhZ2UgPT09IDE7XG4gIGNvbnN0IGlzTmV4dERpc2FibGVkID0gaGFzTW9yZUlzc3VlcyA9PT0gZmFsc2U7XG4gIHJldHVybiAoXG4gICAgPFZpZXcgc3R5bGU9e1tzdHlsZXMucm93LCB7bWFyZ2luOiB0aGVtZS5zcGFjaW5nLmx9XX0+XG4gICAgICA8QnV0dG9uXG4gICAgICAgIGRpc2FibGVkPXtpc0xvYWRpbmcgfHwgaXNQcmV2aW91c0Rpc2FibGVkfVxuICAgICAgICBvblByZXNzPXsoKSA9PiBkaXNwYXRjaChyZXBvQWN0aW9ucy5nZXRSZXBvSXNzdWVzKHtwYWdlOiBwYWdlIC0gMX0pKX1cbiAgICAgICAgbW9kZT1cImNvbnRhaW5lZFwiPlxuICAgICAgICBQcmV2aW91c1xuICAgICAgPC9CdXR0b24+XG4gICAgICA8QnV0dG9uXG4gICAgICAgIGRpc2FibGVkPXtpc0xvYWRpbmcgfHwgaXNOZXh0RGlzYWJsZWR9XG4gICAgICAgIGxvYWRpbmc9e2lzTG9hZGluZ31cbiAgICAgICAgb25QcmVzcz17KCkgPT4gZGlzcGF0Y2gocmVwb0FjdGlvbnMuZ2V0UmVwb0lzc3Vlcyh7cGFnZTogcGFnZSArIDF9KSl9XG4gICAgICAgIG1vZGU9XCJjb250YWluZWRcIj5cbiAgICAgICAgTmV4dFxuICAgICAgPC9CdXR0b24+XG4gICAgPC9WaWV3PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUGFnaW5hdGlvbjtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICAvLyBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgfSxcbiAgcm93OiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcbiAgfSxcbn0pO1xuIl19