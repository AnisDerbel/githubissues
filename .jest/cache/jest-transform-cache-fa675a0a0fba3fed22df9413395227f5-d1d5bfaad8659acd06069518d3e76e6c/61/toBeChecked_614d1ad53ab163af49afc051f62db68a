9ba5736cde6bdf9b6101d0bc05905216
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _name = _interopRequireDefault(require("../utils/name"));

var _html = _interopRequireDefault(require("../utils/html"));

var _single = _interopRequireDefault(require("../utils/single"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function toBeChecked(enzymeWrapper) {
  var pass = false;
  var props = enzymeWrapper.props();

  if (props.hasOwnProperty('defaultChecked') && typeof props.defaultChecked === 'boolean') {
    pass = props.defaultChecked;
  }

  if (props.hasOwnProperty('checked') && typeof props.checked === 'boolean') {
    pass = props.checked;
  }

  return {
    pass: pass,
    message: "Expected \"" + (0, _name.default)(enzymeWrapper) + "\" to be checked but it wasn't.",
    negatedMessage: "Expected \"" + (0, _name.default)(enzymeWrapper) + "\" not to be checked but it was.",
    contextualInformation: {
      actual: "Node HTML output: " + (0, _html.default)(enzymeWrapper)
    }
  };
}

var _default = (0, _single.default)(toBeChecked);

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvQmVDaGVja2VkLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIl9uYW1lIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfaHRtbCIsIl9zaW5nbGUiLCJvYmoiLCJfX2VzTW9kdWxlIiwidG9CZUNoZWNrZWQiLCJlbnp5bWVXcmFwcGVyIiwicGFzcyIsInByb3BzIiwiaGFzT3duUHJvcGVydHkiLCJkZWZhdWx0Q2hlY2tlZCIsImNoZWNrZWQiLCJtZXNzYWdlIiwibmVnYXRlZE1lc3NhZ2UiLCJjb250ZXh0dWFsSW5mb3JtYXRpb24iLCJhY3R1YWwiLCJfZGVmYXVsdCIsIm1vZHVsZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFDM0NDLEVBQUFBLEtBQUssRUFBRTtBQURvQyxDQUE3QztBQUdBRCxPQUFPLENBQUNFLE9BQVIsR0FBa0IsS0FBSyxDQUF2Qjs7QUFFQSxJQUFJQyxLQUFLLEdBQUdDLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsZUFBRCxDQUFSLENBQWxDOztBQUVBLElBQUlDLEtBQUssR0FBR0Ysc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxlQUFELENBQVIsQ0FBbEM7O0FBRUEsSUFBSUUsT0FBTyxHQUFHSCxzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLGlCQUFELENBQVIsQ0FBcEM7O0FBRUEsU0FBU0Qsc0JBQVQsQ0FBZ0NJLEdBQWhDLEVBQXFDO0FBQUUsU0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCO0FBQUVOLElBQUFBLE9BQU8sRUFBRU07QUFBWCxHQUFyQztBQUF3RDs7QUFTL0YsU0FBU0UsV0FBVCxDQUFxQkMsYUFBckIsRUFBb0M7QUFDbEMsTUFBSUMsSUFBSSxHQUFHLEtBQVg7QUFDQSxNQUFNQyxLQUFLLEdBQUdGLGFBQWEsQ0FBQ0UsS0FBZCxFQUFkOztBQUVBLE1BQUlBLEtBQUssQ0FBQ0MsY0FBTixDQUFxQixnQkFBckIsS0FBMEMsT0FBT0QsS0FBSyxDQUFDRSxjQUFiLEtBQWdDLFNBQTlFLEVBQXlGO0FBQ3ZGSCxJQUFBQSxJQUFJLEdBQUdDLEtBQUssQ0FBQ0UsY0FBYjtBQUNEOztBQUdELE1BQUlGLEtBQUssQ0FBQ0MsY0FBTixDQUFxQixTQUFyQixLQUFtQyxPQUFPRCxLQUFLLENBQUNHLE9BQWIsS0FBeUIsU0FBaEUsRUFBMkU7QUFDekVKLElBQUFBLElBQUksR0FBR0MsS0FBSyxDQUFDRyxPQUFiO0FBQ0Q7O0FBRUQsU0FBTztBQUNMSixJQUFBQSxJQUFJLEVBQUpBLElBREs7QUFFTEssSUFBQUEsT0FBTyxrQkFBZSxDQUFDLEdBQUdkLEtBQUssQ0FBQ0QsT0FBVixFQUFtQlMsYUFBbkIsQ0FBZixvQ0FGRjtBQUdMTyxJQUFBQSxjQUFjLGtCQUFlLENBQUMsR0FBR2YsS0FBSyxDQUFDRCxPQUFWLEVBQW1CUyxhQUFuQixDQUFmLHFDQUhUO0FBSUxRLElBQUFBLHFCQUFxQixFQUFFO0FBQ3JCQyxNQUFBQSxNQUFNLHlCQUF1QixDQUFDLEdBQUdkLEtBQUssQ0FBQ0osT0FBVixFQUFtQlMsYUFBbkI7QUFEUjtBQUpsQixHQUFQO0FBUUQ7O0FBRUQsSUFBSVUsUUFBUSxHQUFHLENBQUMsR0FBR2QsT0FBTyxDQUFDTCxPQUFaLEVBQXFCUSxXQUFyQixDQUFmOztBQUVBVixPQUFPLENBQUNFLE9BQVIsR0FBa0JtQixRQUFsQjtBQUNBQyxNQUFNLENBQUN0QixPQUFQLEdBQWlCQSxPQUFPLENBQUNFLE9BQXpCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfbmFtZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3V0aWxzL25hbWVcIikpO1xuXG52YXIgX2h0bWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlscy9odG1sXCIpKTtcblxudmFyIF9zaW5nbGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlscy9zaW5nbGVcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlULXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuICpcbiAqXG4gKiBAcHJvdmlkZXNNb2R1bGUgdG9CZUNoZWNrZWRBc3NlcnRpb25cbiAqIFxuICovXG5mdW5jdGlvbiB0b0JlQ2hlY2tlZChlbnp5bWVXcmFwcGVyKSB7XG4gIGxldCBwYXNzID0gZmFsc2U7XG4gIGNvbnN0IHByb3BzID0gZW56eW1lV3JhcHBlci5wcm9wcygpOyAvLyBVc2UgYGRlZmF1bHRDaGVja2VkYCBpZiBwcmVzZW50LlxuXG4gIGlmIChwcm9wcy5oYXNPd25Qcm9wZXJ0eSgnZGVmYXVsdENoZWNrZWQnKSAmJiB0eXBlb2YgcHJvcHMuZGVmYXVsdENoZWNrZWQgPT09ICdib29sZWFuJykge1xuICAgIHBhc3MgPSBwcm9wcy5kZWZhdWx0Q2hlY2tlZDtcbiAgfSAvLyBVc2UgYGNoZWNrZWRgIGlmIHByZXNlbnQsIHdpbGwgdGFrZSBwcmVjZWRlbmNlIG92ZXIgYGRlZmF1bHRDaGVja2VkYC5cblxuXG4gIGlmIChwcm9wcy5oYXNPd25Qcm9wZXJ0eSgnY2hlY2tlZCcpICYmIHR5cGVvZiBwcm9wcy5jaGVja2VkID09PSAnYm9vbGVhbicpIHtcbiAgICBwYXNzID0gcHJvcHMuY2hlY2tlZDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGFzcyxcbiAgICBtZXNzYWdlOiBgRXhwZWN0ZWQgXCIkeygwLCBfbmFtZS5kZWZhdWx0KShlbnp5bWVXcmFwcGVyKX1cIiB0byBiZSBjaGVja2VkIGJ1dCBpdCB3YXNuJ3QuYCxcbiAgICBuZWdhdGVkTWVzc2FnZTogYEV4cGVjdGVkIFwiJHsoMCwgX25hbWUuZGVmYXVsdCkoZW56eW1lV3JhcHBlcil9XCIgbm90IHRvIGJlIGNoZWNrZWQgYnV0IGl0IHdhcy5gLFxuICAgIGNvbnRleHR1YWxJbmZvcm1hdGlvbjoge1xuICAgICAgYWN0dWFsOiBgTm9kZSBIVE1MIG91dHB1dDogJHsoMCwgX2h0bWwuZGVmYXVsdCkoZW56eW1lV3JhcHBlcil9YFxuICAgIH1cbiAgfTtcbn1cblxudmFyIF9kZWZhdWx0ID0gKDAsIF9zaW5nbGUuZGVmYXVsdCkodG9CZUNoZWNrZWQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0OyJdfQ==