{"version":3,"sources":["deepEqualIdentMap.js"],"names":["isEqual","require","_comparator","deepEqualIdentMap","a","b","callback","thisArg","map","Map","_map","has","set","get","result","bind","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAKA,SAASE,iBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAiCC,QAAjC,EAA2CC,OAA3C,EAAoD;AAClD,MAAIC,GAAG,GAAG,IAAIC,GAAJ,EAAV;;AAIA,WAASC,IAAT,CAAcN,CAAd,EAAiBC,CAAjB,EAAoB;AAClB,QAAI,CAACG,GAAG,CAACG,GAAJ,CAAQP,CAAR,CAAD,IAAe,CAACI,GAAG,CAACG,GAAJ,CAAQN,CAAR,CAApB,EAAgC;AAC9BG,MAAAA,GAAG,CAACI,GAAJ,CAAQR,CAAR,EAAWC,CAAX;AACAG,MAAAA,GAAG,CAACI,GAAJ,CAAQP,CAAR,EAAWD,CAAX;AACD,KAHD,MAGO,IAAII,GAAG,CAACK,GAAJ,CAAQT,CAAR,MAAeC,CAAf,IAAoBG,GAAG,CAACK,GAAJ,CAAQR,CAAR,MAAeD,CAAvC,EAA0C;AAC/C,aAAO,KAAP;AACD;AAIF;;AAED,MAAIU,MAAM,GAAGd,OAAO,CAChBI,CADgB,EAEhBC,CAFgB,EAGhBH,WAAW,CAACa,IAAZ,CAAiB,IAAjB,EAAuBL,IAAvB,EAA6BJ,QAA7B,EAAuCC,OAAvC,CAHgB,CAApB;AAMA,SAAOO,MAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBd,iBAAjB","sourcesContent":["'use strict';\n\nvar isEqual = require('lodash.isequal');\nvar _comparator = require('./_comparator');\n\n/**\n * @see deepEqualIdentTag\n */\nfunction deepEqualIdentMap(a, b, callback, thisArg) {\n  var map = new Map();\n\n  // Defined in here so that this module can be loaded even if maps are not\n  // supported.\n  function _map(a, b) { // eslint-disable-line no-shadow\n    if (!map.has(a) && !map.has(b)) {\n      map.set(a, b);\n      map.set(b, a);\n    } else if (map.get(a) !== b || map.get(b) !== a) {\n      return false;\n    }\n    // map.get(a) === b && map.get(b) === a only tells us that the objects are\n    // \"identical\" but not whether a and b are equal, so we leave this to\n    // isEqual\n  }\n\n  var result = isEqual(\n      a,\n      b,\n      _comparator.bind(null, _map, callback, thisArg)\n  );\n\n  return result;\n}\n\nmodule.exports = deepEqualIdentMap;\n"]}